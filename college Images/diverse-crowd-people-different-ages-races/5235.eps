%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Diverse crowd of people of different ages and races.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 4/3/2020
%%BoundingBox: 0 0 2848 1780
%%HiResBoundingBox: 0 0 2848 1780
%%CropBox: 0 0 2848 1780
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Diverse crowd of people of different ages and races</rdf:li>
               <rdf:li xml:lang="x-repair">Diverse crowd of people of different ages and races</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Diverse crowd of people of different ages and races. Multiracial community members standing together. Vector illustration for civil society, diversity, multinational public concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>people</rdf:li>
               <rdf:li>diverse</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>crowd</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>society</rdf:li>
               <rdf:li>multicultural</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>stand</rdf:li>
               <rdf:li>member</rdf:li>
               <rdf:li>portrait</rdf:li>
               <rdf:li>boy</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>community</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>old</rdf:li>
               <rdf:li>smiling</rdf:li>
               <rdf:li>together</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>child</rdf:li>
               <rdf:li>civil</rdf:li>
               <rdf:li>cute</rdf:li>
               <rdf:li>different</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>multinational</rdf:li>
               <rdf:li>multiracial</rdf:li>
               <rdf:li>public</rdf:li>
               <rdf:li>various</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>Caucasian</rdf:li>
               <rdf:li>African American</rdf:li>
               <rdf:li>senior</rdf:li>
               <rdf:li>children</rdf:li>
               <rdf:li>age</rdf:li>
               <rdf:li>race</rdf:li>
               <rdf:li>togetherness</rdf:li>
               <rdf:li>ethnicity</rdf:li>
               <rdf:li>team</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>variation</rdf:li>
               <rdf:li>friendship</rdf:li>
               <rdf:li>multiethnic</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2020-04-03T15:55:56+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-04-03T15:55:56+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-04-03T15:55:55+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXVGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqUtxHHsTVvAZCUwGUYEoZ7yVvs0UfecqOUt&#xA;oxhSaSRurE/TlZkWYAW4ErklkT7LEZISIQYgoy3uRJ8LbP8Ary+GS2icKV8sYOxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVzMFBJNAO+AmlAQU12zfDHsvj3OUTyXybo&#xA;4+9D5U2uxV2KuxV2KuBIII2I6HChM4pPUjDePX55lRNhxpCiuySHYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqpS3Ece1at/KMhKYDKMCUFLM8h+I7dh2zHlIlvjEBZkWTsVdi&#xA;rsVdirsVdiqMsW+Bl8DX78vwnZpyhE5c1OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvIdP/AD31O+82&#xA;waXD5Vuv0RcXX1SHUAXLNyk9JZSCioq16jltlxhAD6hxdyAJnfhNd717KUtO6RqXdgqDqzGgH0nF&#xA;IFt4odirQdCoYMCpFQa7EYqlPmjzFDoOh3WqGI3RtwvG3jIDOzusaiu9PiYV2yvJlERbkafTnLMR&#xA;5Wx7yV+Yt5r9zc2t7pEunzQr6iMxYoVqF41ZVPKp8Mox6sScvV9neEARK0p/OD8ytW8q2FhFpdq0&#xA;+oalI4hIFUVYQpfkKMTXmKAU7+GZWGp2ZHhiHXyiRQiLJS/8kPOOueY9F1FNdklm1OyuQHkkjWP9&#xA;3IgKABVQVBVq7YNVCAIMK4SyxGW4lzDPv0rYeuYRLVxsaA0qPfpmsOqxg1bljDKrpdc39vBYT3pY&#xA;GG3jeV2JoAI1LGp7bDL8UhP6d2uYMeb5g1D86/zR1a5W7s5zaQ25LCGzhBj61/ecxIW6dzTNycGD&#xA;HtIiz3lwRLLPeINDuD2z8nfPt75w8tyz6iirqVlMYLh0XijgjkjAdjQ0I9vfMHV4BjltyLfhyGQ3&#xA;QXn780dd0LXX0XRdEF/NFAs81zK7hAXqVUIiknYd2FfoyEY4xEGcqtn65GoC2a+V9b/Tvl+w1c27&#xA;WrXkQka2Y8jG3Rl5UWtCOtBleSPDIi7TE2LTTIMmM/mB5yk8p6JHfwadJql1cXCWttaREgtI6s9S&#xA;QrmgWM9FO+W4cYkdzwgdWE5EchZd+VPnu+82Wd699pM2k3VoyB45A3B1kLlShZUOwXfbMjw4xPpk&#xA;JBqkZH6hTOIpoZk5wyLIlSOSEMKjYioxYL8VQ2o6jbWEHrTk0J4qo3JJyvLmjjFyLbiwyyGohZpu&#xA;qQX8bPECvGlQ3v0/Vk4yEoiQ5FhOJjIxPMIzCxdirsVdirsVdirsVdiqyeeCCMyzyLFEv2nchVH0&#xA;nIzmIiyaDKMDI0BZeTwW+oQeffXXUrQ+UVnaeNAlJQ9fVCAii0Ev7Vfs9u+aqWp0vHxb8V872dwM&#xA;Gp8Lh2quVbvS11IToHgdGjPR0IYH6RtmaM/ELjydacPCalzYN+bVvrV/oEENmHmhNwv1qJe4oeBb&#xA;/JD0+mmY+omeHns7Tsrgjk351shfywsPNFj60eoTc9PaMFImcu0cwagVdyKcOtPbKtNkMr7m7tTw&#xA;zVD1foYl/wA5PX19Ho+hWcU5jtbq5kNxHy4q5jVeHLf7K8yc3nZwFyPcHmtbyATH8ntCvvLF9BpF&#xA;xfPO+oWM93dW4YvbrPbzwoHjr9k8LkI1PtcR4Zgy1n5gyIG0SK79wf1OcdH+XEQTvIG+7av1vQPM&#xA;useXrO0Ntqt9BbPOA0EUsiq7MrAoVQnkaOo6DK54ZThKgSAGeLKIZI70bSfQtf8ALtpdsl7qNtbX&#xA;kigQxyzIhZCanjyIrUrmH2bhlMSlEEj3Od2nlETGJIQ/5qnSrjQaGSN9QtZFeCNSDIA3wuD1IBXf&#xA;6Bl+pxSOMmjTiaTNAZQLFlU/LA6ZbeXI1jkjGo3TvLcQllEhIJVBQ704KD9OODHOOK6KNTmhLKRY&#xA;tg2p6jPrHmnWLK81M6Zofl9j9csoecbygxlvVlmWjcQ1fhHh9OQjh8HHE8N5MnInpvyAbcZ8WUrl&#xA;6IdB1+L13SpdOu/L1tOp9XT7q1SQtOvHnFJGCTIrdOSncHL44xj9I2pxjIz373z3q3lLQ9H1S6td&#xA;Pvra/sJpnlt2ikY+hEzfDHIQSCU/mXqMr1urMpxIPTdz9HozGBEo9dnr/wCV+h+XvLHlWS2sdVh1&#xA;H9413qV1G6lFldFBACklVCxigbfvmZkynNIV7g644TiHqFe9JPN+u6VqeptNYVZrWEC5mdeClKsy&#xA;la/EafFWoGYHaukniljEvqyExiPPb9bm9m6mEozrlDc/b+pPJPMltqPki7j8uXX1K/t7ImL1V4vE&#xA;kQo7AfEpIUGm53pm0y6LJp64xY+wuthqI5vpNfoeX+RNb896J+ZWm6bqmrXWqabqjzQiOeeS4rGF&#xA;qknF2YRlWpUj3wwzYs+EyiKlGr965MM8OQAmwbew+bNQ8szKul3t5b/pJWWa2szIBNyAIDcQeQqr&#xA;HfMLLp8k8UjEEhy9NmjDLGyHeUb7ytZLPp0l/BZ6nfsEW2aZUmYAcUEYY1J+LbjkuzsGQYuMg0Sv&#xA;amaMsvDe4DwbS/InnPQvzButN0a6u7C20u7bjqDkoDCQWjf0wQJBKFodqHNnq9dDHjuW5I2Dg6XS&#xA;SyyochzL6ts/rX1OD63xF36afWAn2PU4jnxr25dMx2KT+b5bJLOL6zKsY51VSTyNBTYCpPXMXVSw&#xA;CP700HL0kc/F+6FlKdC82aNZc7eZiiMQUmALbUpRqVPyzCh2thB4dxAcurmZOysxHFsZnn0ZlFJH&#xA;LGskbB43AZHU1BB3BBzbRkCLHJ1MokGjzXYUOxV2KuxV2KuxVp2VFLsQqqCWY7AAdTgJrcpAvYPK&#xA;vNHmGbV71uLEWURIt4+le3M+5zjtfrTmn/QHL9b2Gg0Yww/pnn+pJcwHPTLQNdfTbzqXt2oJ4h4H&#xA;owHiMzNFqjin/RPNw9bpRlh/SHJZqnnvUryRo1iSKzrRoerMP8pv6Z6Z/IOHJhriJMv4hy/seDh2&#xA;pkxZb4eXRV0z8woNK0i+a7tiwtIJrmHgTykaNS4jYnuaUBzFy9gjDAcBvvvz6t38qnLMmQru/U8B&#xA;n1zVvNmsXeqeYj9YujQW8Tj91FGSTwiQ1AUff475j9oiWCMRC4g/jm7bsDDjzymcoEpCqvu36Mg0&#xA;3zRrmm6nFqdveSG6hHANIxcGMsrNGan7DFFqPbNHE8PJ6rNpcUxvEfqY5rWqalquqXF9qUzT3kzk&#xA;yO34BR2UdAM77TcHhx4Ppp8u1UJQySjP6gaRnmy2Nvqqoev1e3/4WJV/41zX9iZePAT/AE5/7on9&#xA;Ll9qY+HLX9GP+5ATvyP5iaQjS7p+VQTaudztuUr+rMrU4v4g6mcerPtPtJ55eUdR6XxcgaGo6UPj&#xA;mi7T1ng4jX1nk7HsjQ/mMov6I8/1JX5g81r5fvJ72dTeR6j8F5EWPIzIoVWDb9Y6gj28evP9mY8m&#xA;tvGTU8e4Pl1+2q9/y7DXShpKmB6J9PP+z8d5bqXnjVtV8oWNqLqWS0eWVJmkJMr+lx4JI9atQNvX&#xA;qd8ydViyYssoS9/z/RfIdGfZYxZIjJEbjb8edcyxfMd3CIsdQurGf1beQoXBV1BIDpUEq3iOmW4c&#xA;sschIcw0ajBHLAwlyKdXuv6SFiFWmu7oKiWcZ+NyW+FX6ADl453g1GDJijnIFQBkP6O1H7LD5zl0&#xA;ubFllh6yNf1t9mQ+XdRb1luEjVZEQrNBIFdRzjoyMN1bZ81HbfakPyPiYzxCcgIn5m+ncQ5/ZnZ8&#xA;vzXBk24RuPl+sFONO1C9015WspjCZxRgApHsQCCKjPOsOqnjlYL2WbTwyCiHkugQ30Xnm5jv5Gnv&#xA;FM3qzyEszk78yTU/EDXPXezs8MuOM4fSR+B8HzvWYpY5yjLmC1+Y5P16zPf023/2WZWVx4Mp8u/n&#xA;fMtjb2nmNZbs6cALK4QCSVwKbTFmTkdh8Xcdd9zy/afY08s4yxmO3Q8v0u+7P7ShijKMwd+57F+U&#xA;P5h3HnXQLi4vY449QspzDP6QKq6FQ0cnEs/EsKgivUYdVp/ClXe4+LJxBA/mFcepryx12hhRae5J&#xA;b/jYZxXbU7zV3B67saFYb7yxjNS7Z6d5CujP5fRCam3keL6NnH/E863sfJxYK/mkj9P6Xk+18fDn&#xA;vvAP6GRZtHVuxV2KuxV2KuxVK/MsM9zpNxaW78JploO1QDUqf9bpmHromeIxidy5ehmIZRKXIPOr&#xA;q3gt9E9NkC3ouV9Ru5Xg+2/geucvkgI4aI9fF+t6iEpSzXfo4f0hKMwnNTp4rOfy7bMQq3cMkgEp&#xA;2pGDyIY+FW2zZQxjJhjEC53QdcZyhmkSahVlhhuUnllZf2WKmniM9U7G02TBpYY8h9YHy8vhyeA7&#xA;T1GPNqJzx/ST8/P4pJ5usrm+0k29sC03ISCMUHML1G/zrmwyRJGziY5AHdS84+W9F0PTtFjgVEv+&#xA;LJdyoHBcqihmYH/KNRnncu0cmbjEjcSdh3bvoOg0McU4yA3jHc99ro/MugWtpbQ22jQ3Mscaia5n&#xA;VQWcD4iBRup7n7s15xSJ5u58OUt7pJPzEs7C01q3jsBxtmtIpQAKUaRmdvmKnb2ztuxD/g43vcvn&#xA;fbJJ1ErFFf8AmGFh8wwOgB/0eNgvbZ2ABp8swPZWROlN/wA8/cHI9oABnFfzR95T7zV5IuJtdk1v&#xA;SZIba2ubx3ijX4WVfVJEqKBwI470B/XmRo+04knCQSYjn09zharQyhj8UkVImh18mbeX9QjgmEMq&#xA;K0Zbn8dOJoNw1exAzV9qaMyrLHcx6eTkdja+MLwy2E+R83lv5lw6yb6Z/qDWugRTstjIDzRlbeNu&#xA;YLVqnT+uZnYeLTxlKcZXmybkd2/L9bf2pPMYRgRWLHsPPbn+pM/y9fSj5H1tb+LnKq3QsZepSZoE&#xA;IpXYVEZ3+7MftuhqB5w/SXN7ElLw6H+qb+6gkMbckB7980perZDpItZvLGqW8396tzay25FK8uEy&#xA;t13p06ZOOYQibAle3u8w4OqhLxIEExq/jy2Sq4RNIhh1G9sBdIJB6cyOY5IiB8LVA+INvsdvvzda&#xA;XsrPk05ImYRn/DV2D18ve6LtHtTAM4qHFKHXz7vOmSaDr2hSWMmowqbaMsEuBINw3wopJFeVdgM0&#xA;faeDPhxQ0hFxviiR1q9vhZLm6DJizZJagGpVwkH4ffSY/prTZb+3gjuU5y1ESkkcjQsQK03oOmaL&#xA;8plonhNDm7g5IDYkbpZqek8PNttqUa/DLA8cx2pyUDifmRX7s7b2O1diWE/w+oe48/t+95T2k01G&#xA;OQddj+j8eSNvdC03U9I1H1bX65fJGpt4lYLIoUn40P8Ast/GlM2XbWryYtTio8MOp6Hy/HK3C7M0&#xA;8MmDJY4p93V5V5us9LsPN2rafpMhl022nZbZmJJA7oS2/wALVXfM7RZ5ZIAy6uDqMYhIgPor/nHC&#xA;ysIfJUlzCoF3dSk3bitTwd1QH5Lmm1mWUs84nlGq+I/W5+PGBhhIdbv5rtYSbVbzU9ZUhbWBgiH+&#xA;clljQD/YLyOcNqQc0smX+Ef2D7N3sdMRhjDF/Ef2k/ax+6cqIwOrSKM15dhEPSfy4jcaVcyE/C89&#xA;FH+qoqfxzqOw4nwyf6TzHbch4gH9Flubp0rsVdirsVdirsVS2aTnIzdug+WYkjZcmIoMD/NnUY9D&#xA;8uHWY7dZpVmjikQnhyVwRWtG3HjTKx2WNVLhvhPfV/qcnH2jLTi64h3XTx3/AJW1Dx/45jc/D1hS&#xA;vz4fwyX+g6V/3v8Asf8AjzZ/omFf3f8Asv2PRPL15+n/AMt7nWTB6U4n4JEh5USN0U1NBXqSTTM7&#xA;s3QY9FqoiR4vM7cw4Wu109VhNCvIbsUhkit7y7ildY25K3FiAfiFeh+edcdbgGxnD/TB0GPQag7j&#xA;HMj+qUTpFhNq2grJqP8Ax+SyvZ8KJJEqtxUoy/FX4Q3XOB7f7VzfmqgfRGhXMSvvHXuev7H7OxeB&#xA;6h65deoruRTafeXehpZ6wivfiP0nY0fi/wBlXBFd+h2zndTOMNQTi+i9vd3O+0Zl4UeP6urzSRhG&#xA;7Rvs6Eqy+BGxzcub4gTj8z5fq58v26FJYbjSLO7LhV5iRlaNhzpyYfu60PTOp7DxRGMyHO+/boeT&#xA;5521llLMQeVnp5lh6azdreQ3bN600HH0zN+8FE+yCGqCPbNr+XhwGAHCDfLbm6vxZ8QkTZHfvye4&#xA;XulT2+ozpNP6jRUhReIVUVNuKhdqfIZwcO2oaeUoCHXnxc/sekz9iz1IEzk6cuHl9qrpuiwahqFt&#xA;aXDsIZXAfgeJIoaivvjPtoagjHwVf9L9jHD2GdNeTjBI/o/rLwK+ilgu5raRizQSPGamu6sQfxz0&#xA;CFVYebld7vQvyh0n9OaB5pt68fqZt5Vbbbkk1TQ7GnpDbwrnK+0Mb4Z/zb+Tv+w8vCTE/wAVI7/A&#xA;zr0vAR1JMdOp/wBY5yn8oeX2vYiS7VdDfQfKWqa1Gwu5bFreisvGMerJwqwDVbw65seyZjNnFx2B&#xA;/QT+h1HbGYxxGjRI/V+tiJ/MVry0aOfTYpEfZ0ZyVNDXoVz0mGfiHJ4I46KD1DXJ7jyVqduIkijk&#xA;v7AfD14CK6bjv/lKOmYGsqWSBPQSr7HIw3GEgOtfpYhaXU9pdQ3UDcJ4HWSJvBkNQfvGUzgJRMTy&#xA;LOEjEgjmHr8nmh79otTghZLJGkWS1bZ1EhDWzkkVIaJvlmh0UcfZuWRrilICt+n8Q+BAehnCfaMB&#xA;Hi4RG7269PstKNV8z6rFrOn3ekRlb1RJDEgHqlzIVHEIBvXN0NVi1+OUZx4Yxrq67PosmgnGUZcR&#xA;lfT8d7JNd8hNql3I1zPbQMJGZ3trMQyuxJ5GV/UbkSTvt1zkNN7Rfl7AhI9N57bdw4Xe5+xPGomQ&#xA;HXaO/wA7Z5+WOnSaVodxpOlSO/KelxLIy/AhDcmAFNvACpr94Ee0MmslKW0TsNu7dGXRY9LGINyG&#xA;5+OyX/mZ5ovtA/LOzn0+CKOVNWktJkYs6OYGuImY04E8jCG9vozYafszHOPgm+Gr253t7+912XtD&#xA;JGfjD6uW/Knl2lfmZqV5f2KailtBZtMnryokgKqTRm3dumW5vZTB4RlAzM62Fjn/AKVnh9o8vGBI&#xA;QESd9jy+b6h8jPbSeV7OW2YSQy+o6Sqahx6jAMD7gZDSabwcYgefX3lo1mfxcpkOSfZkOM7FXYq7&#xA;FXYqsnbjCx70oPp2yMzQZRFlLcxHJeb/AJ/uq/l84Y0L3cCr7n4j+oZs+yh+++BcTWfQ+ZpreUJb&#xA;3H+6pHkjH+tGqk/g4zoZH1gOrA2fRf5R+t/yp699H++pfen3+LgafjnN9sC8p/qu67MP0/1v0vM5&#xA;tRudSvLi/uePrTsCwUUUcVAAFa9AM54RoU91AUKTPQtS81z/AO4iC5FvpsRWk8aqJBExZmRTSvLt&#xA;y7D3zI1eo00IRyVxZT06WK3Pl1rqfK3TDSZ/ElC6xXYPWjew8+nkGV6g3padPxbgyxPwYk7EKSN+&#xA;vbOaxEyyAnvdsQAKeQT21zHBBfsK2s0r2/Pr+8RUcg/RIKfTnTAbNfEOKlPzLqb3y6VG+7WFl9V5&#xA;HuBcTSr9yygZ1HYZ/cn+t+gPF9v4+HUX3xSWS3lt7mRJRRisUgH+TJGsi/8ACsM2mM2T73TSFU+l&#xA;NZjaTXbuNftPOyj5lqZ5HqReaQ/pPomnNYgfJryeK6xZcuvJjv8AJslof72K67+6k+ffM0fo+YdV&#xA;jry9K7uFr0rxlYZ61iPoB8g+dzHqPvei/wDOO8VLTzZIftNZJ91Jc57tyNYL7xL7na9ln96PePvZ&#xA;XNG7QuV6IAW+RYL+ts88At7i6KE85Mo/LLzLGwr6psUH/SSG/wCNc6b2XjeY/jpJ5/t81jH47ngV&#xA;oCodD1Vs77EKsPJSej+S9C0XVPy+8zS6qv7qwuLO4SQMy8D+8jJ+Hr8Mh65p+2MuWBj4f1f2Ox7O&#xA;x45WMn0oG08uflo8Szm/Zl/aR5eO467cVbNUc/aHLg+z8B2AwaLnxfan3nfS7XRfMV3o9grQ2Nul&#xA;sqQl2fpbxncsWJ3Y981+aRlOzzej7OiBhjXn95Q3lSCSDzlpcEgpJFqcCOPdZ1B/VkR9Qbs5vFI/&#xA;0T9z1DzDB6GtXaUoC5cf7P4v45oNbDhyyHn966KfFiifL7lb8uZCus3iE0WSM0HiysD+onMnsiVZ&#xA;CO8NHbEbxA9xYh+eP/ksLf8A8CS8/wCT99naaL+9/wA0foeO1H0f5363htv/AHKfLOjx/SHWS5vs&#xA;r8s2a08ieX4WHwGxgeg7eogf/jbOW1OX97L+sXb48foHuZgCCKjcHpixdirsVdirsVQ96aRAeJyr&#xA;LybMfNBZjt7y3/nIqRk8jWqilJNRiVq+HozNt/wObXsgfvT/AFf0hw9d9HxeMTaUT+WVrqpqOGsz&#xA;26im1JLWJq8v+eZzcif+EV/Q/S4HD+7v+k9t/wCcf3Ev5fGN1BVLydKHcEEIxr/wWaTtYfvvgHYa&#xA;I+j4vJltzbl4T1R2B+g0znC+gxNhKPMjuiW/ElTVtxsegzf9gxBlO+4PN+0kiIwrvKR2mo3MGq28&#xA;itydVdPj+IUlRo26/wCS2bLtSEThI5f2uk7KlI6iPv8A0PYfK/lwa9+TOuW6JyurW+kvLSlSfUgt&#xA;4jRQOpZOSD55zMBs9LqcvBqInoRX2l5JfASQJKO3X6c2/YmWshh3j7nC9osPFijP+afvTz8y9ONj&#xA;5ljjK8S2n6eSB0+Czii2HYfu83eilcCf6UvveV1AqXwH3ParOY3nmCCYnmJrpH5DaoLg1+7PL5j/&#xA;AAkj+n+l7yJrTf5n6F+kxi28yQxdorgx/cxXI4Bw5wP6TLOeLAT/AEXiN5pMXmPzN5ovLEk6ZbjU&#xA;NRMoFB6QZ2iH+yZlHyz1MT4McIy5nhj+t4Ex4pSI5bln35EW6ReVvNN2PtyCGCngFRz+PqZpPaSV&#xA;Y6/ol2fY0byD3hlumW/q2GqGlQsCn7pUf/jTOFwRuE/6v6Q9bmlU4e/9BYf+YV36Pka+g5U+s3Nq&#xA;lK0rx9R/p+znQeyn9/L+r+PvdP7Q/wB3H3vJY9MkbSrjVKERx3ENtXsWkSV/wEed5xATrvH3f2vJ&#xA;1tb2X8i9Ei1byP5o0+ZQItRY2jSEVpygIr/sedRml7WnWSJHRz9FG4l4rp8CWuppaahWNbW5EV4K&#xA;VKhJKSbbdN82sJ8WL0862cMip7971XzuPrv5iXqKA3q3UUSg7g/CiDp2OcLP6n0LSenAPc7U1+p/&#xA;mfK9ePDVxNXrTlcCSvfxxP1Lj9Wn/wAz9D0zzvHGmqo4IBeIGQeFCRX7hmo7ViBlB7w1dlSJxEdx&#xA;UPJ9uI9eX6sGaBfVZnYUPAghS1PemQ7Oj+/9PLds7Sl+49XPZiH53Qu/5WxsoqIvMV47nwBub1f1&#xA;sM7fR/3v+aP0PHaj6Pj+t4RaNWAexIzosJ9LrJc32X5Gu47vyZodxH9l7G3BHWjLGqsPoIIzkdVG&#xA;ssh5l3eE3Ae5k9lLUGM9t1xxS6MckeqKy5qdirsVdiqFvvsp8zlOZtxJBpuvQ3t/dWDRtBdWrEFG&#xA;NeSA05DMYSs0uPMJSMeRDz//AJyN/wCUIsf+2nF/1Dz5uOx/70/1f0ho130D3sUutBI/5x0t5yv7&#xA;xLoX7Cm45XDQA/8AAODmVHL/AIaR5V9ltJh+4Zj/AM4+V/wDLQ0P16ahO4rwjzD7X/vfg5Gi+j4s&#xA;JufJeux3N1GVWT6s7LLKG2PF+Fd/E5y8sgBI7nu4aiJAPexXz1oOp6ZbadNdoEjuzOId6k+l6fI0&#xA;/wBmM6b2d3Ez7v0vM+0eYSMIjpf6Eg8r6SdR1qWFgQ62t7JEtKkvb2ksqinu0YGbLtGN4Zn3feHU&#xA;9mz4c8Pe+ivyLQr5ILkUEt3K6nxHFFr/AMLnMY+TvO0z+9+Dxz8xPLlloXna+0mI8bCZkngUdY0m&#xA;+Lhv/Kage2XYjLDOOTpf9rkwmNVgljP1V/YU9/5yKsEi80abeRgCK5sRGOPQmGRunb7Lr0zoOx53&#xA;jI83ktdGpD3PQPJ9s51mzjcUaEEuPAoh/jnAQjesl/Wl+l6/JKtKP6sf0KPmpJbbU9UMNRKFlljp&#xA;ueTRlxT6ThxwrWxB/nj7SspXpCf6BST8iPK1vfeSdfkuVousM9gXpUiJIqFl/wBlMfuztu1M5jlj&#xA;X8O/4+Tymjx3A+aX/lAtzpkPnLy9ejhdWwjYx7/aid45CPbdd8xvaKpYBMciP1OT2Ptm4T3vRfKl&#xA;n62kasabyp6S/MIx/wCNhnJaDHeOfmKeh12SskPLd5J+ac4XQra3rvJdLIB/qRuP+N82/sjH99M/&#xA;0f0uD7RH93Ef0v0Ln8rNbfkE2oSJSWfUI9Q36iOv1VO3Q8uQ/wBbOo8e9XX9Gv0vPeHWC/O/0M5/&#xA;5xzg4eSr2Uihl1CShr1VYYgPxrmD2wf3o/q/pLkaEeg+94j+YFsY/wAwPMzRr+6GoSlj4PKzP+Px&#xA;Zsuzp+gDy+5xdVH1F6DpNlJc/mNptvKDzWe2eVW61ijSRga/6m+chPfIfe9vCXDpL/oo78wbNofz&#xA;OUgbXMtrKg+YRD/wyHIzHqTo53p/dbMvMMkGta49vptxHcFgtv6isGRXA+Iclr9mu/vtmn7Qxmeo&#xA;4Rz2T2fMQwcZ5blmmj6Tb6ZaLDF8UhAM0tKF28fl4DNzptNHFGh8XS6nUyyys8ugYB5r0/8ASX5W&#xA;ea7dhz9G91CdNq8RBfNMaeH2Tm400qzw8wPtFOtyi8cvj975otrSZIpZApMKMi86bBnDEAnxohzp&#xA;MY4TTqjuLfUv5OajHH+VmnXE5IS1FyHb/JSeQin0Gmcz2mKzS+H3O100wMVnoznRNRS+t7e8jRo0&#xA;mrRHADUqV7V69RmHjluC2iXHC07zLaXYq7FUr1zWrrTBCYNHvtW9XlyFj9XPp8aU5+vNB9qu3GvT&#xA;fCBapHc+cNXlC8fJ+tiniNP/AOyzI5MV9QyhOmL3175wOtDU7PytqhkCOqiRbFDRlIVW4XTcgp3r&#xA;1zHOlld2Pt/U0z4uPiCTfmdZed/NvlC00u28q6impw3EVxLLM1mkJKRujEcJ3bfnsOIzP0J8GfES&#xA;OVJzXOAB5phc22ty/lufKi+UNX9caeLVGJsPT+sIg4sW+s14+qKk8K07ZEEjN4ljnfVma4OHyUfy&#xA;sg82eU/K36K1Lynqkl2biSZ3tmsnjIcKBQvcxsNl8MOs/ez4gRyRgPBGioXep/m59a1Q23kp3guW&#xA;f6k0s0KuqmUMplCzMK8BuFPXvmKOzcG5MpXLny+z4uZ/KOXYACo8mO+d/Lv5neatI0iGbyjcW19p&#xA;jzhxHNbmKSOfgeQJk5KwMdKUPjXtmw0Ph6axE3E97h6rJLMeKQoomx8q+cNP/M23802flC/XS1FX&#xA;szJaCVGe2MEgT98VcBiWFStfbJzzCWDwyfV3/G2AjU+IcnoOieYPNFvYCK98m6qkwZjSBrF0od/t&#xA;Ncxn8M0+HRmEasfb+p2Op1MZzuIPxr9bAPOXl3z9q/n+DzHpflrUbW2jtfSfm9os5lCSBSAs7px+&#xA;JQfi6VzYbHTyxGt3FwzEc8chuhzUfzC8ufmR5r0jTrc+V7w6hpkrrFdyPaostvIoB5osz8XrGnQk&#xA;dcezZHT2CQQfentA48xBgCPeyXyvP59sfMOoXmp+UL39HvzGnLbNavMFaSo9bncIteA/Z75rx2bj&#xA;jM5Iy9R53y37tnIlr5ygIEDhH6FHzRJ+Yt75iS70ryhdHTWtytwt2bUTGbi6jiqXDpw+x1Nevthj&#xA;2biOQZJSPGD05fcj8/MQOMAcJ+ap+WEvnzyz5bh0PV/Jt6wtjI0d1Zy2jmQySF/jSSaKlOVKhj8s&#xA;ztXEZJ8QLiYJcEaISzzVp/5iSecpPMPljyjcxre6e1lqMN61qnqSEnjJ+6uJPs8Y+4+zT3wGEZ4D&#xA;iyHa+iY5DDKMkBv5sn8map5w03Q0t9X8oakdQaR3m+qGzaHc0XiZLpG+yBWo65g4tBDEOGEtvP8A&#xA;scrLrJZTxSG/k8w8y+R/zV8wahElx5ZlttLhncxvG0DTiF2AqVacIzhB05AV75ndmYMOj4jEkmXf&#xA;5fBx9dqcmpoSAAj3PSPM8Or6h5EufLGneUNXhX6qlvZ+r9Q4KYeJj5lbpjSqCpAxw3HKMhI5/jox&#xA;yEGHCEs8gp588o+SW0xPJ19dax60kqgy2iWxLkAcpPWZ9lH8nt75PV1mycV0GGEmEKrdg0/kj827&#xA;2e7e/wDKZkXUtSj1PUWSSEMzRB1WJAZqKgEz9a5kQyQh9JP001SjKXOuds00/TfOcP5nXfma48pa&#xA;h+iWVmtI42s/rIleJYyXU3ASn2+jeGaw6SFWD6vs+52p7RmYeGQOD7Vnn3SPN2v+ZtH1Oy8oX5tL&#xA;comqRXTWis8KSh+MYS4cElWcfER2wx0seZluOVIh2hOEDCIHDLnaA0/y/wCf/LNho1v5U8qXjNZX&#xA;V1PqTXzWim4ikkHoqGSeTi3pDiTTY+OTy6bFlyeJP6gNqcfHqcmPH4cfpPO3pVv5q8xNAhufJmrx&#xA;zkfvEjawkQHwVzcxk/8AAjKzp+4hRl8mG3t3+Z0XlzVNL07yVcXE+qXWou0t3PbRxx295K7xjjFI&#xA;5dgklGFVpTqcyI448QlfKvsajM8JAHO3mFp+V35uw6Le6c/lYu95LBL63rQ/u/Q5/ZX1OreqRWvT&#xA;NmdbEyEr5X9rh+BKiHpnlWy86aN+X1t5bm8p6lLecpGu5kezEQ5TmQCOtxyNU2NQN81Wtic0zIEb&#xA;+9vojHwMm8valrmmQN6vlPW5LiVg0rA2BXboFBu14geGY0NMR1H2/qbMNRG/Ms/0q+mvrGO6msrj&#xA;T3ctW0u/S9ZeJI+L0XmTelRRsyCEovArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:42628861AA75EA118DD8FCA61EEE42A0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:42628861AA75EA118DD8FCA61EEE42A0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d7949633-9997-dc4c-8941-f8a4050a6384</stRef:instanceID>
            <stRef:documentID>xmp.did:F87F117407206811822AB2A6B75D99AD</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7949633-9997-dc4c-8941-f8a4050a6384</stEvt:instanceID>
                  <stEvt:when>2020-03-21T16:49:39+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:42628861AA75EA118DD8FCA61EEE42A0</stEvt:instanceID>
                  <stEvt:when>2020-04-03T15:55:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2848.000000</stDim:w>
            <stDim:h>1780.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1780 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1780 li
2848 1780 li
2848 0 li
cp
clp
0 0 mo
0 1780 li
2848 1780 li
2848 0 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
2663.33 1398.36 mo
229.037 1398.36 li
229.037 1398.36 226.931 1378.25 226.31 1345.79 cv
225.951 1326.88 226.086 1303.77 227.445 1277.99 cv
227.562 1275.88 227.678 1273.75 227.804 1271.6 cv
228.513 1259.78 229.474 1247.44 230.764 1234.72 cv
230.881 1233.59 230.997 1232.46 231.123 1231.33 cv
232.521 1218.02 234.277 1204.2 236.461 1190.01 cv
238.237 1178.46 240.284 1166.66 242.672 1154.67 cv
242.837 1153.83 243.012 1152.98 243.187 1152.14 cv
244.419 1146.03 245.748 1139.89 247.156 1133.7 cv
247.709 1131.27 248.272 1128.84 248.854 1126.4 cv
249.99 1121.64 251.173 1116.85 252.425 1112.06 cv
255.453 1100.32 258.831 1088.49 262.577 1076.63 cv
262.955 1075.43 263.343 1074.21 263.722 1072.99 cv
265.43 1067.7 267.206 1062.4 269.06 1057.1 cv
271.884 1049.02 274.892 1040.95 278.085 1032.89 cv
280.084 1027.84 282.171 1022.79 284.325 1017.75 cv
351.502 860.644 493.717 714.479 790.685 717.419 cv
1428.74 723.747 1379.77 377.565 1826.4 355.409 cv
2008.3 346.384 2119.21 509.735 2086.49 743.108 cv
2031.17 1137.89 2655.23 851.695 2663.33 1398.36 cv
cp
.988235 .92549 .858824 rgb
f
1977.46 1394.66 mo
1977.46 1394.66 1977.46 1383.17 1979.1 1379.34 cv
1980.74 1375.52 1986.75 1359.96 1986.75 1359.96 cv
2010.23 1359.96 li
2010.23 1359.96 2014.6 1374.15 2014.88 1378.8 cv
2015.15 1383.44 2014.88 1394.66 2014.88 1394.66 cv
1977.46 1394.66 li
cp
.137255 .219608 .384314 rgb
f
2126.57 1394.66 mo
2126.57 1394.66 2126.57 1383.17 2124.93 1379.34 cv
2123.29 1375.52 2117.28 1359.96 2117.28 1359.96 cv
2093.8 1359.96 li
2093.8 1359.96 2089.43 1374.15 2089.16 1378.8 cv
2088.89 1383.44 2089.16 1394.66 2089.16 1394.66 cv
2126.57 1394.66 li
cp
f
2032.49 749.385 mo
2032.49 749.385 2031.66 774.984 2028.38 786.454 cv
2002.45 804.544 li
2100.07 819.152 li
2076.79 786.986 li
2076.79 786.986 2069.76 752.662 2073.45 739.965 cv
2077.13 727.268 2032.49 749.385 2032.49 749.385 cv
cp
1 .698039 .490196 rgb
f
2032.35 752.921 mo
2032.35 752.913 2040.06 771.503 2054.61 771.094 cv
2069.15 770.685 2072.46 754.242 2072.46 754.242 cv
2032.35 752.921 li
cp
.929412 .596078 .372549 rgb
f
2023.67 737.874 mo
2023.67 737.874 2018.97 714.434 2015.69 707.334 cv
2012.42 700.233 2009.69 668.559 2046 666.92 cv
2046 666.92 2059.93 668.559 2067.58 663.916 cv
2067.58 663.916 2067.58 668.559 2065.67 670.197 cv
2065.67 670.197 2078.23 667.193 2088.06 678.115 cv
2097.89 689.039 2081.5 727.268 2082.32 736.278 cv
2023.67 737.874 li
cp
.172549 .227451 .392157 rgb
f
2052.94 763.913 mo
2042.4 763.728 2023.01 749.698 2023.01 732.325 cv
2023.01 705.216 li
2023.01 698.871 2027.43 693.681 2032.84 693.681 cv
2073.04 693.681 li
2078.44 693.681 2082.87 698.871 2082.87 705.216 cv
2082.87 730.791 li
2082.87 749.008 2065.02 764.126 2052.94 763.913 cv
cp
1 .698039 .490196 rgb
f
2023.01 719.69 mo
2023.01 719.69 2023.07 703.4 2035.97 700.896 cv
2048.87 698.391 2077.75 708.836 2081.84 696.957 cv
2085.94 685.079 2026.03 685.284 2023.01 692.861 cv
2020 700.438 2023.01 719.69 2023.01 719.69 cv
cp
.172549 .227451 .392157 rgb
f
1980.41 996.519 mo
1980.41 996.519 1984.52 1121.98 1978.37 1193.57 cv
1972.23 1265.16 1978.42 1364.78 1978.42 1364.78 cv
1978.42 1364.78 1998.07 1375.61 2019.37 1364.78 cv
2019.37 1364.78 2042.72 1226.48 2042.58 1193.57 cv
2042.42 1158.52 2068 1001.99 2068 1001.99 cv
1980.41 996.519 li
cp
.713726 .298039 .254902 rgb
f
2125.72 1364.78 mo
2125.72 1364.78 2106.08 1375.62 2084.78 1364.78 cv
2084.78 1364.78 2061.42 1226.48 2061.57 1193.57 cv
2061.63 1178.76 2057.11 1142.28 2051.86 1105.09 cv
2044.68 1054.21 2036.14 1001.99 2036.14 1001.99 cv
2127.13 996.306 li
2127.13 996.306 2119.63 1121.99 2125.77 1193.57 cv
2131.91 1265.16 2125.72 1364.78 2125.72 1364.78 cv
cp
f
2126.04 1017.39 mo
2126.04 1017.39 2087.25 1024.9 2051.86 1024.9 cv
2036.43 1024.9 2019.66 1023.21 2006.31 1021.42 cv
1991.54 1019.46 1980.96 1017.39 1980.96 1017.39 cv
1980.96 1017.39 1973.1 1018.08 1977.74 979.307 cv
1981.27 949.801 1980.17 923.16 1979.38 895.75 cv
1979.29 892.703 1979.35 889.098 1979.54 885.084 cv
1981.05 853.128 1990.72 795.596 1998.08 792.508 cv
1998.08 792.508 2009.03 788.436 2028.38 786.454 cv
2028.38 786.83 2039.61 803.248 2052.94 805.09 cv
2061.22 801.813 2067.73 799.021 2076.79 786.986 cv
2088.27 788.321 2100.78 790.598 2114.17 794.194 cv
2114.17 794.194 2115.56 800.29 2120.82 906.03 cv
2122.91 947.916 2137.21 1017.53 2126.04 1017.39 cv
cp
.45098 .603922 .941176 rgb
f
2061.57 1193.57 mo
2061.63 1178.76 2057.11 1142.28 2051.86 1105.09 cv
2057.31 1082.88 2070.58 1061.5 2070.58 1061.5 cv
2087.37 1108.6 2061.57 1193.57 2061.57 1193.57 cv
cp
.666667 .254902 .243137 rgb
f
1943.53 918.376 mo
1942.61 919.146 1945.83 927.141 1950.58 937.561 cv
1960.37 958.967 1976.61 990.58 1976.61 990.58 cv
1974.26 999.5 1971.68 1005.01 1971.68 1005.01 cv
1944.35 983.542 1926.73 965.274 1915.48 951.267 cv
1899.67 931.564 1896.43 920.268 1896.43 920.268 cv
1957.28 796.406 2000.1 791.841 2000.1 791.841 cv
1995.04 873.697 li
1995.04 873.697 1946.35 916.033 1943.53 918.376 cv
cp
.168627 .278431 .545098 rgb
f
2136.92 1049.77 mo
2127.85 1067.92 2093.64 1067.26 2093.64 1067.26 cv
2087.36 1019.04 2085.97 788.228 2085.97 788.228 cv
2097.54 789.618 2112.92 793.764 2112.92 793.764 cv
2124.03 815.245 2127.96 855.473 2128.93 883.82 cv
2129.46 899.694 2129.07 911.84 2128.48 914.887 cv
2127.62 919.413 2128.71 940.984 2130.38 965.594 cv
2132.97 1003.99 2136.92 1049.77 2136.92 1049.77 cv
cp
f
2019.39 787.596 mo
2019.39 787.596 2017.09 1019.03 2010.82 1067.26 cv
2010.82 1067.26 1976.62 1067.92 1967.55 1049.77 cv
1967.55 1049.77 1981.59 907.339 1979.38 895.75 cv
1977.84 887.674 1981.84 821.287 1996.63 792.762 cv
1996.63 792.762 2009.57 788.752 2019.39 787.596 cv
cp
f
1973.37 992.139 mo
1973.37 992.139 1988.12 978.485 1994.12 986.131 cv
2000.13 993.777 2001.22 1005.79 1996.58 1004.97 cv
1991.94 1004.15 1982.38 999.785 1981.01 1001.97 cv
1979.65 1004.15 1973.53 1008.33 1971.68 1005.01 cv
1969.82 1001.7 1973.37 992.139 1973.37 992.139 cv
cp
1 .698039 .490196 rgb
f
1976.61 990.58 mo
1974.26 999.5 1971.68 1005.01 1971.68 1005.01 cv
1944.35 983.542 1926.73 965.274 1915.48 951.267 cv
1923.96 950.636 1936.34 947.604 1950.58 937.561 cv
1960.37 958.967 1976.61 990.58 1976.61 990.58 cv
cp
f
2211.63 920.268 mo
2211.63 920.268 2208.38 931.564 2192.57 951.267 cv
2181.33 965.274 2163.71 983.542 2136.38 1005.01 cv
2136.38 1005.01 2133.8 999.5 2131.45 990.58 cv
2131.45 990.58 2147.69 958.967 2157.47 937.561 cv
2162.22 927.141 2165.45 919.146 2164.52 918.376 cv
2162.34 916.558 2132.59 890.712 2119.32 879.187 cv
2115.47 875.836 2113.01 873.697 2113.01 873.697 cv
2109.97 793.056 li
2109.97 793.056 2150.78 796.406 2211.63 920.268 cv
cp
.168627 .278431 .545098 rgb
f
2134.68 992.139 mo
2134.68 992.139 2119.94 978.485 2113.93 986.131 cv
2107.92 993.777 2106.83 1005.79 2111.47 1004.97 cv
2116.12 1004.15 2125.67 999.785 2127.04 1001.97 cv
2128.4 1004.15 2134.52 1008.33 2136.38 1005.01 cv
2138.23 1001.7 2134.68 992.139 2134.68 992.139 cv
cp
1 .698039 .490196 rgb
f
2131.44 990.58 mo
2133.79 999.5 2136.37 1005.01 2136.37 1005.01 cv
2163.7 983.542 2181.32 965.274 2192.57 951.267 cv
2184.09 950.636 2171.71 947.604 2157.47 937.561 cv
2147.69 958.967 2131.44 990.58 2131.44 990.58 cv
cp
f
2164.52 918.376 mo
2162.34 916.558 2132.59 890.712 2119.32 879.187 cv
2119.32 879.187 2132.57 869.257 2140.76 883.732 cv
2148.95 898.207 2164.52 918.376 2164.52 918.376 cv
cp
.137255 .219608 .384314 rgb
f
2211.63 920.268 mo
2211.63 920.268 2208.38 931.564 2192.57 951.267 cv
2174.27 951.013 2211.63 920.268 2211.63 920.268 cv
cp
f
2033.13 716.746 mo
2031.03 716.746 2029.2 717.515 2028.1 718.854 cv
2027.12 720.049 2026.8 721.625 2027.16 723.413 cv
2027.85 726.845 2030.43 729.038 2034.82 729.932 cv
2038.16 730.612 2041.35 730.241 2041.38 730.238 cv
2041.43 730.235 li
2044.69 730.235 2047 728.333 2048.71 724.249 cv
2049.1 723.335 2050.25 720.209 2048.99 718.322 cv
2048.29 717.277 2046.94 716.746 2044.96 716.746 cv
2033.13 716.746 li
cp
2039.29 731.111 mo
2035.44 731.111 2027.74 730.257 2026.39 723.567 cv
2025.98 721.543 2026.37 719.742 2027.5 718.362 cv
2028.74 716.841 2030.8 715.969 2033.13 715.969 cv
2044.96 715.969 li
2047.21 715.969 2048.79 716.615 2049.64 717.891 cv
2051.07 720.039 2049.97 723.263 2049.43 724.549 cv
2047.59 728.95 2045.05 731.005 2041.45 731.014 cv
2041.3 731.03 2040.48 731.111 2039.29 731.111 cv
cp
.713726 .298039 .254902 rgb
f
2060.91 716.746 mo
2058.94 716.746 2057.59 717.277 2056.89 718.322 cv
2055.63 720.209 2056.78 723.335 2057.16 724.249 cv
2058.87 728.333 2061.19 730.235 2064.45 730.235 cv
2064.49 730.238 li
2064.53 730.241 2067.71 730.611 2071.06 729.932 cv
2075.45 729.038 2078.03 726.845 2078.72 723.414 cv
2079.08 721.625 2078.76 720.049 2077.78 718.854 cv
2076.68 717.515 2074.85 716.746 2072.75 716.746 cv
2060.91 716.746 li
cp
2066.59 731.111 mo
2065.4 731.111 2064.58 731.03 2064.43 731.014 cv
2060.82 731.005 2058.29 728.95 2056.45 724.549 cv
2055.91 723.263 2054.81 720.039 2056.24 717.891 cv
2057.09 716.615 2058.66 715.969 2060.91 715.969 cv
2072.75 715.969 li
2075.08 715.969 2077.14 716.841 2078.38 718.362 cv
2079.51 719.742 2079.89 721.543 2079.48 723.568 cv
2078.14 730.256 2070.44 731.111 2066.59 731.111 cv
cp
f
2048.7 721.439 mo
2048.52 721.439 2048.36 721.338 2048.28 721.168 cv
2048.17 720.934 2048.27 720.657 2048.51 720.551 cv
2048.7 720.46 2053.34 718.384 2057.46 720.563 cv
2057.68 720.683 2057.77 720.964 2057.65 721.192 cv
2057.53 721.42 2057.25 721.505 2057.02 721.385 cv
2053.3 719.419 2048.94 721.377 2048.89 721.397 cv
2048.83 721.426 2048.77 721.439 2048.7 721.439 cv
cp
f
2130.38 965.594 mo
2111 910.954 2119.32 879.187 2119.32 879.187 cv
2128.93 883.82 li
2129.46 899.694 2129.07 911.84 2128.48 914.887 cv
2127.62 919.413 2128.71 940.984 2130.38 965.594 cv
cp
.137255 .219608 .384314 rgb
f
1214.67 732.325 mo
1214.67 732.325 1191.81 690.864 1212.78 672.557 cv
1233.74 654.249 1270.65 665.175 1277.44 672.557 cv
1284.23 679.939 1293.28 700.934 1274.53 730.791 cv
1214.67 732.325 li
cp
.172549 .227451 .392157 rgb
f
1169.12 1394.66 mo
1169.12 1394.66 1169.12 1383.17 1170.76 1379.34 cv
1172.4 1375.52 1178.41 1359.96 1178.41 1359.96 cv
1201.89 1359.96 li
1201.89 1359.96 1206.26 1374.15 1206.53 1378.8 cv
1206.8 1383.44 1206.53 1394.66 1206.53 1394.66 cv
1169.12 1394.66 li
cp
.137255 .219608 .384314 rgb
f
1318.23 1394.66 mo
1318.23 1394.66 1318.23 1383.17 1316.59 1379.34 cv
1314.95 1375.52 1308.94 1359.96 1308.94 1359.96 cv
1285.46 1359.96 li
1285.46 1359.96 1281.09 1374.15 1280.82 1378.8 cv
1280.54 1383.44 1280.82 1394.66 1280.82 1394.66 cv
1318.23 1394.66 li
cp
f
1224.14 749.385 mo
1224.14 749.385 1223.32 774.984 1220.04 786.454 cv
1194.11 804.544 li
1291.73 819.152 li
1268.45 786.986 li
1268.45 786.986 1261.42 752.662 1265.1 739.965 cv
1268.79 727.268 1224.14 749.385 1224.14 749.385 cv
cp
.709804 .435294 .25098 rgb
f
1224 752.921 mo
1224 752.913 1231.72 771.503 1246.26 771.094 cv
1260.8 770.685 1264.11 754.242 1264.11 754.242 cv
1224 752.921 li
cp
.6 .34902 .180392 rgb
f
1264.7 693.681 mo
1224.5 693.681 li
1219.09 693.681 1214.67 698.871 1214.67 705.215 cv
1214.67 732.325 li
1214.67 749.698 1234.06 763.728 1244.6 763.913 cv
1256.68 764.126 1274.53 749.008 1274.53 730.791 cv
1274.53 705.215 li
1274.53 698.871 1270.1 693.681 1264.7 693.681 cv
cp
.709804 .435294 .25098 rgb
f
1172.07 996.519 mo
1172.07 996.519 1176.17 1121.98 1170.03 1193.57 cv
1163.89 1265.16 1170.08 1364.78 1170.08 1364.78 cv
1170.08 1364.78 1189.72 1375.61 1211.02 1364.78 cv
1211.02 1364.78 1234.38 1226.48 1234.23 1193.57 cv
1234.08 1158.52 1259.66 1001.99 1259.66 1001.99 cv
1172.07 996.519 li
cp
.933333 .596078 .286275 rgb
f
1317.38 1364.78 mo
1317.38 1364.78 1297.73 1375.62 1276.43 1364.78 cv
1276.43 1364.78 1253.08 1226.48 1253.23 1193.57 cv
1253.29 1178.76 1248.77 1142.28 1243.52 1105.09 cv
1236.33 1054.21 1227.8 1001.99 1227.8 1001.99 cv
1318.79 996.306 li
1318.79 996.306 1311.28 1121.99 1317.43 1193.57 cv
1323.57 1265.16 1317.38 1364.78 1317.38 1364.78 cv
cp
f
1301.63 793.056 mo
1301.63 793.11 li
1289.82 790.138 1278.71 788.181 1268.45 786.986 cv
1259.39 799.021 1252.88 801.813 1244.6 805.09 cv
1231.27 803.247 1220.04 786.83 1220.04 786.454 cv
1205.52 787.941 1195.73 790.605 1191.75 791.843 cv
1190.96 791.937 1148.37 797.563 1088.09 920.268 cv
1088.09 920.268 1091.33 931.564 1107.14 951.267 cv
1118.39 965.274 1136.01 983.542 1163.34 1005.01 cv
1163.34 1005.01 1165.92 999.5 1168.27 990.578 cv
1168.27 990.578 1152.02 958.967 1142.24 937.561 cv
1137.49 927.141 1134.26 919.146 1135.19 918.376 cv
1136.95 916.913 1156.6 899.852 1171.11 887.245 cv
1171 890.396 1170.96 893.261 1171.04 895.75 cv
1171.82 923.16 1172.93 949.801 1169.4 979.307 cv
1164.75 1018.08 1172.62 1017.39 1172.62 1017.39 cv
1172.62 1017.39 1183.2 1019.46 1197.96 1021.42 cv
1211.32 1023.21 1228.08 1024.9 1243.52 1024.9 cv
1278.91 1024.9 1317.7 1017.39 1317.7 1017.39 cv
1328.86 1017.53 1314.57 947.916 1312.48 906.03 cv
1311.99 896.303 1311.54 887.426 1311.12 879.312 cv
1324.46 890.896 1354 916.563 1356.18 918.376 cv
1357.11 919.146 1353.88 927.141 1349.13 937.561 cv
1339.35 958.967 1323.1 990.578 1323.1 990.578 cv
1325.45 999.5 1328.04 1005.01 1328.04 1005.01 cv
1355.36 983.542 1372.98 965.274 1384.23 951.267 cv
1400.04 931.564 1403.29 920.268 1403.29 920.268 cv
1342.44 796.406 1301.63 793.056 1301.63 793.056 cv
cp
.454902 .67451 .745098 rgb
f
1197.96 1021.42 mo
1183.2 1019.46 1172.62 1017.39 1172.62 1017.39 cv
1172.62 1017.39 1164.75 1018.08 1169.4 979.307 cv
1172.93 949.801 1171.82 923.16 1171.04 895.75 cv
1170.95 892.703 1171.01 889.098 1171.2 885.084 cv
1173.46 888.705 1198.66 929.402 1205.44 959.646 cv
1210.38 981.707 1202.94 1007.69 1197.96 1021.42 cv
cp
.341176 .556863 .607843 rgb
f
1253.23 1193.57 mo
1253.29 1178.76 1248.77 1142.28 1243.52 1105.09 cv
1248.97 1082.88 1262.24 1061.5 1262.24 1061.5 cv
1279.03 1108.6 1253.23 1193.57 1253.23 1193.57 cv
cp
.898039 .52549 .219608 rgb
f
1165.03 992.139 mo
1165.03 992.139 1179.77 978.485 1185.78 986.131 cv
1191.79 993.777 1192.88 1005.79 1188.24 1004.97 cv
1183.59 1004.15 1174.04 999.785 1172.67 1001.97 cv
1171.31 1004.15 1165.19 1008.33 1163.33 1005.01 cv
1161.48 1001.7 1165.03 992.139 1165.03 992.139 cv
cp
.709804 .435294 .25098 rgb
f
1168.27 990.58 mo
1165.92 999.5 1163.34 1005.01 1163.34 1005.01 cv
1136.01 983.542 1118.39 965.274 1107.14 951.267 cv
1115.62 950.636 1128 947.604 1142.24 937.561 cv
1152.02 958.967 1168.27 990.58 1168.27 990.58 cv
cp
f
1326.34 992.139 mo
1326.34 992.139 1311.6 978.485 1305.59 986.131 cv
1299.58 993.777 1298.49 1005.79 1303.13 1004.97 cv
1307.77 1004.15 1317.33 999.785 1318.7 1001.97 cv
1320.06 1004.15 1326.18 1008.33 1328.04 1005.01 cv
1329.89 1001.7 1326.34 992.139 1326.34 992.139 cv
cp
f
1323.1 990.58 mo
1325.45 999.5 1328.03 1005.01 1328.03 1005.01 cv
1355.36 983.542 1372.98 965.274 1384.23 951.267 cv
1375.75 950.636 1363.37 947.604 1349.13 937.561 cv
1339.34 958.967 1323.1 990.58 1323.1 990.58 cv
cp
f
1356.18 918.376 mo
1353.99 916.558 1324.25 890.712 1310.98 879.187 cv
1310.98 879.187 1324.23 869.257 1332.42 883.732 cv
1340.61 898.207 1356.18 918.376 1356.18 918.376 cv
cp
.341176 .556863 .607843 rgb
f
1403.29 920.268 mo
1403.29 920.268 1400.04 931.564 1384.23 951.267 cv
1365.93 951.013 1403.29 920.268 1403.29 920.268 cv
cp
f
1214.67 716.208 mo
1214.67 716.208 1221.98 693.886 1245.94 697.367 cv
1269.9 700.849 1271.98 705.968 1274.53 711.908 cv
1277.07 717.847 1281.99 690.198 1281.99 690.198 cv
1253.72 681.803 li
1253.72 681.803 1219.52 685.692 1217.07 691.428 cv
1214.61 697.162 1214.61 697.162 1214.61 697.162 cv
1214.67 716.208 li
cp
.172549 .227451 .392157 rgb
f
1242.64 673.02 mo
1242.64 673.02 1217.31 650.008 1228.18 645.092 cv
1239.04 640.176 1242.64 673.02 1242.64 673.02 cv
cp
f
1241.62 673.627 mo
1241.62 673.627 1209.6 661.563 1217.89 652.99 cv
1226.17 644.417 1241.62 673.627 1241.62 673.627 cv
cp
f
1243.71 674.295 mo
1243.71 674.295 1238.47 644.614 1251.13 644.831 cv
1263.78 645.047 1243.71 674.295 1243.71 674.295 cv
cp
f
1245.49 672.356 mo
1245.49 672.356 1259.2 640.429 1271.97 643.417 cv
1284.74 646.405 1245.49 672.356 1245.49 672.356 cv
cp
f
1244.79 674.295 mo
1244.79 674.295 1266.61 647.258 1278.1 653.583 cv
1289.58 659.909 1244.79 674.295 1244.79 674.295 cv
cp
f
2618.58 1393.44 mo
2534.61 1393.44 li
2530.11 1389.63 2537.72 1380.96 2545.68 1380.38 cv
2549.13 1380.11 2553.5 1380.84 2558.5 1381.89 cv
2559.65 1366.54 2566.25 1297.54 2591.12 1300.32 cv
2619.09 1303.42 2591.12 1330.7 2583.22 1346.86 cv
2577.36 1358.82 2571.18 1375.97 2568.36 1384.07 cv
2570.63 1384.56 2572.98 1385.05 2575.38 1385.49 cv
2579.09 1374.11 2592.88 1335.83 2610.42 1338.06 cv
2631.01 1340.67 2622.73 1356.02 2608.14 1365.13 cv
2597.43 1371.83 2584.28 1381.35 2578.03 1385.95 cv
2583.33 1386.81 2588.85 1387.4 2594.46 1387.27 cv
2608.84 1386.92 2615.86 1391.16 2618.58 1393.44 cv
cp
.509804 .701961 .470588 rgb
f
326.668 1388.84 mo
321.53 1380.77 306.067 1359.82 285.471 1362.59 cv
263.031 1365.61 310.254 1380.41 324.713 1388.9 cv
321.502 1388.94 318.741 1388.69 316.714 1387.96 cv
307.048 1384.52 290.495 1391.13 285.202 1393.44 cv
377.22 1393.44 li
376.584 1391.24 374.927 1387.65 370.641 1385.03 cv
369.13 1384.1 366.093 1383.98 362.172 1384.27 cv
367.644 1377.82 371.443 1357.22 356.211 1362.52 cv
345.084 1366.39 345.114 1378.98 346.207 1386.43 cv
343.84 1386.8 341.438 1387.18 339.067 1387.52 cv
334.486 1364.17 318.282 1295.74 285.438 1293.92 cv
252.143 1292.07 313.673 1364.88 334.16 1388.17 cv
331.535 1388.49 329.008 1388.73 326.668 1388.84 cv
cp
f
1009.42 1394.66 mo
1009.42 1394.66 1009.42 1383.17 1011.05 1379.34 cv
1012.69 1375.52 1018.7 1359.96 1018.7 1359.96 cv
1042.18 1359.96 li
1042.18 1359.96 1046.55 1374.15 1046.82 1378.8 cv
1047.1 1383.44 1046.82 1394.66 1046.82 1394.66 cv
1009.42 1394.66 li
cp
.137255 .219608 .384314 rgb
f
1158.52 1394.66 mo
1158.52 1394.66 1158.52 1383.17 1156.88 1379.34 cv
1155.24 1375.52 1149.23 1359.96 1149.23 1359.96 cv
1125.75 1359.96 li
1125.75 1359.96 1121.38 1374.15 1121.11 1378.8 cv
1120.83 1383.44 1121.11 1394.66 1121.11 1394.66 cv
1158.52 1394.66 li
cp
f
1064.44 749.385 mo
1064.44 749.385 1063.61 774.984 1060.33 786.454 cv
1034.4 804.544 li
1132.02 819.152 li
1108.74 786.986 li
1108.74 786.986 1101.71 752.662 1105.4 739.965 cv
1109.08 727.268 1064.44 749.385 1064.44 749.385 cv
cp
1 .698039 .490196 rgb
f
1064.3 752.921 mo
1064.3 752.913 1072.01 771.503 1086.56 771.094 cv
1101.1 770.685 1104.4 754.242 1104.4 754.242 cv
1064.3 752.921 li
cp
.929412 .596078 .372549 rgb
f
1055.62 737.874 mo
1055.62 737.874 1050.92 714.434 1047.64 707.334 cv
1044.37 700.233 1041.64 668.559 1077.95 666.92 cv
1077.95 666.92 1091.88 668.559 1099.53 663.916 cv
1099.53 663.916 1099.53 668.559 1097.61 670.197 cv
1097.61 670.197 1110.18 667.193 1120.01 678.115 cv
1129.84 689.039 1113.45 727.268 1114.27 736.278 cv
1055.62 737.874 li
cp
.713726 .298039 .254902 rgb
f
1104.99 693.681 mo
1064.79 693.681 li
1059.38 693.681 1054.96 698.871 1054.96 705.215 cv
1054.96 732.325 li
1054.96 749.698 1074.35 763.728 1084.89 763.913 cv
1096.97 764.126 1114.82 749.008 1114.82 730.791 cv
1114.82 705.215 li
1114.82 698.871 1110.39 693.681 1104.99 693.681 cv
cp
1 .698039 .490196 rgb
f
1054.96 719.69 mo
1054.96 719.69 1055.02 703.4 1067.92 700.896 cv
1080.82 698.391 1109.7 708.836 1113.79 696.957 cv
1117.89 685.079 1057.98 685.284 1054.96 692.861 cv
1051.94 700.438 1054.96 719.69 1054.96 719.69 cv
cp
.713726 .298039 .254902 rgb
f
1012.36 996.519 mo
1012.36 996.519 1016.47 1121.98 1010.32 1193.57 cv
1004.18 1265.16 1010.37 1364.78 1010.37 1364.78 cv
1010.37 1364.78 1030.02 1375.61 1051.32 1364.78 cv
1051.32 1364.78 1074.67 1226.48 1074.53 1193.57 cv
1074.37 1158.52 1099.95 1001.99 1099.95 1001.99 cv
1012.36 996.519 li
cp
.168627 .278431 .545098 rgb
f
1157.67 1364.78 mo
1157.67 1364.78 1138.03 1375.62 1116.73 1364.78 cv
1116.73 1364.78 1093.37 1226.48 1093.52 1193.57 cv
1093.58 1178.76 1089.06 1142.28 1083.81 1105.09 cv
1076.63 1054.21 1068.09 1001.99 1068.09 1001.99 cv
1159.08 996.306 li
1159.08 996.306 1151.58 1121.99 1157.72 1193.57 cv
1163.86 1265.16 1157.67 1364.78 1157.67 1364.78 cv
cp
f
1038.26 1021.42 mo
1023.49 1019.46 1012.91 1017.39 1012.91 1017.39 cv
1012.91 1017.39 1005.05 1018.08 1009.69 979.307 cv
1013.22 949.801 1012.12 923.16 1011.33 895.75 cv
1011.24 892.703 1011.3 889.098 1011.49 885.084 cv
1013.75 888.705 1038.95 929.402 1045.74 959.646 cv
1050.67 981.707 1043.23 1007.69 1038.26 1021.42 cv
cp
.152941 .262745 .486275 rgb
f
1141.92 793.056 mo
1141.93 793.11 li
1130.12 790.138 1119.01 788.181 1108.74 786.986 cv
1099.68 799.021 1093.17 801.813 1084.89 805.09 cv
1071.56 803.247 1060.33 786.83 1060.33 786.454 cv
1045.81 787.941 1036.02 790.605 1032.04 791.843 cv
1031.25 791.937 988.658 797.565 928.378 920.268 cv
928.378 920.268 931.621 931.564 947.433 951.267 cv
958.68 965.274 976.301 983.542 1003.63 1005.01 cv
1003.63 1005.01 1006.21 999.5 1008.56 990.578 cv
1008.56 990.578 992.315 958.967 982.535 937.561 cv
977.783 927.141 974.555 919.146 975.481 918.376 cv
977.241 916.913 996.894 899.852 1011.4 887.245 cv
1011.29 890.396 1011.26 893.261 1011.33 895.75 cv
1012.12 923.16 1013.22 949.801 1009.69 979.307 cv
1005.05 1018.08 1012.91 1017.39 1012.91 1017.39 cv
1012.91 1017.39 1023.49 1019.46 1038.26 1021.42 cv
1051.61 1023.21 1068.38 1024.9 1083.81 1024.9 cv
1119.2 1024.9 1157.99 1017.39 1157.99 1017.39 cv
1169.15 1017.53 1154.86 947.916 1152.77 906.03 cv
1152.29 896.303 1151.84 887.426 1151.42 879.312 cv
1164.76 890.896 1194.29 916.563 1196.47 918.376 cv
1197.4 919.146 1194.17 927.141 1189.42 937.561 cv
1179.64 958.967 1163.4 990.578 1163.4 990.578 cv
1165.75 999.5 1168.33 1005.01 1168.33 1005.01 cv
1195.66 983.542 1213.28 965.274 1224.52 951.267 cv
1240.33 931.564 1243.58 920.268 1243.58 920.268 cv
1182.73 796.406 1141.92 793.056 1141.92 793.056 cv
cp
.184314 .317647 .588235 rgb
f
1093.52 1193.57 mo
1093.58 1178.76 1089.06 1142.28 1083.81 1105.09 cv
1089.26 1082.88 1102.53 1061.5 1102.53 1061.5 cv
1119.32 1108.6 1093.52 1193.57 1093.52 1193.57 cv
cp
.137255 .219608 .384314 rgb
f
1005.32 992.139 mo
1005.32 992.139 1020.06 978.485 1026.07 986.131 cv
1032.08 993.777 1033.17 1005.79 1028.53 1004.97 cv
1023.89 1004.15 1014.33 999.785 1012.96 1001.97 cv
1011.6 1004.15 1005.48 1008.33 1003.63 1005.01 cv
1001.77 1001.7 1005.32 992.139 1005.32 992.139 cv
cp
1 .698039 .490196 rgb
f
1008.56 990.58 mo
1006.21 999.5 1003.63 1005.01 1003.63 1005.01 cv
976.301 983.542 958.68 965.274 947.433 951.267 cv
955.91 950.636 968.289 947.604 982.535 937.561 cv
992.315 958.967 1008.56 990.58 1008.56 990.58 cv
cp
f
1166.63 992.139 mo
1166.63 992.139 1151.89 978.485 1145.88 986.131 cv
1139.87 993.777 1138.78 1005.79 1143.42 1004.97 cv
1148.07 1004.15 1157.62 999.785 1158.99 1001.97 cv
1160.35 1004.15 1166.47 1008.33 1168.33 1005.01 cv
1170.18 1001.7 1166.63 992.139 1166.63 992.139 cv
cp
f
1163.39 990.58 mo
1165.74 999.5 1168.32 1005.01 1168.32 1005.01 cv
1195.65 983.542 1213.27 965.274 1224.52 951.267 cv
1216.04 950.636 1203.66 947.604 1189.42 937.561 cv
1179.64 958.967 1163.39 990.58 1163.39 990.58 cv
cp
f
1196.47 918.376 mo
1194.29 916.558 1164.54 890.712 1151.27 879.187 cv
1151.27 879.187 1164.52 869.257 1172.71 883.732 cv
1180.9 898.207 1196.47 918.376 1196.47 918.376 cv
cp
.168627 .278431 .545098 rgb
f
1243.58 920.268 mo
1243.58 920.268 1240.33 931.564 1224.52 951.267 cv
1206.22 951.013 1243.58 920.268 1243.58 920.268 cv
cp
f
1061.69 780.212 mo
1061.69 780.212 1057.36 782.018 1056.13 786.932 cv
1056.13 786.932 1073.52 804.817 1084.89 805.09 cv
1061.69 780.212 li
cp
.933333 .596078 .286275 rgb
f
1084.89 805.09 mo
1107.33 779.308 li
1107.33 779.308 1111.97 782.357 1111.9 787.375 cv
1111.9 787.375 1094.54 805.773 1084.89 805.09 cv
cp
f
1080.85 803.192 mo
1080.85 803.192 1063.72 951.058 1069.68 969.081 cv
1072.75 978.359 1076.86 986.385 1080.13 991.988 cv
1082.48 996.02 1088.31 996.009 1090.64 991.966 cv
1095.18 984.068 1101.13 972.642 1101.13 966.842 cv
1101.13 957.447 1088.13 803.065 1088.13 803.065 cv
1080.85 803.192 li
cp
f
1076.36 795.944 mo
1076.36 795.944 1086.72 794.906 1093.02 795.545 cv
1094.27 795.672 1094.96 797.04 1094.35 798.139 cv
1092.59 801.318 1088.98 806.831 1085.21 806.831 cv
1079.92 806.831 1071.67 796.311 1076.36 795.944 cv
cp
.898039 .52549 .219608 rgb
f
1729.24 730.022 mo
1729.24 730.022 1719.62 702.691 1719.11 695.593 cv
1718.59 688.492 1721.79 668.013 1745.45 665.828 cv
1769.11 663.644 1777.92 661.118 1777.92 661.118 cv
1773.41 666.442 li
1773.41 666.442 1779.99 664.395 1786.84 668.9 cv
1793.69 673.405 1797.17 686.717 1796.14 698.186 cv
1795.12 709.655 1786.16 722.28 1786.04 727.023 cv
1785.91 731.767 1729.24 730.022 1729.24 730.022 cv
cp
.137255 .219608 .384314 rgb
f
1664.72 1013.59 mo
1664.72 1013.59 1664.17 1019.84 1657.66 1033.42 cv
1657.66 1033.42 1654.67 1042.65 1674.22 1056.5 cv
1693.77 1070.34 1674.76 1013.59 1674.76 1013.59 cv
1664.72 1013.59 li
cp
.85098 .576471 .360784 rgb
f
1733.71 772.391 mo
1733.71 772.391 1722.74 831.093 1710.78 892.414 cv
1697.78 959.067 1683.61 1028.82 1681.06 1029.66 cv
1676.18 1031.29 1668.7 1024.91 1665.44 1016.76 cv
1662.82 1010.21 1658.33 956.363 1661.39 921.564 cv
1662.13 913.071 1663 906.099 1663.96 901.782 cv
1668.84 879.788 1670.33 801.986 1684.99 789.768 cv
1699.65 777.549 1733.71 772.391 1733.71 772.391 cv
cp
f
1733.71 772.391 mo
1733.71 772.391 1727.38 806.222 1719.11 849.345 cv
1716.49 863.03 1713.66 877.644 1710.78 892.414 cv
1699.06 915.385 1689 931.003 1685.9 928.064 cv
1679.56 922.081 1668.43 921.342 1661.39 921.564 cv
1662.13 913.071 1663 906.099 1663.96 901.782 cv
1664.34 900.044 1664.71 897.959 1665.06 895.585 cv
1669.16 867.912 1671.48 801.02 1684.99 789.768 cv
1699.65 777.549 1733.71 772.391 1733.71 772.391 cv
cp
.45098 .603922 .941176 rgb
f
1719.11 849.345 mo
1716.49 863.03 1713.66 877.644 1710.78 892.414 cv
1699.06 915.385 1689 931.003 1685.9 928.064 cv
1679.56 922.081 1668.43 921.342 1661.39 921.564 cv
1662.13 913.071 1663 906.099 1663.96 901.782 cv
1664.34 900.044 1664.71 897.959 1665.06 895.585 cv
1700.2 810.768 li
1719.11 849.345 li
cp
.290196 .458824 .796078 rgb
f
1782.34 771.525 mo
1782.6 759.687 1782.4 745.55 1780.8 733.606 cv
1733.54 741.33 li
1733.54 741.33 1733.54 755.749 1733.75 771.752 cv
1733.72 771.755 1733.71 771.759 1733.71 771.759 cv
1733.71 771.759 1732.42 786.602 1750.7 788.774 cv
1768.98 790.945 1782.83 782.98 1782.34 771.525 cv
cp
.85098 .576471 .360784 rgb
f
1733.41 744.245 mo
1733.41 744.245 1744.54 767.053 1757.31 767.053 cv
1770.07 767.053 1782.02 745.603 1782.02 745.603 cv
1733.41 744.245 li
cp
.796078 .490196 .270588 rgb
f
1764.91 1397.98 mo
1764.91 1397.98 1766.63 1384.58 1770.61 1376.62 cv
1774.59 1368.66 1799.94 1373.72 1799.94 1373.72 cv
1799.94 1373.72 1805 1378.07 1806.09 1398.34 cv
1764.91 1397.98 li
cp
.137255 .219608 .384314 rgb
f
1678.57 1397.8 mo
1684.52 1394.16 1681.13 1367.05 1681.13 1367.05 cv
1681.13 1367.05 1653.39 1344.85 1649.57 1361.85 cv
1645.76 1378.84 1623.21 1386.47 1610.38 1388.55 cv
1601.52 1389.99 1598.78 1394.9 1597.93 1397.8 cv
1678.57 1397.8 li
cp
f
1734.95 745.935 mo
1739.54 749.548 1753 753.136 1756.89 753.556 cv
1756.89 753.556 1776.86 749.104 1780.49 746.914 cv
1786.11 743.507 1785.75 736.61 1786.04 727.023 cv
1786.38 715.676 1787.52 706.764 1786.26 700.222 cv
1784.75 692.395 1779.79 687.943 1765.9 686.733 cv
1740.39 684.52 1729.77 690.906 1729.33 699.456 cv
1729.21 701.752 1729.1 703.94 1729.03 706.015 cv
1728.01 732.678 1730.12 742.133 1734.95 745.935 cv
cp
.85098 .576471 .360784 rgb
f
1736.04 1196.31 mo
1734.91 1202.54 1734.19 1207.64 1734 1211.3 cv
1731.43 1261.61 1691.65 1376.65 1684.54 1379.34 cv
1673.53 1383.49 1656.2 1374.66 1647.13 1371.77 cv
1643.37 1370.57 1640.83 1366.78 1641.67 1362.94 cv
1661.37 1272.39 1668.61 1142 1671.24 1064.81 cv
1672.57 1025.93 1679.24 999.068 1679.24 999.068 cv
1679.24 999.068 1776.25 973.187 1776.82 1005.93 cv
1777.33 1034.9 1744.69 1148.52 1736.04 1196.31 cv
cp
.168627 .278431 .545098 rgb
f
1736.04 1196.31 mo
1671.24 1064.81 li
1672.57 1025.93 1679.24 999.068 1679.24 999.068 cv
1679.24 999.068 1776.25 973.187 1776.82 1005.93 cv
1777.33 1034.9 1744.69 1148.52 1736.04 1196.31 cv
cp
.137255 .219608 .384314 rgb
f
1714.46 1006.04 mo
1765.74 1377.71 li
1765.74 1377.71 1788.26 1383.14 1805.77 1378.79 cv
1805.77 1378.79 1820.79 1181.12 1819.54 1133.34 cv
1818.28 1085.55 1830.31 1005.46 1816.79 996.633 cv
1803.27 987.8 1714.46 1006.04 1714.46 1006.04 cv
cp
.168627 .278431 .545098 rgb
f
1824.16 996.63 mo
1824.33 1000.94 1820.92 1004.53 1816.62 1004.59 cv
1735.81 1005.82 li
1676.45 1006.73 li
1673.67 1006.78 1682.46 984.542 1682.64 839.549 cv
1682.68 807.193 1732.77 772.379 1733.7 772.379 cv
1733.71 772.391 li
1733.71 777.05 1741.05 785.652 1752.36 786.39 cv
1765.78 787.27 1782.25 780.591 1782.25 772.857 cv
1782.25 772.771 1783.81 774.46 1786.32 778.108 cv
1793.02 787.872 1806.52 811.68 1815.14 853.125 cv
1821.95 885.854 1819.33 929.613 1824.23 986.073 cv
1824.58 990.151 1824.06 993.773 1824.16 996.63 cv
cp
1 .643137 .0705882 rgb
f
1821.18 1005.04 mo
1821.18 1005.04 1810.44 1009.85 1790.35 1014.02 cv
1775.41 1017.12 1755.3 1019.87 1730.61 1020.02 cv
1691.33 1020.27 1676.45 1006.73 1676.45 1006.73 cv
1673.67 1006.78 1682.46 984.542 1682.64 839.549 cv
1682.68 807.193 1732.77 772.379 1733.7 772.379 cv
1733.71 772.391 li
1733.71 772.391 1732.42 815.476 1745.45 828.145 cv
1745.45 828.145 1763.73 814.025 1787.45 773.84 cv
1794.15 783.604 1806.52 811.68 1815.14 853.125 cv
1816.89 861.559 1818.02 870.719 1818.81 880.641 cv
1821.1 909.237 1820.59 944.155 1824.23 986.073 cv
1824.58 990.151 1824.06 993.773 1824.16 996.63 cv
1824.33 1000.94 1825.49 1004.98 1821.18 1005.04 cv
cp
.45098 .603922 .941176 rgb
f
1821.18 1005.04 mo
1821.18 1005.04 1810.44 1009.85 1790.35 1014.02 cv
1784.02 1004.38 1776.06 986.98 1774.96 959.562 cv
1773.09 913.196 1817.13 853.487 1817.13 853.487 cv
1818.81 880.641 li
1821.1 909.237 1820.59 944.155 1824.23 986.073 cv
1824.58 990.151 1824.06 993.773 1824.16 996.63 cv
1824.33 1000.94 1825.49 1004.98 1821.18 1005.04 cv
cp
.290196 .458824 .796078 rgb
f
1783.03 848.044 mo
1707.96 891.389 li
1767.41 994.371 li
1842.49 951.027 li
1783.03 848.044 li
cp
.168627 .278431 .545098 rgb
f
1854.24 944.355 mo
1854.24 944.355 1838.87 945.855 1812.58 943.156 cv
1793.62 941.206 1768.98 937.069 1740.34 928.608 cv
1748.71 914.31 li
1748.71 914.31 1782.94 912.8 1808.02 909.129 cv
1814.26 908.217 1819.94 907.169 1824.37 905.979 cv
1829.83 904.519 1802.76 835.938 1789.11 795.606 cv
1785.85 785.983 1783.36 777.968 1782.25 772.857 cv
1782.25 772.857 1784.64 773.243 1788.39 773.981 cv
1799.01 776.078 1820.61 781.008 1829.8 787.959 cv
1842.24 797.36 1873.28 903.379 1854.24 944.355 cv
cp
.85098 .576471 .360784 rgb
f
1749.01 914.309 mo
1749.01 914.309 1737.42 903.447 1732.93 903.447 cv
1728.45 903.447 1715.54 908.153 1714.22 911.773 cv
1712.9 915.395 1712.37 921.91 1716.06 923.358 cv
1719.75 924.807 1735.04 928.428 1739 928.789 cv
1742.95 929.151 1752.71 926.979 1749.01 914.309 cv
cp
f
1854.24 944.355 mo
1854.24 944.355 1838.87 945.855 1812.58 943.156 cv
1814.03 936.016 1815.38 922.069 1808.02 909.129 cv
1814.26 908.217 1819.94 907.169 1824.37 905.979 cv
1829.83 904.519 1802.76 835.938 1789.11 795.606 cv
1788.02 782.567 1787.45 773.84 1787.45 773.84 cv
1788.39 773.981 li
1799.01 776.078 1820.61 781.008 1829.8 787.959 cv
1842.24 797.36 1873.28 903.379 1854.24 944.355 cv
cp
.45098 .603922 .941176 rgb
f
1745.45 828.145 mo
1745.45 828.145 1782.02 812.034 1782.56 810.768 cv
1783.1 809.5 1780.75 799.726 1778.21 796.83 cv
1778.21 796.83 1795.77 798.459 1796.86 796.286 cv
1797.94 794.114 1798.31 776.012 1798.31 776.012 cv
1798.31 776.012 1791.43 768.772 1782.38 768.047 cv
1782.38 768.047 1774.45 787.698 1771.52 793.57 cv
1763.73 809.139 1745.45 828.145 1745.45 828.145 cv
cp
.290196 .458824 .796078 rgb
f
1736.76 796.286 mo
1736.76 796.286 1739.12 815.111 1745.45 828.145 cv
1745.45 828.145 1726.35 814.84 1724.72 810.496 cv
1723.09 806.151 1729.34 797.733 1729.34 797.733 cv
1729.34 797.733 1717.94 797.463 1717.66 793.661 cv
1717.39 789.86 1721.19 774.927 1721.19 774.927 cv
1721.19 774.927 1731 767.765 1733.72 768.037 cv
1736.76 796.286 li
cp
f
1728.8 714.564 mo
1728.8 714.564 1729.79 697.571 1740.34 697.367 cv
1750.88 697.162 1769.23 696.133 1776.85 688.968 cv
1784.47 681.803 1731.55 685.079 1731.55 685.079 cv
1731.55 685.079 1725.15 705.549 1728.8 714.564 cv
cp
.137255 .219608 .384314 rgb
f
1771.16 691.496 mo
1771.16 691.496 1784.91 697.094 1786.84 705.832 cv
1786.84 705.832 1791.37 673.61 1771.16 691.496 cv
cp
f
884.285 1311.46 mo
895.676 1359.44 li
912.737 1359.34 li
913.363 1311.46 li
884.285 1311.46 li
cp
1 .698039 .490196 rgb
f
1027.8 1313.51 mo
1060.21 1359.44 li
1072.84 1343.22 li
1053.34 1307.19 li
1027.8 1313.51 li
cp
f
911.301 712.477 mo
904.865 710.357 897.874 711.395 893.093 712.655 cv
894.08 711.118 896.436 710.155 896.436 710.155 cv
893.345 710.313 887.246 714.642 887.246 714.642 cv
842.258 706.97 848.086 769.761 851.842 783.864 cv
855.591 797.969 841.633 805.635 822.18 821.264 cv
785.066 851.085 787.222 880.566 787.222 880.566 cv
787.582 880.691 787.963 880.841 788.371 881.015 cv
789.726 877.117 792.64 869.723 796.01 868.016 cv
795.938 868.36 793.607 877.872 793.087 883.158 cv
807.188 889.994 834.212 905.99 853.096 917.388 cv
852.449 914.547 851.746 910.469 852.357 908.118 cv
856.717 919.58 li
866.827 925.702 873.821 930.032 873.821 930.032 cv
870.441 918.705 911.412 847.073 935.516 823.235 cv
940.271 811.916 939.129 793.845 939.03 792.423 cv
940.674 806.604 939.864 814.906 938.621 819.74 cv
957.78 793.349 928.358 718.088 911.301 712.477 cv
cp
.0862745 .207843 .376471 rgb
f
929.102 827.992 mo
929.243 828.056 915.419 835.233 905.021 832.39 cv
895.239 829.723 888.848 817.04 888.983 817.012 cv
893.125 816.189 894.319 810.496 894.231 786.035 cv
896.104 786.404 li
927.591 792.64 li
927.591 792.64 926.874 802.549 926.854 811.884 cv
926.832 819.722 927.307 827.155 929.102 827.992 cv
cp
1 .698039 .490196 rgb
f
878.595 729.543 mo
878.595 729.543 890.555 710.264 912.771 721.79 cv
912.771 721.79 901.257 722.109 878.595 729.543 cv
cp
.372549 .670588 .717647 rgb
f
927.591 792.64 mo
927.591 792.64 926.874 802.549 926.854 811.884 cv
909.234 811.387 899.92 795.314 896.104 786.404 cv
927.591 792.64 li
cp
.937255 .619608 .403922 rgb
f
889.625 787.509 mo
889.625 787.509 877.689 775.032 873.053 763.241 cv
869.742 754.822 867.665 721.563 901.126 719.669 cv
901.126 719.669 910.759 718.696 920.846 722.902 cv
928.868 726.249 941.133 734.49 935.432 765.026 cv
934.396 775.163 li
889.625 787.509 li
cp
.0862745 .207843 .376471 rgb
f
1069.81 1332.73 mo
1069.81 1332.73 1061.44 1334.17 1054.57 1334.69 cv
1053.04 1334.81 1051.59 1334.88 1050.33 1334.88 cv
1047.02 1334.88 1041.06 1333.63 1037.05 1332.7 cv
1036.75 1332.63 li
1035 1332.21 1033.66 1331.88 1033.16 1331.75 cv
1032.95 1331.69 li
1032.95 1331.69 991.213 1285.23 967.809 1210.76 cv
967.265 1209.02 966.686 1207.27 966.079 1205.5 cv
953.265 1168.14 926.707 1121.26 912.714 1078.82 cv
910.487 1072.06 908.485 1065.7 906.694 1059.68 cv
906.116 1057.75 905.558 1055.86 905.026 1053.99 cv
894.711 1018.15 891.728 994.626 888.977 969.486 cv
973.121 990.895 li
973.121 990.895 1008.45 1144.04 1069.81 1332.73 cv
cp
.647059 .239216 .219608 rgb
f
933.102 797.619 mo
933.102 797.619 892.373 806.531 887.214 781.081 cv
882.055 755.631 873.323 739.642 899.109 732.876 cv
924.896 726.109 931.933 734.794 935.721 742.87 cv
939.509 750.945 943.563 794.645 933.102 797.619 cv
cp
1 .698039 .490196 rgb
f
917.596 728.501 mo
917.596 728.501 912.427 760.62 896.145 768.497 cv
879.864 776.374 871.488 773.274 871.488 773.274 cv
871.488 773.274 882.551 760.155 881.603 741.341 cv
881.603 741.341 906.291 715.987 917.596 728.501 cv
cp
.0862745 .207843 .376471 rgb
f
915.311 731.484 mo
915.311 731.484 925.011 736.467 928.355 742.538 cv
931.699 748.61 935.305 761.77 939.104 760.532 cv
939.104 760.532 943.441 738.535 931.652 728.961 cv
919.152 718.811 915.311 731.484 915.311 731.484 cv
cp
f
895.104 1356.76 mo
895.104 1356.76 896.477 1366.26 892.931 1376.42 cv
892.931 1376.42 890.138 1389.15 902.669 1389.38 cv
915.2 1389.62 918.273 1388.44 916.854 1380.64 cv
915.437 1372.83 912.737 1359.34 912.737 1359.34 cv
895.104 1356.76 li
cp
1 .698039 .490196 rgb
f
892.931 1376.42 mo
892.931 1376.42 890.61 1388.44 892.028 1394.82 cv
892.028 1394.82 895.811 1397.66 904.915 1397.66 cv
913.545 1397.66 918.037 1394.82 918.037 1394.82 cv
918.037 1394.82 918.304 1381.66 915.998 1376.1 cv
915.998 1376.1 907.117 1389.43 892.931 1376.42 cv
cp
.768627 .329412 .27451 rgb
f
1103.04 1381.91 mo
1103.04 1381.91 1079.94 1356.27 1072.84 1343.22 cv
1055.67 1352.02 li
1094.07 1388.08 li
1103.05 1386.9 li
1103.04 1381.91 li
cp
1 .698039 .490196 rgb
f
1117.72 1396.94 mo
1117.72 1396.94 1092.89 1396.94 1088.63 1396.47 cv
1084.38 1396 1080.95 1389.85 1076.34 1380.63 cv
1074.45 1376.85 1070.22 1374.78 1065.88 1373.63 cv
1065.88 1394.99 li
1059.32 1394.99 li
1053.11 1372.29 li
1049.02 1364.77 1052.79 1357.96 1055.67 1352.02 cv
1059.01 1352.01 1068.02 1354.3 1085.09 1373.53 cv
1090.7 1379.85 1096.89 1382.1 1103.04 1381.91 cv
1103.13 1381.97 1103.21 1382.01 1103.3 1382.05 cv
1117.48 1388.43 1117.72 1396.94 1117.72 1396.94 cv
cp
.768627 .329412 .27451 rgb
f
1054.57 1334.69 mo
1053.04 1334.81 1051.59 1334.88 1050.33 1334.88 cv
1047.02 1334.88 1041.06 1333.63 1037.05 1332.7 cv
1036.75 1332.63 li
1033.16 1331.75 li
1032.95 1331.69 li
1032.95 1331.69 991.213 1285.23 967.809 1210.76 cv
967.265 1209.02 966.686 1207.27 966.079 1205.5 cv
953.265 1168.14 926.707 1121.26 912.714 1078.82 cv
910.487 1072.06 908.485 1065.7 906.694 1059.68 cv
906.116 1057.75 905.558 1055.86 905.026 1053.99 cv
919.905 1042.69 li
919.905 1042.69 964.588 1115.04 978.418 1183.13 cv
989.885 1239.57 1039.25 1312.73 1054.57 1334.69 cv
cp
.568627 .184314 .184314 rgb
f
921.465 1189.48 mo
921.717 1222.58 920.041 1298.71 915.73 1330.23 cv
915.73 1330.23 911.642 1333.84 901.5 1333.89 cv
891.115 1333.93 886.471 1330.1 886.471 1330.1 cv
875.65 1275.3 867.957 1229.97 862.353 1190.89 cv
857.756 1158.83 853.67 1131.35 850.531 1107.68 cv
847.746 1086.72 845.703 1068.75 844.723 1053.26 cv
844.594 1051.15 844.478 1049.09 844.382 1047.09 cv
844.26 1044.43 844.165 1041.85 844.116 1039.35 cv
844.069 1036.83 844.056 1034.38 844.076 1032 cv
844.438 1031.97 li
865.342 1029.93 li
931.393 1023.49 li
930.29 1081.51 921.322 1170.23 921.465 1189.48 cv
cp
.647059 .239216 .219608 rgb
f
901.5 1333.89 mo
892.665 1334.4 886.471 1330.1 886.471 1330.1 cv
875.65 1275.3 867.957 1229.97 862.353 1190.89 cv
857.756 1158.83 853.67 1131.35 850.531 1107.68 cv
847.746 1086.72 845.703 1068.75 844.723 1053.26 cv
844.606 1045.62 844.524 1038.31 844.438 1031.97 cv
844.342 1025.54 844.24 1020.1 844.063 1016.31 cv
865.342 1029.93 li
887.731 1044.25 li
887.731 1044.25 855.972 1073.15 863.775 1127.76 cv
871.572 1182.38 890.638 1326.15 901.5 1333.89 cv
cp
.568627 .184314 .184314 rgb
f
918.807 815.955 mo
918.807 815.955 952.748 810.569 964.141 821.902 cv
978.104 835.792 1004.32 915.427 1003.28 924.516 cv
1002.88 927.984 989.101 926.371 984.378 921.42 cv
960.837 896.733 927.082 834.429 918.807 815.955 cv
cp
.737255 .247059 .247059 rgb
f
984.737 1038.32 mo
959.399 1044.9 841.161 1057.9 840.14 1028.29 cv
839.888 1021.06 840.14 1012.34 840.712 1002.89 cv
842.476 973.64 847.276 937.489 849.578 917.599 cv
850.633 908.481 847.127 867.645 849.816 845.393 cv
850.211 842.097 850.742 839.202 851.45 836.887 cv
856.557 820.095 879.505 815.54 891.285 815.138 cv
926.831 813.926 li
926.831 813.926 963.54 854.932 968.646 867.529 cv
973.754 880.127 975.423 923.251 979.392 944.135 cv
983.361 965.02 997.063 1035.12 984.737 1038.32 cv
cp
f
914.907 938.231 mo
914.907 938.231 895.146 998.924 840.712 1002.89 cv
842.476 973.64 847.276 937.489 849.578 917.599 cv
850.633 908.481 847.127 867.645 849.816 845.393 cv
850.524 845.542 851.167 845.938 851.907 846.08 cv
911.848 857.656 920.354 925.579 914.907 938.231 cv
cp
.647059 .239216 .219608 rgb
f
1001.56 926.01 mo
1001.56 926.01 965.883 937.71 922.406 918.943 cv
922.406 918.943 910.563 917.823 904.688 919.318 cv
904.688 919.318 905.95 907.574 911.697 904.377 cv
917.444 901.183 942.157 908.094 949.549 907.078 cv
965.699 904.857 993.835 903.12 1001.56 926.01 cv
cp
.937255 .619608 .403922 rgb
f
969.764 898.683 mo
969.764 898.683 973.111 869.686 961.763 852.208 cv
961.763 852.208 965.77 850.846 968.646 855.386 cv
971.522 859.926 991.563 903.001 982.021 906.173 cv
972.479 909.345 969.764 898.683 969.764 898.683 cv
cp
.647059 .239216 .219608 rgb
f
917.672 903.527 mo
917.16 903.53 900.819 905.662 897.925 907.704 cv
895.03 909.748 897.584 916.897 903.032 917.578 cv
908.479 918.26 917.672 903.527 917.672 903.527 cv
cp
.937255 .619608 .403922 rgb
f
873.002 914.514 mo
873.002 914.514 919.544 912.812 961.763 904.641 cv
961.763 904.641 969.479 904.709 968.572 911.45 cv
967.665 918.19 895.398 955.916 879.51 948.652 cv
873.002 914.514 li
cp
1 .698039 .490196 rgb
f
961.763 904.641 mo
961.763 904.641 966.7 898.683 969.764 898.683 cv
972.827 898.683 980.828 902.598 982.021 906.173 cv
983.212 909.748 972.551 907.194 968.572 911.45 cv
964.593 915.706 961.763 904.641 961.763 904.641 cv
cp
f
891.288 815.139 mo
891.288 815.139 852.177 815.231 846.457 829.283 cv
836.016 854.932 870.431 940.027 879.51 948.652 cv
883.415 952.361 901.5 946.514 901.5 922.004 cv
901.5 909.293 900.588 835.031 891.288 815.139 cv
cp
.737255 .247059 .247059 rgb
f
871.474 1030.24 mo
871.474 1030.24 896.643 1038.93 893.102 1067.93 cv
893.102 1067.93 890.777 1079.69 883.532 1074.47 cv
876.287 1069.25 879.683 1070.22 869.335 1063.08 cv
858.987 1055.95 852.232 1044.7 853.41 1035.76 cv
871.474 1030.24 li
cp
1 .698039 .490196 rgb
f
872.624 1032.1 mo
857.717 1050.19 li
857.022 1051.03 855.926 1051.42 854.852 1051.22 cv
840.878 1048.65 792.781 1017.65 777.028 1005 cv
775.318 1003.63 773.995 1002.48 773.132 1001.6 cv
767.258 995.613 747.002 966.083 732.625 939.783 cv
724.348 924.636 718.02 910.563 717.519 902.677 cv
715.727 874.522 730.537 835.152 730.537 835.152 cv
774.345 850.398 778.953 885.376 778.953 885.376 cv
803.24 975.764 li
872.029 1027.18 li
873.599 1028.35 873.867 1030.6 872.624 1032.1 cv
cp
.45098 .603922 .941176 rgb
f
777.028 1005 mo
775.318 1003.63 773.995 1002.48 773.132 1001.6 cv
767.258 995.613 747.002 966.083 732.625 939.783 cv
730.764 923.89 732.041 908.981 738.592 898.559 cv
738.592 898.559 775.832 964.087 777.028 1005 cv
cp
.290196 .509804 .827451 rgb
f
751.789 1265.42 mo
744.341 1296.48 li
739.732 1315.7 li
724.389 1379.68 li
724.389 1379.68 711.256 1383.73 697.606 1379.68 cv
697.606 1379.68 692.551 1358.51 692.406 1332.1 cv
692.326 1318.29 693.596 1303.04 697.631 1288.64 cv
699.269 1282.78 701.374 1277.07 704.026 1271.65 cv
725.673 1227.43 751.789 1265.42 751.789 1265.42 cv
cp
1 .698039 .490196 rgb
f
764.505 1398.38 mo
692.4 1398.38 li
692.4 1398.38 691.261 1387.47 694.437 1377.03 cv
694.903 1375.48 695.47 1373.94 696.148 1372.45 cv
696.148 1372.45 712.246 1376.1 726.126 1372.45 cv
726.126 1372.45 739.178 1383.56 747.068 1386.97 cv
754.951 1390.38 763.67 1388.53 764.505 1398.38 cv
cp
.168627 .278431 .545098 rgb
f
744.341 1296.48 mo
739.732 1315.7 li
731.893 1320.7 714.98 1329.76 692.406 1332.1 cv
692.326 1318.29 693.596 1303.04 697.631 1288.64 cv
704.263 1285.28 711.014 1283.52 716.761 1284.52 cv
731.07 1287.02 739.578 1292.25 744.341 1296.48 cv
cp
.909804 .580392 .356863 rgb
f
727.054 1398.38 mo
692.4 1398.38 li
692.4 1398.38 691.261 1387.47 694.437 1377.03 cv
703.136 1379.74 720.839 1386.53 727.054 1398.38 cv
cp
.121569 .223529 .427451 rgb
f
694.312 1265.42 mo
686.863 1296.48 li
682.256 1315.7 li
666.912 1379.68 li
666.912 1379.68 653.779 1383.73 640.129 1379.68 cv
640.129 1379.68 635.072 1358.51 634.929 1332.1 cv
634.848 1318.29 636.119 1303.04 640.153 1288.64 cv
641.792 1282.78 643.896 1277.07 646.549 1271.65 cv
668.195 1227.43 694.312 1265.42 694.312 1265.42 cv
cp
1 .698039 .490196 rgb
f
638.671 1372.44 mo
638.671 1372.44 654.767 1376.1 668.649 1372.44 cv
668.649 1372.44 681.702 1383.56 689.589 1386.97 cv
697.477 1390.38 706.195 1388.53 707.025 1398.38 cv
634.922 1398.38 li
634.922 1398.38 633.418 1383.99 638.671 1372.44 cv
cp
.168627 .278431 .545098 rgb
f
686.863 1296.48 mo
682.256 1315.7 li
674.416 1320.7 657.503 1329.76 634.929 1332.1 cv
634.848 1318.29 636.119 1303.04 640.153 1288.64 cv
646.786 1285.28 653.536 1283.52 659.283 1284.52 cv
673.594 1287.02 682.1 1292.25 686.863 1296.48 cv
cp
.909804 .580392 .356863 rgb
f
766.833 1294.42 mo
765.102 1300.83 759.286 1305.27 752.648 1305.27 cv
637.034 1305.27 li
628.328 1305.27 621.472 1297.87 622.139 1289.2 cv
623.353 1273.45 627.687 1247.73 629.58 1230.36 cv
630.365 1223.14 630.726 1217.37 630.271 1214.36 cv
618.602 1137.14 608.806 1046.19 609.996 1028.8 cv
610.164 1026.35 610.282 1025.09 610.282 1025.09 cv
610.282 1025.09 618.701 1024.38 631.511 1023.88 cv
668.743 1022.41 743.064 1022.67 755.413 1047.01 cv
767.992 1071.82 775.588 1236.5 775.588 1236.5 cv
777.426 1251.89 770.932 1279.26 766.833 1294.42 cv
cp
.776471 .329412 .278431 rgb
f
629.58 1230.36 mo
630.365 1223.14 630.726 1217.37 630.271 1214.36 cv
618.602 1137.14 608.806 1046.19 609.996 1028.8 cv
610.164 1026.35 610.282 1025.09 610.282 1025.09 cv
610.282 1025.09 618.701 1024.38 631.511 1023.88 cv
650.771 1035.23 663.307 1054.56 663.307 1054.56 cv
663.307 1054.56 659.428 1199.06 629.58 1230.36 cv
cp
.698039 .266667 .231373 rgb
f
686.769 720.561 mo
686.769 711.992 692.135 704.716 701.37 707.025 cv
709.684 709.104 717.801 709.011 717.801 717.58 cv
717.801 726.149 710.854 736.077 702.285 736.077 cv
693.716 736.077 686.769 729.131 686.769 720.561 cv
cp
f
696.604 795.876 mo
696.604 795.876 648.489 752.545 692.045 721.868 cv
692.045 721.868 705.043 718.404 711.648 719.642 cv
711.648 719.642 735.324 712.715 749.179 728.795 cv
763.032 744.876 769.052 756.504 757.178 770.853 cv
745.303 785.201 696.604 795.876 696.604 795.876 cv
cp
.776471 .329412 .278431 rgb
f
641.395 1057.58 mo
641.395 1057.58 653.272 1081.41 630.439 1099.63 cv
630.439 1099.63 620.54 1106.4 619.022 1097.6 cv
617.506 1088.8 619.257 1091.86 616.867 1079.52 cv
614.479 1067.18 617.535 1054.42 624.634 1048.87 cv
641.395 1057.58 li
cp
1 .698039 .490196 rgb
f
736.015 795.474 mo
736.015 795.474 735.424 801.963 734.321 810.73 cv
733.786 815.015 733.132 819.848 732.359 824.729 cv
731.812 828.235 731.201 831.772 730.535 835.153 cv
715.64 885.462 li
680.661 828.857 li
680.661 828.857 688.881 822.058 700.021 785.199 cv
700.128 784.807 700.202 784.596 700.202 784.596 cv
736.015 795.474 li
cp
f
756.396 1043.67 mo
756.852 1049.32 755.419 1050.35 755.419 1050.35 cv
755.419 1050.35 733.91 1058.15 679.821 1055.45 cv
673.967 1055.16 668.456 1054.86 663.307 1054.56 cv
628.447 1052.5 609.803 1050.35 609.803 1050.35 cv
609.803 1050.35 581.251 984.45 634.892 903.254 cv
640.957 894.075 648.074 884.696 656.401 875.2 cv
665.087 865.294 667.006 852.036 670.293 839.438 cv
671.233 835.826 668.513 835.028 669.869 831.623 cv
669.869 831.623 679.652 828.857 680.661 828.857 cv
686.216 833.753 693.546 843.268 711.735 845.148 cv
724.034 846.432 728.848 839.5 730.597 835.347 cv
735.286 837.041 740.144 839.967 744.123 841.879 cv
777.083 857.703 780.109 888.391 780.109 888.391 cv
780.109 888.391 749.82 987.986 747.939 1000.42 cv
747.1 1005.95 754.049 1014.55 756.396 1043.67 cv
cp
.45098 .603922 .941176 rgb
f
734.321 810.73 mo
733.786 815.015 731.973 826.74 731.201 831.623 cv
694.162 817.182 699.014 789.041 700.021 785.199 cv
700.128 784.807 700.202 784.596 700.202 784.596 cv
700.202 784.596 719.8 798.507 734.321 810.73 cv
cp
.909804 .580392 .356863 rgb
f
742.26 815.708 mo
742.26 815.708 699.48 817.081 699.036 790.426 cv
698.592 763.773 692.771 745.999 720.065 743.995 cv
747.36 741.992 752.838 752.074 755.15 760.935 cv
757.463 769.794 753.377 814.664 742.26 815.708 cv
cp
1 .698039 .490196 rgb
f
745.997 740.002 mo
745.997 740.002 743.312 784.504 691.16 779.729 cv
691.16 779.729 692.269 718.1 745.997 740.002 cv
cp
.776471 .329412 .278431 rgb
f
736.015 744.426 mo
736.015 744.426 750.629 762.515 757.258 768.284 cv
757.258 768.284 773.515 744.958 736.015 744.426 cv
cp
f
736.015 744.426 mo
736.015 744.426 749.145 766.6 755.773 772.37 cv
755.773 772.37 773.515 744.958 736.015 744.426 cv
736.015 744.426 li
cp
f
663.307 1054.56 mo
628.447 1052.5 609.803 1050.35 609.803 1050.35 cv
609.803 1050.35 581.251 984.45 634.892 903.254 cv
645.752 928.567 671.364 996.22 663.307 1054.56 cv
cp
.290196 .509804 .827451 rgb
f
680.661 828.857 mo
680.661 828.857 639.275 837.35 620.839 858.7 cv
606.711 875.06 591.256 955.046 591.256 968.263 cv
591.256 980.892 605.773 1048.04 614.835 1060.91 cv
615.465 1061.81 616.515 1062.3 617.603 1062.19 cv
640.909 1059.71 li
642.854 1059.51 644.233 1057.72 643.934 1055.79 cv
630.838 970.904 li
676.805 889.379 li
676.805 889.379 703.908 857.253 680.661 828.857 cv
cp
.45098 .603922 .941176 rgb
f
858.207 1375.4 mo
858.207 1375.4 861.713 1382.24 869.481 1383.93 cv
874.375 1385 878.563 1387.54 881.171 1391.12 cv
883.375 1394.13 881.243 1398.38 877.507 1398.38 cv
838.077 1398.38 li
834.72 1398.38 832.1 1395.48 832.436 1392.14 cv
832.729 1389.22 833.036 1385.82 833.17 1383.21 cv
833.463 1377.51 839.166 1372.93 839.166 1372.93 cv
858.207 1375.4 li
cp
.172549 .227451 .392157 rgb
f
867.137 1275.96 mo
868.784 1305.94 864.694 1374.09 864.694 1374.09 cv
864.694 1374.09 861.945 1381.69 844.586 1383.5 cv
835.286 1384.47 826.914 1382.06 826.914 1382.06 cv
823.412 1365.93 820.172 1350.51 817.19 1335.87 cv
795.758 1230.73 787.398 1165.78 787.398 1165.78 cv
872 1146.11 li
872 1146.11 868.293 1205.47 867.203 1245.95 cv
866.861 1258.59 866.778 1269.39 867.137 1275.96 cv
cp
.207843 .282353 .545098 rgb
f
872 1146.11 mo
872 1146.11 868.293 1205.47 867.203 1245.95 cv
817.19 1335.87 li
795.758 1230.73 787.398 1165.78 787.398 1165.78 cv
872 1146.11 li
cp
.172549 .227451 .392157 rgb
f
786.942 1010.16 mo
786.942 1010.16 754.207 995.259 729.439 1008.29 cv
704.672 1021.33 719.813 1128.92 755.231 1139.35 cv
755.231 1139.35 li
755.231 1139.35 821.581 1160.57 786.942 1010.16 cv
cp
.207843 .282353 .545098 rgb
f
881.639 1171.2 mo
881.639 1171.2 li
881.639 1171.2 li
881.543 1171.05 881.436 1170.91 881.319 1170.78 cv
879.965 1168.72 877.016 1161.33 877.016 1161.33 cv
871.706 1168.29 li
871.57 1168.44 869.469 1166.8 869.356 1166.98 cv
869.878 1184.97 li
875.159 1183.72 li
875.386 1183.66 875.606 1183.59 875.819 1183.49 cv
875.819 1183.49 li
875.819 1183.49 li
876.461 1183.19 877.027 1182.72 877.43 1182.08 cv
881.694 1175.32 li
882.515 1174.02 882.439 1172.4 881.639 1171.2 cv
cp
.909804 .580392 .356863 rgb
f
857.235 993.44 mo
857.235 993.44 867.661 993.466 873.888 1008.12 cv
886.793 1038.5 881.188 1104.06 880.405 1113.45 cv
880.405 1113.45 884.837 1132.09 878.253 1164.33 cv
869.669 1169.42 li
869.669 1169.42 856.451 1042.03 858.065 1029.44 cv
859.68 1016.86 857.235 993.44 857.235 993.44 cv
cp
f
789.567 1375.4 mo
789.567 1375.4 793.073 1382.24 800.842 1383.93 cv
805.735 1385 809.924 1387.54 812.531 1391.12 cv
814.735 1394.13 812.604 1398.38 808.867 1398.38 cv
769.438 1398.38 li
766.08 1398.38 763.46 1395.48 763.797 1392.14 cv
764.089 1389.22 764.396 1385.82 764.531 1383.21 cv
764.822 1377.51 770.525 1372.93 770.525 1372.93 cv
789.567 1375.4 li
cp
.172549 .227451 .392157 rgb
f
816.997 873.27 mo
808.565 873.27 797.972 876.899 792.288 882.423 cv
786.251 888.289 779.97 888.589 775.497 895.516 cv
770.834 902.736 767.945 910.238 770.288 920.397 cv
772.847 931.494 772.327 942.229 779.298 950.376 cv
782.748 954.409 788.368 954.865 792.288 958.57 cv
799.484 965.373 807.664 967.526 816.997 967.526 cv
834.589 967.526 845.538 957.104 854.543 944.118 cv
861.756 933.715 860.327 926.701 862.02 917.801 cv
867.346 889.788 843.979 873.27 816.997 873.27 cv
cp
.207843 .282353 .545098 rgb
f
841.766 986.189 mo
808.138 1003.38 li
801.398 980.047 li
801.398 980.047 805.683 971.973 807.62 958.747 cv
808.432 953.186 808.833 946.713 808.316 939.544 cv
835.715 953.573 li
835.715 953.573 835.063 956.106 834.625 959.846 cv
834.158 963.886 833.95 969.332 835.098 974.507 cv
836.089 978.949 838.076 983.19 841.766 986.189 cv
cp
1 .698039 .490196 rgb
f
763.856 1155.24 mo
763.856 1155.24 757.465 1239.99 758.889 1375.04 cv
758.889 1375.04 766.603 1379.1 775.902 1380.03 cv
793.272 1381.75 797.502 1374.87 797.502 1374.87 cv
797.502 1374.87 815.265 1308.95 819.706 1279.25 cv
823.799 1251.87 850.683 1153.06 850.683 1153.06 cv
763.856 1155.24 li
cp
.207843 .282353 .545098 rgb
f
863.995 988.542 mo
861.006 987.142 851.626 983.384 837.515 981.062 cv
837.663 985.896 836.372 990.406 827.889 991.518 cv
816.602 992.988 806.509 985.285 801.398 980.049 cv
801.397 980.05 li
801.398 980.047 li
801.398 980.047 793.44 980.9 784.161 982.932 cv
779.519 983.951 774.545 985.264 770.074 986.922 cv
764.652 988.915 759.969 991.403 757.47 994.466 cv
757.468 994.467 757.467 994.467 757.464 994.468 cv
757.465 994.473 li
748.78 1005.13 734.493 1037.23 734.493 1037.23 cv
734.493 1037.23 758.281 1046.05 764.277 1051.19 cv
764.414 1052.34 li
768.138 1083.25 li
757.051 1144.82 li
756.956 1145.36 756.903 1145.9 756.903 1146.43 cv
756.903 1150.54 759.718 1154.24 763.853 1155.24 cv
763.853 1155.24 764.806 1155.4 766.562 1155.64 cv
778.315 1157.29 826.026 1162.98 863.434 1152.83 cv
871.844 1150.54 877.387 1142.51 876.689 1133.81 cv
870.59 1057.29 li
873.846 1056.73 877.603 1056.14 880.656 1055.8 cv
883.195 1055.52 885.237 1055.43 886.084 1055.68 cv
886.084 1055.68 881.857 995.92 863.995 988.542 cv
cp
.976471 .592157 .27451 rgb
f
793.405 1102.11 mo
792.932 1123.6 778.854 1148.84 766.562 1155.64 cv
764.806 1155.4 763.853 1155.24 763.853 1155.24 cv
759.718 1154.24 756.903 1150.54 756.903 1146.43 cv
756.903 1145.9 756.956 1145.36 757.051 1144.82 cv
768.138 1083.25 li
764.414 1052.34 li
764.595 1051.8 764.689 1051.51 764.689 1051.51 cv
764.689 1051.51 794.241 1064.16 793.405 1102.11 cv
cp
.929412 .490196 .168627 rgb
f
880.656 1055.8 mo
877.525 1056.14 870.573 1057.29 870.573 1057.29 cv
867.051 1025.23 li
867.051 1025.23 878.816 1047.83 880.656 1055.8 cv
cp
f
759.031 1133.82 mo
761.911 1117.83 li
810.674 1047.28 814.364 1034.62 792.436 1002.95 cv
786.155 993.876 774.731 988.206 770.074 986.922 cv
774.545 985.264 779.519 983.951 784.161 982.932 cv
788.789 985.105 793.046 987.243 796.347 990.101 cv
863.273 1048.04 759.031 1133.82 759.031 1133.82 cv
cp
.207843 .282353 .545098 rgb
f
787.771 1066.89 mo
788.981 1066.8 794.241 1064.16 794.241 1064.16 cv
794.241 1064.16 796.884 1044.6 815.976 1043.28 cv
815.976 1043.28 823.928 1043.33 822.296 1048.76 cv
820.665 1054.18 820.494 1051.83 818.365 1059.54 cv
816.236 1067.25 810.689 1073.12 804.785 1073.47 cv
798.735 1075.11 li
798.735 1075.11 784.589 1067.12 787.771 1066.89 cv
cp
1 .698039 .490196 rgb
f
794.241 1064.16 mo
794.241 1064.16 762.2 1067.07 757.465 1069.17 cv
757.465 1069.17 760.065 1062.14 764.688 1051.51 cv
760.51 1047.4 746.779 1041.29 737.688 1038.49 cv
730.754 1056.17 728.09 1073.69 731.979 1090.57 cv
732.39 1092.35 733.957 1093.63 735.785 1093.71 cv
746.039 1094.19 780.058 1094.02 804.765 1073.25 cv
794.241 1064.16 li
cp
f
835.098 974.507 mo
819.519 974.09 807.62 958.747 807.62 958.747 cv
834.625 959.846 li
834.158 963.886 833.95 969.332 835.098 974.507 cv
cp
.909804 .580392 .356863 rgb
f
836.581 965.096 mo
836.581 965.096 802.157 969.291 801.422 945.039 cv
800.688 920.787 815.037 905.077 824.613 905.257 cv
843.711 905.614 846.861 913.332 849.076 921.367 cv
851.289 929.402 852.429 963.386 836.581 965.096 cv
cp
1 .698039 .490196 rgb
f
827.375 951.118 mo
827.375 951.118 828.124 954.142 835.663 953.585 cv
835.663 953.585 841.994 953.119 841.76 949.787 cv
841.76 949.787 835.59 947.489 827.375 951.118 cv
cp
1 1 1 rgb
f
833.135 905.482 mo
833.135 905.482 803.716 905.464 810.477 925.661 cv
814.736 938.391 800.569 940.369 800.569 940.369 cv
793.751 919.967 li
798.022 904.071 li
833.135 905.482 li
cp
.207843 .282353 .545098 rgb
f
1849.21 978.284 mo
1816.81 970.039 1781.19 919.775 1781.19 919.775 cv
1790.31 911.863 li
1799.76 922.998 1839.03 942.176 1839.03 942.176 cv
1838.82 931.985 1839.09 922.691 1839.73 914.231 cv
1844.09 856.736 1865.76 837.58 1871.68 833.377 cv
1872.63 832.695 1873.18 832.41 1873.18 832.41 cv
1873.18 832.41 1873.2 832.827 1873.24 833.619 cv
1873.32 835.327 1873.48 838.77 1873.64 843.493 cv
1874.84 878.684 1876.28 985.181 1849.21 978.284 cv
cp
.85098 .576471 .360784 rgb
f
1790.31 911.863 mo
1790.18 910.504 1789.26 890.752 1785.34 886.991 cv
1781.42 883.23 1773.67 878.108 1771.44 878.523 cv
1769.22 878.938 1761.65 891.515 1765.22 900.179 cv
1768.79 908.841 1781.19 919.775 1781.19 919.775 cv
1790.31 911.863 li
cp
f
1798.37 914.159 mo
1777.03 915.052 li
1776.32 915.082 1775.72 914.531 1775.69 913.823 cv
1773.99 873.137 li
1773.96 872.429 1774.51 871.831 1775.22 871.801 cv
1796.56 870.908 li
1797.26 870.879 1797.86 871.428 1797.89 872.138 cv
1799.59 912.823 li
1799.62 913.532 1799.07 914.13 1798.37 914.159 cv
cp
.945098 .639216 .309804 rgb
f
1792.82 914.392 mo
1773.47 915.201 li
1772.21 915.254 1771.15 914.277 1771.1 913.022 cv
1769.48 874.319 li
1769.43 873.063 1770.4 872.002 1771.66 871.949 cv
1791.01 871.141 li
1792.27 871.088 1793.33 872.063 1793.38 873.318 cv
1795 912.022 li
1795.05 913.278 1794.08 914.339 1792.82 914.392 cv
cp
.847059 .403922 .0745098 rgb
f
1769.82 880.032 mo
1769.82 880.032 1775.64 873.538 1781.46 878.501 cv
1787.28 883.464 1781.07 894.062 1776.03 896.958 cv
1770.98 899.855 1769.36 901.365 1769.36 901.365 cv
1769.82 880.032 li
cp
.85098 .576471 .360784 rgb
f
1919.75 1312.56 mo
1917.78 1320.41 1915.61 1327.88 1913.4 1334.83 cv
1912.92 1336.33 1912.45 1337.79 1911.98 1339.22 cv
1911.74 1339.94 1911.5 1340.64 1911.28 1341.34 cv
1910.81 1342.71 1910.35 1344.07 1909.89 1345.39 cv
1909.29 1347.11 1908.69 1348.79 1908.1 1350.41 cv
1907.67 1351.61 1907.24 1352.79 1906.81 1353.95 cv
1900.24 1371.57 1894.74 1382.73 1894.74 1382.73 cv
1881.64 1381.83 li
1881.64 1381.83 1886.56 1358.45 1887.54 1324.96 cv
1887.58 1323.77 1887.61 1322.56 1887.63 1321.34 cv
1887.68 1318.75 1887.71 1316.1 1887.71 1313.4 cv
1887.71 1312.29 1887.71 1311.17 1887.7 1310.04 cv
1887.44 1281.19 1883.87 1247.11 1872.47 1214.56 cv
1863.21 1188.1 1856.49 1163.35 1851.63 1140.97 cv
1835.95 1068.75 1839.64 1021.31 1839.64 1021.31 cv
1913.28 1029.92 li
1916.71 1030.33 li
1917.03 1064.15 1917.89 1110.07 1918.66 1145.98 cv
1918.79 1152.21 1918.91 1158.14 1919.03 1163.66 cv
1919.54 1186.71 1919.92 1202.47 1919.92 1202.47 cv
1934.09 1232.96 1928.94 1276 1919.75 1312.56 cv
cp
.796078 .490196 .270588 rgb
f
1898.67 768.449 mo
1898.67 768.449 1916.09 783.283 1900.12 800.358 cv
1900.12 800.358 1913.43 801.665 1917.93 797.979 cv
1917.93 797.979 1917.05 799.775 1916.23 800.584 cv
1916.23 800.584 1931.11 801.119 1937.25 796.477 cv
1943.4 791.835 1939.45 715.69 1898.14 724.203 cv
1898.14 724.203 1863.13 721.561 1866.39 762.071 cv
1869.66 802.582 1856.44 802.584 1856.44 802.584 cv
1856.44 802.584 1860.11 804.396 1861.89 804.396 cv
1861.89 804.396 1864.48 803.406 1865 801.972 cv
1865 801.972 1864.48 804.225 1863.82 804.941 cv
1863.82 804.941 1878.09 806.293 1885.21 800.907 cv
1892.33 795.521 1900.7 776.807 1898.67 768.449 cv
cp
.137255 .219608 .384314 rgb
f
1954.89 1013.04 mo
1940.97 981.83 1934.32 973.004 1934.08 963.183 cv
1933.9 955.417 1937.73 947.036 1945.17 926.49 cv
1946.92 921.648 1948.13 916.669 1948.87 911.637 cv
1954.76 872.024 1931.85 829.203 1917.61 826.287 cv
1913.65 825.24 1906.94 810.933 1907.02 787.88 cv
1905.24 788.23 li
1875.26 794.167 li
1875.26 794.167 1875.94 803.601 1875.96 812.488 cv
1875.98 819.896 1875.58 827.431 1873.9 828.314 cv
1871.75 828.51 1869.78 828.903 1869.78 828.903 cv
1869.78 828.903 1844.41 846.721 1842.77 870.886 cv
1840.59 903.167 1863.34 941.433 1843.16 1005.95 cv
1822.55 1071.84 1962.58 1030.29 1954.89 1013.04 cv
cp
.85098 .576471 .360784 rgb
f
1875.26 794.167 mo
1875.26 794.167 1875.94 803.601 1875.96 812.488 cv
1892.74 812.016 1901.6 796.713 1905.24 788.23 cv
1875.26 794.167 li
cp
.796078 .490196 .270588 rgb
f
1908.33 784.966 mo
1908.33 784.966 1917.12 771.076 1919.23 759.198 cv
1920.74 750.719 1916.42 719.287 1884.83 723.814 cv
1884.83 723.814 1875.66 724.718 1867.04 730.542 cv
1860.18 735.174 1850.28 745.174 1861.35 772.602 cv
1864.22 781.867 li
1908.33 784.966 li
cp
.137255 .219608 .384314 rgb
f
1869.66 802.582 mo
1869.66 802.582 1909.35 803.237 1909.37 778.514 cv
1909.4 753.79 1914.54 737.225 1889.2 735.761 cv
1863.86 734.298 1858.93 743.727 1856.91 751.977 cv
1854.9 760.226 1859.33 801.774 1869.66 802.582 cv
cp
.85098 .576471 .360784 rgb
f
1871.13 735.155 mo
1871.13 735.155 1881.99 764.16 1898.67 768.449 cv
1915.35 772.737 1922.58 768.27 1922.58 768.27 cv
1922.58 768.27 1909.79 758.107 1907.13 740.368 cv
1907.13 740.368 1879.32 721.351 1871.13 735.155 cv
cp
.137255 .219608 .384314 rgb
f
1873.82 737.51 mo
1873.82 737.51 1865.7 743.986 1863.72 750.281 cv
1861.75 756.576 1860.86 769.537 1857.08 769.097 cv
1857.08 769.097 1848.89 749.382 1858.09 738.229 cv
1867.85 726.403 1873.82 737.51 1873.82 737.51 cv
cp
f
2006.51 1046.2 mo
1994.6 1049.77 li
1994.6 1049.77 1955.29 984.555 1951.72 967.586 cv
1950.55 962.061 1947.69 951.005 1944.36 938.619 cv
1937.46 912.968 1928.55 881.58 1928.55 881.58 cv
1925.62 868.874 li
1915.61 825.544 li
1915.61 825.544 1934.77 827.501 1945.97 832.187 cv
1949.69 833.735 1952.52 835.583 1953.5 837.752 cv
1961.74 855.854 1969.96 901.537 1975.73 934.125 cv
1978.95 952.287 1981.41 966.385 1982.69 969.373 cv
1986.26 977.707 1997.18 1023.57 2006.51 1046.2 cv
cp
.85098 .576471 .360784 rgb
f
1872.31 738.489 mo
1872.31 738.489 1880.05 768.863 1901.1 778.592 cv
1901.1 778.592 1880.05 759.931 1878.27 739.879 cv
1876.48 719.829 1872.31 738.489 1872.31 738.489 cv
cp
.137255 .219608 .384314 rgb
f
2005.67 1044.21 mo
2005.67 1044.21 2009.29 1052.75 2013.06 1055.13 cv
2016.83 1057.51 2020.42 1063.23 2021.2 1067.84 cv
2022.64 1076.29 2016.16 1081.53 2011.39 1081.53 cv
2006.63 1081.53 2002.08 1075.04 1999.28 1059.52 cv
1999.12 1058.67 1994.6 1049.77 1994.6 1049.77 cv
2005.67 1044.21 li
cp
.85098 .576471 .360784 rgb
f
1962 1306.22 mo
1957.76 1351.41 1939.12 1380.63 1939.12 1380.63 cv
1932.75 1386.43 li
1932.75 1386.43 1926.95 1353.34 1922.77 1315.46 cv
1918.78 1279.46 1913.31 1241.36 1907.12 1229.72 cv
1897.87 1212.35 1891.06 1176.81 1886.15 1139.27 cv
1878.04 1077.14 1875.17 1009.5 1875.17 1009.5 cv
1949.83 1005.8 li
1957.35 1018.42 1960.61 1039.13 1961.39 1062.68 cv
1962.21 1087.43 1960.26 1115.32 1957.56 1140.25 cv
1953.78 1175.15 1948.52 1204.24 1947.3 1210.78 cv
1947.3 1210.78 1947.3 1210.79 1947.29 1210.81 cv
1947.13 1211.67 1947.38 1212.53 1947.79 1213.31 cv
1962.65 1242.72 1964.79 1276.36 1962 1306.22 cv
cp
f
1874.86 909.282 mo
1873.18 950.299 1867.05 990.914 1849.19 988.301 cv
1827.3 985.105 1821.6 964.676 1820.44 949.487 cv
1819.71 940.034 1820.75 932.612 1820.75 932.612 cv
1820.75 932.612 1831.53 932.563 1833.27 930.957 cv
1841.55 923.314 1839.09 848.358 1843.18 840.576 cv
1847.28 832.794 1873.85 827.797 1873.85 827.797 cv
1873.85 827.797 1876.53 868.74 1874.86 909.282 cv
cp
.933333 .596078 .286275 rgb
f
1874.86 909.282 mo
1873.18 950.299 1867.05 990.914 1849.19 988.301 cv
1827.3 985.105 1821.6 964.676 1820.44 949.487 cv
1825.81 949.217 1835.27 947.906 1839.03 942.173 cv
1844.41 933.965 1861.21 881.126 1861.21 881.126 cv
1861.21 881.126 1867.81 892.988 1874.86 909.282 cv
cp
.898039 .52549 .219608 rgb
f
1919.75 1312.56 mo
1917.78 1320.41 1915.61 1327.88 1913.4 1334.83 cv
1912.92 1336.33 1912.45 1337.79 1911.98 1339.22 cv
1911.74 1339.94 1911.5 1340.64 1911.28 1341.34 cv
1910.81 1342.71 1910.35 1344.07 1909.89 1345.39 cv
1909.29 1347.11 1908.69 1348.79 1908.1 1350.41 cv
1907.67 1351.61 1907.24 1352.79 1906.81 1353.95 cv
1900.24 1371.57 1894.74 1382.73 1894.74 1382.73 cv
1881.64 1381.83 li
1881.64 1381.83 1886.56 1358.45 1887.54 1324.96 cv
1887.58 1323.77 1887.61 1322.56 1887.63 1321.34 cv
1887.68 1318.75 1887.71 1316.1 1887.71 1313.4 cv
1887.71 1312.29 1887.71 1311.17 1887.7 1310.04 cv
1887.44 1281.19 1883.87 1247.11 1872.47 1214.56 cv
1863.21 1188.1 1856.49 1163.35 1851.63 1140.97 cv
1859.41 1142.58 1866.26 1140.94 1886.15 1139.27 cv
1888.24 1139.09 1898.23 1151.47 1908.1 1167.84 cv
1908.61 1190.89 1919.92 1202.47 1919.92 1202.47 cv
1934.09 1232.96 1928.94 1276 1919.75 1312.56 cv
cp
.137255 .219608 .384314 rgb
f
1962 1306.22 mo
1957.76 1351.41 1939.12 1380.63 1939.12 1380.63 cv
1932.75 1386.43 li
1932.75 1386.43 1926.95 1353.34 1922.77 1315.46 cv
1918.78 1279.46 1913.31 1241.36 1907.12 1229.72 cv
1897.87 1212.35 1891.06 1176.81 1886.15 1139.27 cv
1893.02 1142.13 1916.41 1149.56 1957.56 1140.25 cv
1953.78 1175.15 1948.52 1204.24 1947.3 1210.78 cv
1947.3 1210.78 1947.3 1210.79 1947.29 1210.81 cv
1947.13 1211.67 1947.38 1212.53 1947.79 1213.31 cv
1962.65 1242.72 1964.79 1276.36 1962 1306.22 cv
cp
.168627 .278431 .545098 rgb
f
1851.63 964.994 mo
1851.63 964.994 1895.55 976.018 1934.08 963.183 cv
1934.08 963.183 1955.24 1008.1 1961.06 1027.35 cv
1966.88 1046.6 1976.3 1086.33 1976.3 1086.33 cv
1976.3 1086.33 1898.07 1110.5 1833.76 1086.33 cv
1833.76 1086.33 1830.83 1033.4 1839.26 1005.8 cv
1847.69 978.2 1851.63 964.994 1851.63 964.994 cv
cp
.137255 .219608 .384314 rgb
f
2010.85 985.573 mo
2010.85 995.879 2000.34 1002.21 1989.06 1005.29 cv
1978.21 1008.26 1966.66 1008.21 1963.05 1005.8 cv
1956.81 1001.62 1946.66 955.174 1943.69 941.033 cv
1943.16 938.47 1942.85 936.97 1942.85 936.97 cv
1942.85 936.97 1934.75 956.303 1934.5 958.105 cv
1934.38 958.917 1934.29 960.031 1934.21 961.014 cv
1934.13 962.201 1934.08 963.185 1934.08 963.185 cv
1934.08 963.185 1890.12 985.376 1851.63 964.994 cv
1851.63 964.994 1835.98 874.572 1842.77 859.008 cv
1846.15 851.274 1863.75 835.317 1870.8 828.437 cv
1872.38 826.889 1872.22 823.823 1871.61 821.022 cv
1871.1 818.655 1873.23 816.574 1875.57 817.18 cv
1880.11 818.36 1888.26 818.155 1896.99 815.289 cv
1901.34 813.871 1905.83 811.79 1910.08 808.89 cv
1911.32 808.047 1913 808.825 1913.18 810.308 cv
1913.85 815.697 1915.48 825.545 1918.45 825.545 cv
1922.55 825.521 1950.5 828.952 1952.54 832.409 cv
1953.26 833.613 1960.52 850.055 1969.7 871.837 cv
1969.7 871.837 1969.71 871.854 1969.72 871.895 cv
1986.94 912.755 2010.85 972.392 2010.85 985.573 cv
cp
.933333 .596078 .286275 rgb
f
1942.85 936.97 mo
1942.85 936.97 1934.75 956.303 1934.5 958.105 cv
1934.38 958.917 1934.29 960.031 1934.21 961.014 cv
1930.3 964.208 1925.56 966.633 1920.74 968.1 cv
1907.03 972.253 1901.08 945.981 1901.9 932.875 cv
1902.71 919.768 1922.1 882.355 1928.55 881.577 cv
1935 880.807 1942.85 936.97 1942.85 936.97 cv
cp
.898039 .52549 .219608 rgb
f
1943.69 941.033 mo
1943.16 938.47 1942.85 936.97 1942.85 936.97 cv
1943.28 938.354 1943.56 939.706 1943.69 941.033 cv
cp
f
1887.11 973.373 mo
1862.09 973.373 1852.16 966.353 1851.4 965.766 cv
1849.78 953.983 li
1850.02 954.161 1883.59 974.318 1935.54 955.014 cv
1934.44 963.939 li
1914.46 971.364 1900.1 973.373 1887.11 973.373 cv
cp
.713726 .298039 .254902 rgb
f
2010.85 985.573 mo
2010.85 995.879 2000.34 1002.21 1989.06 1005.29 cv
2004.61 986.777 1970.58 874.754 1969.72 871.895 cv
1986.94 912.755 2010.85 972.392 2010.85 985.573 cv
cp
.898039 .52549 .219608 rgb
f
1918.45 825.545 mo
1918.45 825.545 1897.52 838.799 1881.69 835.661 cv
1881.69 835.661 1877.88 833.261 1883.13 830.845 cv
1888.05 828.583 1899.5 821.891 1896.99 815.289 cv
1901.34 813.871 1905.83 811.79 1910.08 808.89 cv
1911.32 808.047 1913 808.825 1913.18 810.308 cv
1913.85 815.697 1915.48 825.545 1918.45 825.545 cv
cp
f
1902.27 1393.71 mo
1893.92 1393.71 li
1891.12 1393.27 1889.05 1392.46 1886.18 1392.08 cv
1881.82 1391.51 1879.81 1393.3 1879.41 1393.71 cv
1879.36 1393.76 1879.33 1393.79 1879.33 1393.79 cv
1843.84 1393.79 li
1842.95 1392.52 1843.8 1389.57 1844.64 1387.39 cv
1845.21 1385.91 1846.44 1384.79 1847.97 1384.35 cv
1851.73 1383.26 1859.15 1382.29 1865.95 1376.14 cv
1869.77 1372.69 1884.41 1363.44 1884.41 1363.44 cv
1884.49 1363.42 li
1884.81 1363.43 1886.34 1363.9 1893 1369.52 cv
1896.44 1372.42 1902.31 1365.42 1902.31 1365.42 cv
1902.31 1365.42 1903.41 1366.33 1904.23 1368.03 cv
1904.89 1369.37 1905.37 1371.21 1904.99 1373.48 cv
1904.46 1376.68 1906.17 1382.62 1907.54 1386.64 cv
1908.36 1389.08 1909.06 1390.8 1909.06 1390.8 cv
1909.06 1390.8 1909.46 1392.81 1902.27 1393.71 cv
cp
.137255 .219608 .384314 rgb
f
1904.23 1368.03 mo
1902.23 1369.44 1898.02 1372.2 1895.23 1372.57 cv
1891.46 1373.06 1884.41 1363.44 1884.41 1363.44 cv
1884.49 1363.42 li
1884.81 1363.43 1886.34 1363.9 1893 1369.52 cv
1896.44 1372.42 1902.31 1365.42 1902.31 1365.42 cv
1902.31 1365.42 1903.41 1366.33 1904.23 1368.03 cv
cp
.27451 .415686 .647059 rgb
f
1902.27 1393.71 mo
1893.92 1393.71 li
1891.12 1393.27 1889.05 1392.46 1886.18 1392.08 cv
1881.82 1391.51 1879.81 1393.3 1879.41 1393.71 cv
1879.36 1393.76 1879.33 1393.79 1879.33 1393.79 cv
1843.84 1393.79 li
1842.95 1392.52 1843.8 1389.57 1844.64 1387.39 cv
1845.72 1386.43 1846.03 1391.55 1846.62 1392.37 cv
1847.22 1393.19 1875.58 1392.67 1877.21 1391.48 cv
1878.85 1390.29 1883.77 1388.2 1890.62 1389.84 cv
1896.58 1391.26 1905.36 1387.61 1907.54 1386.64 cv
1908.36 1389.08 1909.06 1390.8 1909.06 1390.8 cv
1909.06 1390.8 1909.46 1392.81 1902.27 1393.71 cv
cp
f
1946.86 1393.71 mo
1938.5 1393.71 li
1935.71 1393.27 1933.64 1392.46 1930.77 1392.08 cv
1926.41 1391.51 1924.4 1393.3 1924 1393.71 cv
1923.95 1393.76 1923.93 1393.79 1923.93 1393.79 cv
1888.43 1393.79 li
1887.54 1392.52 1888.39 1389.57 1889.23 1387.39 cv
1889.8 1385.91 1891.03 1384.79 1892.56 1384.35 cv
1896.32 1383.26 1903.74 1382.29 1910.54 1376.14 cv
1914.36 1372.69 1929 1363.44 1929 1363.44 cv
1929.08 1363.42 li
1929.4 1363.43 1930.93 1363.9 1937.59 1369.52 cv
1941.03 1372.42 1946.9 1365.42 1946.9 1365.42 cv
1946.9 1365.42 1948 1366.33 1948.82 1368.03 cv
1949.48 1369.37 1949.96 1371.21 1949.58 1373.48 cv
1949.05 1376.68 1950.76 1382.62 1952.13 1386.64 cv
1952.95 1389.08 1953.65 1390.8 1953.65 1390.8 cv
1953.65 1390.8 1954.05 1392.81 1946.86 1393.71 cv
cp
.137255 .219608 .384314 rgb
f
1948.82 1368.03 mo
1946.82 1369.44 1942.61 1372.2 1939.82 1372.57 cv
1936.05 1373.06 1929 1363.44 1929 1363.44 cv
1929.08 1363.42 li
1929.4 1363.43 1930.93 1363.9 1937.59 1369.52 cv
1941.03 1372.42 1946.9 1365.42 1946.9 1365.42 cv
1946.9 1365.42 1948 1366.33 1948.82 1368.03 cv
cp
.27451 .415686 .647059 rgb
f
1946.86 1393.71 mo
1938.5 1393.71 li
1935.71 1393.27 1933.64 1392.46 1930.77 1392.08 cv
1926.41 1391.51 1924.4 1393.3 1924 1393.71 cv
1923.95 1393.76 1923.93 1393.79 1923.93 1393.79 cv
1888.43 1393.79 li
1887.54 1392.52 1888.39 1389.57 1889.23 1387.39 cv
1890.31 1386.43 1890.62 1391.55 1891.21 1392.37 cv
1891.81 1393.19 1920.17 1392.67 1921.81 1391.48 cv
1923.44 1390.29 1928.36 1388.2 1935.21 1389.84 cv
1941.17 1391.26 1949.95 1387.61 1952.13 1386.64 cv
1952.95 1389.08 1953.65 1390.8 1953.65 1390.8 cv
1953.65 1390.8 1954.05 1392.81 1946.86 1393.71 cv
cp
f
2288.43 1221.53 mo
2283.39 1234.41 2257.6 1260.93 2231.01 1285.97 cv
2199.25 1315.89 2166.37 1343.7 2166.37 1343.7 cv
2166.37 1343.7 2151.34 1348.29 2157.89 1326.17 cv
2157.89 1326.17 2194.14 1259.57 2209.71 1239.91 cv
2214.15 1234.3 2218.75 1229.17 2223.06 1224.7 cv
2233.82 1213.54 2242.74 1206.55 2242.74 1206.55 cv
2242.74 1206.55 2240.7 1203.27 2237.39 1197.6 cv
2221.21 1169.9 2174.77 1085.06 2189.11 1047.4 cv
2206.38 1002.02 2249.3 981.585 2249.3 981.585 cv
2249.3 981.585 2262.91 1039 2274.4 1098.02 cv
2284.96 1152.33 2293.73 1207.99 2288.43 1221.53 cv
cp
.976471 .592157 .27451 rgb
f
2274.4 1098.02 mo
2266.49 1134.37 2252.8 1185.79 2237.39 1197.6 cv
2221.21 1169.9 2174.77 1085.06 2189.11 1047.4 cv
2206.38 1002.02 2249.3 981.585 2249.3 981.585 cv
2249.3 981.585 2262.91 1039 2274.4 1098.02 cv
cp
.929412 .490196 .168627 rgb
f
2231.01 1285.97 mo
2199.25 1315.89 2166.37 1343.7 2166.37 1343.7 cv
2166.37 1343.7 2151.34 1348.29 2157.89 1326.17 cv
2157.89 1326.17 2194.14 1259.57 2209.71 1239.91 cv
2214.15 1234.3 2218.75 1229.17 2223.06 1224.7 cv
2222.55 1241.7 2223.04 1270.54 2231.01 1285.97 cv
cp
f
2268.21 1067.26 mo
2268.21 1067.26 2230.6 972.848 2232.58 970.121 cv
2233.81 968.416 2236.2 916.906 2237.83 878.199 cv
2238.82 854.655 2239.53 835.84 2239.53 835.84 cv
2239.53 835.84 2256.2 841.778 2260.19 882.328 cv
2260.96 890.151 2261.41 897.517 2261.68 904.39 cv
2262.81 933.167 2260.7 953.435 2265 963.019 cv
2270.33 974.896 2268.42 1029.1 2270.06 1034.56 cv
2271.69 1040.02 2280.17 1053.67 2268.21 1067.26 cv
cp
1 .698039 .490196 rgb
f
2238.47 1004.35 mo
2235.47 993.284 li
2214.35 1002.42 2152.26 989.06 2152.26 989.06 cv
2152.26 989.06 2133.76 1010.98 2143.29 1055.46 cv
2147.94 1077.17 2164.38 1169.92 2171.12 1197.09 cv
2173.55 1206.93 2175.44 1213.92 2176.21 1216.7 cv
2176.21 1216.72 2176.22 1216.72 2176.22 1216.73 cv
2176.45 1217.58 2176.27 1218.44 2175.94 1219.27 cv
2173.08 1226.35 2170.92 1233.6 2169.36 1240.93 cv
2154 1312.9 2196.08 1392.39 2196.08 1392.39 cv
2203.27 1388.16 li
2203.27 1388.16 2206.07 1292.25 2213.53 1248.96 cv
2214.8 1241.61 2216.2 1235.78 2217.74 1232.19 cv
2222.24 1221.73 2225.4 1205.26 2227.61 1185.9 cv
2231.78 1149.31 2232.53 1102.41 2232.29 1066.32 cv
2233 1066.25 2238.47 1004.35 2238.47 1004.35 cv
cp
.976471 .592157 .27451 rgb
f
2143.19 1016.08 mo
2134.6 1003.08 2164.06 950.002 2163.01 944.996 cv
2160.95 935.134 2156.1 924.205 2151.35 914.383 cv
2146.59 904.561 2141.93 895.837 2140.27 890.373 cv
2141.8 888.242 2143.3 886.243 2144.69 884.359 cv
2146.8 881.46 2148.64 878.798 2149.82 876.308 cv
2151.13 873.596 2151.68 871.064 2151.05 868.623 cv
2150.57 866.771 2149.91 864.929 2149.13 863.126 cv
2148.76 862.274 2148.37 861.432 2147.95 860.596 cv
2143.56 851.813 2137.01 844.67 2137.01 844.67 cv
2147.38 838.023 2163.73 834.635 2163.87 835.127 cv
2165.08 834.726 2166.16 834.438 2167.03 834.217 cv
2167.63 834.063 2168.24 833.914 2168.84 833.775 cv
2170.9 833.283 2172.97 832.857 2174.76 832.529 cv
2178.49 828.794 2182.94 814.949 2181.6 794.553 cv
2183.4 794.789 li
2213.61 798.869 li
2213.61 798.869 2213.52 808.314 2214.03 817.162 cv
2214.44 824.084 2215.24 830.638 2216.75 832.071 cv
2219.09 832.26 2220.5 832.398 2220.5 832.398 cv
2220.5 832.398 2220.5 832.407 2220.52 832.423 cv
2220.53 832.44 2220.54 832.465 2220.57 832.489 cv
2222.27 832.628 2223.84 832.775 2225.27 832.939 cv
2225.27 832.939 2225.39 832.948 2225.62 832.973 cv
2228.27 833.274 2230.46 833.604 2232.26 833.922 cv
2232.39 833.955 2232.51 833.979 2232.63 833.996 cv
2237.79 834.947 2239.53 835.84 2239.53 835.84 cv
2239.53 835.929 li
2239.28 845.448 2254.65 862.095 2253.57 883.631 cv
2253.53 884.441 2245.72 940.884 2245.75 941.719 cv
2246.38 957.792 2254.25 1003.05 2254.25 1003.05 cv
2261.44 1017.06 2147.81 1029.45 2143.19 1016.08 cv
cp
1 .698039 .490196 rgb
f
2171.14 721.997 mo
2170.58 720.435 2164 703.78 2137.76 711.064 cv
2137.76 711.064 2151 708.566 2154.98 713.482 cv
2154.98 713.482 2144.1 709.287 2137.73 713.745 cv
2131.35 718.204 2131.1 731.912 2132.35 736.002 cv
2133.59 740.093 2141.66 752.001 2146.5 751.704 cv
2148.34 751.592 2150.26 750.861 2151.95 749.997 cv
2151.34 752.239 2150.82 754.667 2150.42 757.318 cv
2146.76 781.837 2163.98 799.25 2172.03 794.193 cv
2177.19 790.949 2181.8 800.043 2181.8 800.043 cv
2222.5 738.614 li
2222.5 738.614 2189.35 703.416 2171.14 721.997 cv
cp
.172549 .227451 .392157 rgb
f
2213.62 798.878 mo
2213.62 798.878 2213.51 808.314 2214.04 817.166 cv
2197.3 817.719 2187.54 803.021 2183.4 794.796 cv
2213.62 798.878 li
cp
.929412 .596078 .372549 rgb
f
2219.71 806.917 mo
2219.71 806.917 2180.23 809.99 2178.69 785.373 cv
2177.15 760.755 2171.02 744.571 2196.17 741.567 cv
2221.31 738.564 2226.8 747.652 2229.31 755.744 cv
2231.82 763.837 2229.94 805.483 2219.71 806.917 cv
cp
1 .698039 .490196 rgb
f
2227.3 742.128 mo
2220.74 735.097 2216.22 737.005 2213.77 739.39 cv
2191.44 728.837 2178.59 747.249 2178.59 747.249 cv
2177.03 765.076 2164.91 775.977 2164.91 775.977 cv
2164.91 775.977 2172.39 779.985 2188.74 774.696 cv
2193.73 773.081 2198.04 769.198 2201.62 764.589 cv
2195.59 776.268 2186.94 784.945 2186.94 784.945 cv
2206.21 774.559 2212.49 746.479 2213.1 743.514 cv
2215.65 745.533 2220.69 749.948 2222.43 754.473 cv
2224.78 760.621 2226.46 773.473 2230.19 772.804 cv
2230.19 772.804 2237.14 752.672 2227.3 742.128 cv
cp
.172549 .227451 .392157 rgb
f
2243.25 1394.66 mo
2181.98 1394.66 li
2181.98 1394.66 2179.69 1384.89 2183.71 1378.24 cv
2187.27 1372.36 2185.08 1368.36 2183.54 1363.36 cv
2186.32 1364.5 2189.64 1366.31 2193.59 1366.08 cv
2196.64 1365.9 2201.43 1363.66 2204.26 1362.02 cv
2206.9 1365.03 2216.63 1378.68 2220.16 1381.21 cv
2224.16 1384.09 2242.02 1383.07 2243.25 1394.66 cv
cp
.137255 .219608 .384314 rgb
f
2152.18 1393.23 mo
2129.12 1336.46 li
2129.12 1336.46 2137.31 1330.66 2144.99 1331.88 cv
2151.78 1332.97 2154.37 1330.44 2157.89 1326.17 cv
2157.88 1329.17 2158.28 1332.88 2159.97 1336.46 cv
2161.29 1339.22 2163.78 1341.69 2166.37 1343.7 cv
2164.58 1347.27 2156.97 1362.55 2155.95 1366.77 cv
2154.79 1371.56 2162.46 1387.72 2152.18 1393.23 cv
cp
f
2245.75 941.723 mo
2245.73 941.257 2248.15 923.518 2250.31 907.764 cv
2255.05 907.241 2260.79 906.131 2265.76 903.803 cv
2265.49 896.93 2260.91 838.132 2236.19 834.821 cv
2235.01 834.501 2233.8 834.229 2232.63 834 cv
2232.51 833.983 2232.39 833.959 2232.26 833.926 cv
2229.23 833.359 2226.54 833.066 2225.62 832.976 cv
2225.39 832.951 2225.27 832.942 2225.27 832.942 cv
2225.27 832.942 2232.64 853.864 2232.5 856.322 cv
2232.36 858.78 2208.68 859.6 2193.12 859.805 cv
2177.68 860.009 2168.99 834.18 2168.85 833.778 cv
2168.24 833.918 2167.63 834.064 2167.03 834.221 cv
2166.16 834.441 2145.52 837.587 2137.01 844.674 cv
2137.01 844.674 2143.57 851.816 2147.95 860.599 cv
2148.37 861.434 2148.76 862.278 2149.13 863.13 cv
2149.91 864.933 2150.57 866.774 2151.05 868.626 cv
2151.68 871.067 2151.13 873.6 2149.82 876.311 cv
2148.64 878.8 2146.8 881.463 2144.69 884.362 cv
2143.3 886.247 2141.8 888.246 2140.27 890.375 cv
2140.84 892.252 2141.76 894.521 2142.93 897.076 cv
2142.93 897.085 li
2145.15 901.976 2148.23 907.947 2151.35 914.387 cv
2156.1 924.209 2160.95 935.137 2163.01 944.999 cv
2164.06 950.005 2134.6 1003.09 2143.19 1016.08 cv
2144.56 1020.03 2155.44 1021.73 2169.92 1021.81 cv
2204.42 1021.99 2259.32 1012.93 2254.25 1003.05 cv
2254.25 1003.05 2246.38 957.796 2245.75 941.723 cv
cp
.168627 .278431 .545098 rgb
f
2169.92 1021.81 mo
2155.44 1021.73 2144.56 1020.03 2143.19 1016.08 cv
2134.6 1003.09 2164.06 950.005 2163.01 944.999 cv
2160.95 935.137 2156.1 924.209 2151.35 914.387 cv
2148.23 907.947 2145.15 901.976 2142.93 897.085 cv
2142.93 897.077 li
2144.15 892.269 2144.86 889.467 2144.86 889.467 cv
2144.86 889.467 2176.21 925.921 2183.4 943.123 cv
2189.04 956.615 2175.87 1002.58 2169.92 1021.81 cv
cp
.137255 .219608 .384314 rgb
f
2155.02 997.092 mo
2148.82 1007.84 li
2108.95 992.046 2083.55 956.469 2083.55 956.469 cv
2082.16 936.267 2091.61 913.043 2102.93 893.006 cv
2104.81 889.688 2106.73 886.461 2108.68 883.348 cv
2116.68 890.188 2127.87 899.142 2138.52 905.654 cv
2136.87 908.398 2134.88 911.684 2132.74 915.197 cv
2123.91 929.771 2112.48 948.433 2111 949.915 cv
2108.54 952.372 2155.02 997.092 2155.02 997.092 cv
cp
1 .698039 .490196 rgb
f
2134.38 919.571 mo
2114.75 918.277 2100.28 892.744 2100.28 892.744 cv
2115.61 865.652 2137.01 844.67 2137.01 844.67 cv
2191.41 865.438 2143.25 913.71 2134.38 919.571 cv
cp
.168627 .278431 .545098 rgb
f
2155.01 997.085 mo
2155.01 997.085 2158.37 996.605 2160.55 994.694 cv
2162.74 992.783 2169.7 987.386 2170.11 989.06 cv
2170.52 990.734 2165.06 993.328 2167.93 993.738 cv
2170.79 994.147 2175.3 992.225 2179.81 992.913 cv
2184.31 993.602 2191.24 1003.98 2189.11 1005.21 cv
2186.97 1006.44 2179.19 1002.34 2177.14 1003.77 cv
2175.1 1005.21 2160.48 1013.2 2148.81 1007.84 cv
2137.15 1002.48 2155.01 997.085 2155.01 997.085 cv
cp
1 .698039 .490196 rgb
f
1553.47 763.915 mo
1553.47 763.915 1525.08 762.492 1524.28 746.108 cv
1523.49 729.726 1500.04 717.776 1506.83 704.624 cv
1515.16 688.492 1507.56 672.986 1518.08 662.141 cv
1529.66 650.19 1544.3 656.681 1552.02 649.718 cv
1559.74 642.754 1573.87 636.338 1587.79 644.938 cv
1601.72 653.54 1612.35 648.91 1621.5 657.193 cv
1631.62 666.347 1627.78 677.867 1636.12 684.123 cv
1643.77 689.857 1640.65 705.525 1634.21 718.256 cv
1629.57 727.433 1640.27 736.032 1621.9 746.578 cv
1614.26 750.966 1615.92 762.011 1592.71 763.915 cv
1582.25 764.773 1559.57 759.877 1553.47 763.915 cv
cp
.172549 .227451 .392157 rgb
f
1499.3 1394.66 mo
1499.3 1394.66 1499.3 1383.17 1500.94 1379.34 cv
1502.58 1375.52 1508.58 1359.96 1508.58 1359.96 cv
1532.07 1359.96 li
1532.07 1359.96 1536.43 1374.15 1536.71 1378.8 cv
1536.98 1383.44 1536.71 1394.66 1536.71 1394.66 cv
1499.3 1394.66 li
cp
.137255 .219608 .384314 rgb
f
1648.4 1394.66 mo
1648.4 1394.66 1648.4 1383.17 1646.76 1379.34 cv
1645.13 1375.52 1639.12 1359.96 1639.12 1359.96 cv
1615.63 1359.96 li
1615.63 1359.96 1611.26 1374.15 1610.99 1378.8 cv
1610.72 1383.44 1610.99 1394.66 1610.99 1394.66 cv
1648.4 1394.66 li
cp
f
1554.32 749.385 mo
1554.32 749.385 1553.49 774.984 1550.22 786.454 cv
1524.28 804.544 li
1621.9 819.152 li
1598.62 786.986 li
1598.62 786.986 1591.59 752.662 1595.28 739.965 cv
1598.97 727.268 1554.32 749.385 1554.32 749.385 cv
cp
.709804 .435294 .25098 rgb
f
1554.18 752.921 mo
1554.18 752.913 1561.9 771.503 1576.44 771.094 cv
1590.98 770.685 1594.29 754.242 1594.29 754.242 cv
1554.18 752.921 li
cp
.6 .34902 .180392 rgb
f
1574.77 763.913 mo
1564.24 763.728 1544.84 749.698 1544.84 732.325 cv
1544.84 705.216 li
1544.84 698.871 1549.27 693.681 1554.67 693.681 cv
1594.87 693.681 li
1600.28 693.681 1604.7 698.871 1604.7 705.216 cv
1604.7 730.791 li
1604.7 749.008 1586.86 764.126 1574.77 763.913 cv
cp
.709804 .435294 .25098 rgb
f
1502.24 996.519 mo
1502.24 996.519 1506.35 1121.98 1500.21 1193.57 cv
1494.06 1265.16 1500.25 1364.78 1500.25 1364.78 cv
1500.25 1364.78 1519.9 1375.61 1541.2 1364.78 cv
1541.2 1364.78 1564.56 1226.48 1564.41 1193.57 cv
1564.25 1158.52 1589.83 1001.99 1589.83 1001.99 cv
1502.24 996.519 li
cp
.933333 .596078 .286275 rgb
f
1647.55 1364.78 mo
1647.55 1364.78 1627.91 1375.62 1606.61 1364.78 cv
1606.61 1364.78 1583.25 1226.48 1583.4 1193.57 cv
1583.47 1178.76 1578.95 1142.28 1573.69 1105.09 cv
1566.51 1054.21 1557.97 1001.99 1557.97 1001.99 cv
1648.96 996.306 li
1648.96 996.306 1641.46 1121.99 1647.6 1193.57 cv
1653.75 1265.16 1647.55 1364.78 1647.55 1364.78 cv
cp
f
1631.81 793.056 mo
1631.81 793.11 li
1620 790.138 1608.89 788.181 1598.62 786.986 cv
1589.56 799.021 1583.06 801.813 1574.78 805.09 cv
1561.45 803.247 1550.22 786.83 1550.22 786.454 cv
1535.7 787.941 1525.91 790.605 1521.92 791.843 cv
1521.13 791.937 1478.54 797.563 1418.26 920.268 cv
1418.26 920.268 1421.51 931.564 1437.32 951.267 cv
1448.56 965.274 1466.18 983.542 1493.51 1005.01 cv
1493.51 1005.01 1496.09 999.5 1498.44 990.578 cv
1498.44 990.578 1482.2 958.967 1472.42 937.561 cv
1467.67 927.141 1464.44 919.146 1465.37 918.376 cv
1467.13 916.913 1486.78 899.852 1501.29 887.245 cv
1501.17 890.396 1501.14 893.261 1501.21 895.75 cv
1502 923.16 1503.1 949.801 1499.57 979.307 cv
1494.93 1018.08 1502.79 1017.39 1502.79 1017.39 cv
1502.79 1017.39 1513.38 1019.46 1528.14 1021.42 cv
1541.49 1023.21 1558.26 1024.9 1573.69 1024.9 cv
1609.08 1024.9 1647.87 1017.39 1647.87 1017.39 cv
1659.04 1017.53 1644.74 947.916 1642.65 906.03 cv
1642.17 896.303 1641.72 887.426 1641.3 879.312 cv
1654.64 890.896 1684.18 916.563 1686.36 918.376 cv
1687.28 919.146 1684.06 927.141 1679.3 937.561 cv
1669.52 958.967 1653.28 990.578 1653.28 990.578 cv
1655.63 999.5 1658.21 1005.01 1658.21 1005.01 cv
1685.54 983.542 1703.16 965.274 1714.41 951.267 cv
1730.22 931.564 1733.46 920.268 1733.46 920.268 cv
1672.61 796.406 1631.81 793.056 1631.81 793.056 cv
cp
.713726 .298039 .254902 rgb
f
1528.14 1021.42 mo
1513.38 1019.46 1502.79 1017.39 1502.79 1017.39 cv
1502.79 1017.39 1494.93 1018.08 1499.57 979.307 cv
1503.1 949.801 1502 923.16 1501.21 895.75 cv
1501.12 892.703 1501.19 889.098 1501.38 885.084 cv
1503.64 888.705 1528.84 929.402 1535.62 959.646 cv
1540.56 981.707 1533.11 1007.69 1528.14 1021.42 cv
cp
.666667 .254902 .243137 rgb
f
1583.4 1193.57 mo
1583.47 1178.76 1578.95 1142.28 1573.69 1105.09 cv
1579.14 1082.88 1592.41 1061.5 1592.41 1061.5 cv
1609.21 1108.6 1583.4 1193.57 1583.4 1193.57 cv
cp
.898039 .52549 .219608 rgb
f
1495.2 992.139 mo
1495.2 992.139 1509.95 978.485 1515.96 986.131 cv
1521.96 993.777 1523.05 1005.79 1518.41 1004.97 cv
1513.77 1004.15 1504.21 999.785 1502.85 1001.97 cv
1501.48 1004.15 1495.37 1008.33 1493.51 1005.01 cv
1491.65 1001.7 1495.2 992.139 1495.2 992.139 cv
cp
.709804 .435294 .25098 rgb
f
1498.44 990.58 mo
1496.09 999.5 1493.51 1005.01 1493.51 1005.01 cv
1466.18 983.542 1448.56 965.274 1437.32 951.267 cv
1445.79 950.636 1458.17 947.604 1472.42 937.561 cv
1482.2 958.967 1498.44 990.58 1498.44 990.58 cv
cp
f
1656.52 992.139 mo
1656.52 992.139 1641.77 978.485 1635.76 986.131 cv
1629.76 993.777 1628.66 1005.79 1633.31 1004.97 cv
1637.95 1004.15 1647.51 999.785 1648.87 1001.97 cv
1650.24 1004.15 1656.35 1008.33 1658.21 1005.01 cv
1660.07 1001.7 1656.52 992.139 1656.52 992.139 cv
cp
f
1653.28 990.58 mo
1655.63 999.5 1658.21 1005.01 1658.21 1005.01 cv
1685.54 983.542 1703.16 965.274 1714.4 951.267 cv
1705.92 950.636 1693.55 947.604 1679.3 937.561 cv
1669.52 958.967 1653.28 990.58 1653.28 990.58 cv
cp
f
1686.36 918.376 mo
1684.17 916.558 1654.43 890.712 1641.15 879.187 cv
1641.15 879.187 1654.4 869.257 1662.59 883.732 cv
1670.79 898.207 1686.36 918.376 1686.36 918.376 cv
cp
.666667 .254902 .243137 rgb
f
1733.46 920.268 mo
1733.46 920.268 1730.22 931.564 1714.41 951.267 cv
1696.11 951.013 1733.46 920.268 1733.46 920.268 cv
cp
f
1544.84 716.208 mo
1544.84 716.208 1552.16 693.886 1576.12 697.367 cv
1600.08 700.849 1602.15 705.968 1604.7 711.908 cv
1607.25 717.847 1612.16 690.198 1612.16 690.198 cv
1583.9 681.803 li
1583.9 681.803 1549.7 685.692 1547.24 691.428 cv
1544.78 697.162 1544.78 697.162 1544.78 697.162 cv
1544.84 716.208 li
cp
.172549 .227451 .392157 rgb
f
1553.49 717.425 mo
1551.24 717.425 1549.26 718.25 1548.09 719.69 cv
1547.04 720.973 1546.69 722.668 1547.07 724.589 cv
1547.82 728.276 1550.59 730.633 1555.31 731.593 cv
1558.9 732.325 1562.33 731.926 1562.36 731.923 cv
1562.41 731.92 li
1565.92 731.92 1568.4 729.875 1570.24 725.486 cv
1570.65 724.505 1571.88 721.146 1570.53 719.118 cv
1569.79 717.994 1568.33 717.425 1566.21 717.425 cv
1553.49 717.425 li
cp
1560.11 732.861 mo
1555.98 732.861 1547.7 731.942 1546.25 724.754 cv
1545.81 722.579 1546.22 720.645 1547.44 719.16 cv
1548.78 717.526 1550.98 716.589 1553.49 716.589 cv
1566.21 716.589 li
1568.63 716.589 1570.32 717.283 1571.23 718.655 cv
1572.77 720.964 1571.59 724.427 1571.01 725.809 cv
1569.03 730.539 1566.31 732.746 1562.43 732.755 cv
1562.27 732.773 1561.39 732.861 1560.11 732.861 cv
cp
f
1583.35 717.425 mo
1581.23 717.425 1579.77 717.994 1579.02 719.118 cv
1577.67 721.146 1578.91 724.505 1579.32 725.486 cv
1581.16 729.875 1583.64 731.92 1587.14 731.92 cv
1587.19 731.923 li
1587.23 731.927 1590.65 732.324 1594.25 731.593 cv
1598.97 730.633 1601.74 728.276 1602.48 724.59 cv
1602.87 722.668 1602.52 720.973 1601.47 719.69 cv
1600.29 718.25 1598.32 717.425 1596.06 717.425 cv
1583.35 717.425 li
cp
1589.44 732.861 mo
1588.17 732.861 1587.29 732.773 1587.12 732.755 cv
1583.25 732.746 1580.53 730.539 1578.55 725.809 cv
1577.97 724.427 1576.79 720.964 1578.33 718.655 cv
1579.24 717.283 1580.93 716.589 1583.35 716.589 cv
1596.06 716.589 li
1598.57 716.589 1600.78 717.526 1602.12 719.16 cv
1603.33 720.645 1603.74 722.579 1603.3 724.755 cv
1601.86 731.941 1593.58 732.861 1589.44 732.861 cv
cp
f
1570.22 722.468 mo
1570.03 722.468 1569.85 722.359 1569.77 722.176 cv
1569.65 721.924 1569.76 721.627 1570.02 721.512 cv
1570.23 721.416 1575.21 719.185 1579.63 721.525 cv
1579.88 721.654 1579.97 721.957 1579.84 722.202 cv
1579.71 722.446 1579.41 722.538 1579.16 722.41 cv
1575.17 720.297 1570.48 722.401 1570.43 722.423 cv
1570.36 722.453 1570.29 722.468 1570.22 722.468 cv
cp
f
1489.47 1011.7 mo
1477.83 1013.85 li
1477.83 1013.85 1445.99 964.756 1445.08 949.787 cv
1444.19 935.492 1415.5 872.935 1449.09 833.876 cv
1450.61 832.104 1452.25 830.384 1454.04 828.721 cv
1454.1 828.654 1454.17 828.596 1454.23 828.538 cv
1454.23 828.538 1454.29 828.629 1454.4 828.813 cv
1455.08 829.951 1457.75 834.774 1460.88 845.435 cv
1465.77 862.099 1471.83 893.033 1473.26 946.461 cv
1473.26 946.461 1481.07 992.204 1489.47 1011.7 cv
cp
.956863 .65098 .443137 rgb
f
1489.47 1011.7 mo
1489.47 1011.7 1501.94 1025.76 1502.32 1031.47 cv
1502.71 1037.17 1497.77 1044.35 1492.23 1045.58 cv
1486.69 1046.8 1490.15 1038.01 1489.32 1034.47 cv
1488.48 1030.94 1484.86 1025.58 1485.08 1027.18 cv
1485.3 1028.78 1487.52 1035.06 1486.83 1036.07 cv
1486.15 1037.07 1484.36 1037.23 1483.68 1033.88 cv
1483 1030.52 1477.42 1026.6 1478.52 1023 cv
1479.61 1019.4 1478.71 1016.62 1477.2 1011.79 cv
1475.69 1006.96 1473.16 1001.17 1473.16 1001.17 cv
1482.14 999.252 li
1489.47 1011.7 li
cp
f
1405.3 757.601 mo
1405.3 757.601 1405.02 763.537 1408.58 764.699 cv
1412.14 765.86 1404.92 778.675 1405.48 787.328 cv
1406.05 795.982 1409.88 799.455 1409.88 799.455 cv
1409.88 799.455 1408.04 794.695 1409.07 791.752 cv
1409.07 791.752 1408.9 797.875 1413.38 800.964 cv
1417.85 804.051 1416.64 806.722 1416.64 806.722 cv
1416.64 806.722 1426.75 803.696 1427.03 796.117 cv
1427.03 796.117 1427.46 799.542 1427.12 800.962 cv
1427.12 800.962 1435.84 794.41 1436.26 786.862 cv
1436.67 779.314 1429.39 772.944 1426.07 772.829 cv
1422.75 772.714 1415.35 766.199 1415.55 763.737 cv
1415.75 761.275 1405.3 757.601 1405.3 757.601 cv
cp
.172549 .227451 .392157 rgb
f
1433.22 715.18 mo
1427.34 706.252 1404 711.247 1381.08 726.339 cv
1358.17 741.431 1344.36 760.902 1350.24 769.829 cv
1356.12 778.757 1379.46 773.761 1402.38 758.669 cv
1425.29 743.577 1439.1 724.106 1433.22 715.18 cv
cp
.886275 .686275 .392157 rgb
f
1483.62 1373.92 mo
1471.26 1378.52 li
1471.26 1378.52 1417.59 1304.08 1410.98 1238.58 cv
1409.8 1226.89 1410.2 1215.56 1412.75 1205.1 cv
1412.75 1205.1 1412.22 1202.1 1411.31 1196.8 cv
1410.88 1194.33 1410.36 1191.36 1409.76 1187.95 cv
1408.02 1177.95 1405.62 1164.27 1402.87 1148.69 cv
1396.56 1112.84 1388.38 1067.02 1382.02 1033.34 cv
1385.35 1032.27 li
1421.38 1020.64 li
1428.82 996.997 li
1455.65 989.936 li
1455.65 989.936 1461.64 1001.66 1467 1057.04 cv
1467.98 1064.3 1468.88 1072.31 1469.56 1081 cv
1471.65 1107.51 1471.8 1140.4 1467.01 1178 cv
1465.78 1187.62 1464.22 1197.56 1462.29 1207.77 cv
1460.88 1215.25 1460.67 1225.45 1461.27 1237.17 cv
1463.97 1290.71 1483.62 1373.92 1483.62 1373.92 cv
cp
.168627 .278431 .545098 rgb
f
1469.56 1081 mo
1411.31 1196.8 li
1410.88 1194.33 1410.36 1191.36 1409.76 1187.95 cv
1408.02 1177.95 1405.62 1164.27 1402.87 1148.69 cv
1396.56 1112.84 1388.38 1067.02 1382.02 1033.34 cv
1385.35 1032.27 li
1421.38 1020.64 li
1428.82 996.997 li
1460.86 987.467 li
1460.86 987.467 1461.64 1001.66 1467 1057.04 cv
1467.98 1064.3 1468.88 1072.31 1469.56 1081 cv
cp
.137255 .219608 .384314 rgb
f
1420.32 716.194 mo
1379.13 778.692 li
1379.13 778.692 1374.42 769.466 1369.19 772.775 cv
1361.03 777.932 1343.5 760.282 1347.15 735.363 cv
1347.39 733.733 1347.68 732.187 1348 730.716 cv
1356.22 718.875 1365.34 705.69 1371.89 696.421 cv
1390.81 684.996 1420.32 716.194 1420.32 716.194 cv
cp
.172549 .227451 .392157 rgb
f
1438.42 842.447 mo
1432.66 847.729 1425.17 852.456 1415.47 856.13 cv
1379.09 869.914 1360.39 840.131 1352.02 819.078 cv
1356.74 815.45 1361.47 814.149 1364.21 813.438 cv
1366.88 812.749 1369.71 812.147 1372.05 811.71 cv
1375.83 807.906 1380.32 793.832 1378.92 773.118 cv
1380.75 773.351 li
1411.45 777.427 li
1411.45 777.427 1411.37 787.02 1411.92 796.002 cv
1412.35 803.032 1413.17 809.693 1414.71 811.141 cv
1417.09 811.328 1418.52 811.466 1418.52 811.466 cv
1418.52 811.466 1418.52 811.476 1418.54 811.492 cv
1419.02 812.09 1429.53 825.043 1438.42 842.447 cv
cp
1 .698039 .490196 rgb
f
1411.45 777.433 mo
1411.45 777.433 1411.37 787.018 1411.92 796.008 cv
1394.92 796.609 1384.97 781.703 1380.75 773.357 cv
1411.45 777.433 li
cp
.929412 .596078 .372549 rgb
f
1417.66 785.583 mo
1417.66 785.583 1377.56 788.8 1375.94 763.797 cv
1374.32 738.794 1368.05 722.369 1393.59 719.258 cv
1419.12 716.147 1424.72 725.365 1427.29 733.579 cv
1429.86 741.794 1428.05 784.103 1417.66 785.583 cv
cp
1 .698039 .490196 rgb
f
1425.21 719.753 mo
1418.53 712.626 1413.94 714.575 1411.46 717.004 cv
1388.75 706.338 1375.75 725.072 1375.75 725.072 cv
1374.2 743.185 1361.92 754.285 1361.92 754.285 cv
1361.92 754.285 1369.52 758.339 1386.12 752.928 cv
1391.18 751.274 1395.55 747.32 1399.18 742.63 cv
1393.08 754.507 1384.31 763.342 1384.31 763.342 cv
1403.87 752.746 1410.18 724.209 1410.79 721.194 cv
1413.38 723.239 1418.52 727.712 1420.29 732.304 cv
1422.7 738.545 1424.43 751.595 1428.22 750.906 cv
1428.22 750.906 1435.23 730.439 1425.21 719.753 cv
cp
.172549 .227451 .392157 rgb
f
1522.29 1394.66 mo
1460.06 1394.66 li
1460.06 1394.66 1457.73 1384.73 1461.81 1377.98 cv
1465.43 1372 1464.05 1368.6 1461.37 1363.65 cv
1464.19 1364.81 1467.83 1365.86 1471.85 1365.63 cv
1474.95 1365.45 1478.23 1364.04 1481.11 1362.37 cv
1483.78 1365.43 1495.25 1378.42 1498.84 1381 cv
1502.91 1383.92 1521.04 1382.88 1522.29 1394.66 cv
cp
.137255 .219608 .384314 rgb
f
1346.3 747.667 mo
1346.3 747.667 1327.65 710.547 1353.71 695.872 cv
1379.77 681.199 1398.84 686.961 1413.18 704.906 cv
1346.3 747.667 li
cp
.929412 .741176 .466667 rgb
f
1464.98 848.977 mo
1459.99 824.01 1444.53 816.859 1444.53 816.859 cv
1444.53 816.859 1441.96 812.965 1427.59 812.352 cv
1425.35 812.259 1422.91 811.796 1420.19 811.578 cv
1419.65 811.541 1419.09 811.499 1418.52 811.463 cv
1418.52 811.463 1418.53 811.47 1418.54 811.491 cv
1419.09 812.33 1433.58 834.609 1432.77 840.598 cv
1431.95 846.694 1379.2 844.608 1375.38 841.529 cv
1372.32 839.048 1366.99 822.504 1365.01 816.032 cv
1364.5 814.421 1364.21 813.433 1364.21 813.433 cv
1364.21 813.433 1345.79 816.646 1337.13 823.821 cv
1337.13 823.821 1343.76 831.095 1348.18 840.036 cv
1348.6 840.89 1349 841.74 1349.38 842.607 cv
1350.17 844.441 1350.82 846.318 1351.31 848.198 cv
1351.94 850.684 1351.37 853.247 1350.03 856.003 cv
1348.82 858.523 1346.95 861.229 1344.79 864.166 cv
1343.37 866.072 1341.84 868.094 1340.29 870.255 cv
1341.38 873.895 1342.81 878.256 1344.39 883.189 cv
1347.65 893.34 1351.53 905.877 1354.3 919.376 cv
1355.34 924.464 1355.2 929.698 1353.95 934.686 cv
1353.46 936.675 1352.78 938.624 1351.94 940.513 cv
1350.63 943.461 1350.3 947.522 1348.83 951.334 cv
1342.8 966.945 1335.84 987.314 1342.81 997.951 cv
1347.46 1011.55 1455.17 978.526 1447.92 964.268 cv
1447.92 964.268 1452.22 889.459 1455.18 866.287 cv
1455.28 865.437 1455.36 864.617 1455.4 863.792 cv
1455.47 862.489 1455.46 861.208 1455.39 859.948 cv
1464.73 855.696 1464.98 848.977 1464.98 848.977 cv
cp
.976471 .592157 .27451 rgb
f
1451.28 700.831 mo
1445.92 692.23 1427.16 693.617 1404.5 702.895 cv
1395.65 706.517 1386.22 711.345 1376.75 717.248 cv
1364.98 724.589 1354.73 732.626 1346.68 740.485 cv
1331.69 755.148 1324.37 769.19 1329.23 776.976 cv
1334.63 785.618 1353.56 784.168 1376.38 774.766 cv
1374.53 772.746 1371.93 771.042 1369.19 772.775 cv
1366.38 774.547 1362.46 773.621 1358.68 770.623 cv
1355.89 770.166 1353.82 769.043 1352.69 767.23 cv
1351.84 765.876 1351.58 764.231 1351.83 762.363 cv
1353 753.688 1365.29 740.211 1382.95 729.195 cv
1396.52 720.733 1410.01 715.753 1419.29 715.159 cv
1424.7 714.806 1428.68 715.94 1430.42 718.744 cv
1431.93 721.162 1431.6 724.531 1429.75 728.427 cv
1430.76 732.509 1430.75 736.84 1430.36 740.596 cv
1447.67 724.785 1456.51 709.197 1451.28 700.831 cv
cp
1 .811765 .513726 rgb
f
1390.66 942.754 mo
1375.15 947.725 1360.04 949.859 1348.06 950.725 cv
1349.54 946.914 1350.63 943.461 1351.94 940.513 cv
1352.78 938.624 1353.46 936.674 1353.95 934.686 cv
1355.2 929.698 1355.34 924.464 1354.3 919.376 cv
1351.53 905.877 1344.18 882.847 1340.92 872.696 cv
1349.62 853.286 1358.61 863.873 1358.61 863.873 cv
1358.61 863.873 1384.92 875.67 1396.12 897.415 cv
1407.31 919.161 1404.05 938.465 1390.66 942.754 cv
cp
.929412 .490196 .168627 rgb
f
1357.09 814.922 mo
1357.09 814.922 1382.13 830.928 1388.54 864.677 cv
1396.12 862.271 li
1396.12 862.271 1393.18 838.181 1364.21 813.438 cv
1357.09 814.922 li
cp
.168627 .278431 .545098 rgb
f
1445.56 865.533 mo
1437.63 866.054 li
1439.21 836.792 1424.53 816.816 1420.19 811.581 cv
1422.91 811.799 1425.38 812.063 1427.59 812.354 cv
1448.36 842.411 1445.56 865.533 1445.56 865.533 cv
cp
f
1455.4 992.36 mo
1461.03 989.936 li
1455.5 906.087 li
1455.5 906.087 1450.13 867.961 1450.05 861.298 cv
1449.97 854.635 1444.59 851.386 1444.59 851.386 cv
1444.59 851.386 1405.1 853.469 1393.97 854.094 cv
1382.84 854.72 1383.96 861.054 1383.96 861.054 cv
1383.96 861.054 1388.81 881.313 1389.3 883.397 cv
1396.79 915.236 1353.95 934.688 1353.95 934.688 cv
1353.95 934.688 1347 952.676 1341.6 969.903 cv
1332.36 999.441 1340.61 1041.82 1340.61 1041.82 cv
1342.02 1064.33 1344.58 1159.98 1347.25 1188.28 cv
1348.22 1198.54 1349.07 1205.84 1349.42 1208.76 cv
1349.42 1208.77 1349.42 1208.78 1349.42 1208.78 cv
1349.53 1209.67 1349.22 1210.51 1348.77 1211.29 cv
1344.83 1217.98 1341.56 1224.94 1338.89 1232.06 cv
1312.63 1302.05 1342.93 1388.24 1342.93 1388.24 cv
1350.8 1385.07 li
1350.8 1385.07 1368.05 1289.15 1382.06 1246.77 cv
1384.44 1239.59 1386.72 1233.94 1388.81 1230.56 cv
1394.9 1220.73 1400.56 1204.66 1405.69 1185.55 cv
1415.39 1149.42 1423.2 1102.41 1428.4 1066.13 cv
1429.11 1066.16 1436.58 1015.28 1455.31 992.846 cv
1455.47 992.644 1455.5 992.484 1455.4 992.36 cv
cp
f
1388.23 861.733 mo
1387.67 859.982 1388.64 858.113 1390.39 857.557 cv
1392.14 857 1394.01 857.969 1394.57 859.72 cv
1395.13 861.472 1394.16 863.341 1392.41 863.896 cv
1390.65 864.452 1388.79 863.484 1388.23 861.733 cv
cp
.929412 .490196 .168627 rgb
f
1388.8 861.553 mo
1388.24 859.802 1389.21 857.932 1390.96 857.376 cv
1392.71 856.819 1394.58 857.788 1395.14 859.539 cv
1395.69 861.29 1394.73 863.16 1392.97 863.716 cv
1391.22 864.271 1389.35 863.304 1388.8 861.553 cv
cp
.976471 .592157 .27451 rgb
f
1389.91 860.542 mo
1389.91 860.275 1390.12 860.06 1390.39 860.06 cv
1390.66 860.06 1390.87 860.277 1390.87 860.544 cv
1390.87 860.811 1390.66 861.027 1390.39 861.026 cv
1390.12 861.026 1389.91 860.809 1389.91 860.542 cv
cp
.168627 .278431 .545098 rgb
f
1393.06 860.548 mo
1393.06 860.28 1393.28 860.065 1393.55 860.065 cv
1393.81 860.065 1394.03 860.282 1394.03 860.549 cv
1394.03 860.816 1393.81 861.031 1393.55 861.031 cv
1393.28 861.031 1393.06 860.814 1393.06 860.548 cv
cp
f
1437.19 857.507 mo
1436.63 855.757 1437.6 853.887 1439.35 853.331 cv
1441.1 852.774 1442.97 853.743 1443.53 855.493 cv
1444.09 857.245 1443.12 859.114 1441.37 859.671 cv
1439.62 860.227 1437.75 859.259 1437.19 857.507 cv
cp
.929412 .490196 .168627 rgb
f
1437.76 857.326 mo
1437.2 855.576 1438.17 853.705 1439.92 853.15 cv
1441.67 852.594 1443.54 853.563 1444.1 855.313 cv
1444.66 857.063 1443.69 858.934 1441.94 859.489 cv
1440.19 860.046 1438.31 859.078 1437.76 857.326 cv
cp
.976471 .592157 .27451 rgb
f
1438.87 856.316 mo
1438.87 856.05 1439.08 855.833 1439.35 855.834 cv
1439.62 855.834 1439.83 856.052 1439.83 856.318 cv
1439.83 856.585 1439.62 856.801 1439.35 856.801 cv
1439.08 856.801 1438.87 856.583 1438.87 856.316 cv
cp
.168627 .278431 .545098 rgb
f
1442.02 856.321 mo
1442.02 856.055 1442.24 855.839 1442.51 855.839 cv
1442.78 855.839 1442.99 856.057 1442.99 856.322 cv
1442.99 856.59 1442.77 856.806 1442.51 856.806 cv
1442.24 856.806 1442.02 856.589 1442.02 856.321 cv
cp
f
1351.83 762.363 mo
1351.83 762.363 1351.56 768.301 1355.12 769.462 cv
1358.68 770.623 1351.45 783.438 1352.02 792.092 cv
1352.58 800.745 1356.41 804.22 1356.41 804.22 cv
1356.41 804.22 1354.58 799.458 1355.6 796.516 cv
1355.6 796.516 1355.44 802.638 1359.91 805.727 cv
1364.38 808.814 1363.18 811.485 1363.18 811.485 cv
1363.18 811.485 1373.28 808.459 1373.57 800.88 cv
1373.57 800.88 1374 804.306 1373.65 805.725 cv
1373.65 805.725 1382.38 799.174 1382.79 791.625 cv
1383.21 784.077 1375.92 777.707 1372.61 777.592 cv
1369.29 777.477 1361.89 770.963 1362.08 768.5 cv
1362.28 766.038 1351.83 762.363 1351.83 762.363 cv
cp
.172549 .227451 .392157 rgb
f
1351.88 961.249 mo
1351.88 961.249 1363.88 968.822 1365.64 968.756 cv
1369.76 968.603 1377.89 959.607 1384.65 963.766 cv
1391.42 967.925 1398.05 974.855 1395.71 977.628 cv
1393.36 980.4 1385.41 977.129 1381.6 977.684 cv
1377.79 978.238 1368.39 982.911 1361.76 980.712 cv
1355.38 978.598 1341.6 969.903 1341.6 969.903 cv
1351.88 961.249 li
cp
1 .698039 .490196 rgb
f
1337.13 823.821 mo
1337.13 823.821 1292.45 876.588 1277.66 906.315 cv
1277.66 906.315 1295.44 945.021 1353.07 976.465 cv
1353.07 976.465 1355.63 975.905 1359.54 973.111 cv
1365.64 968.756 1358.88 965.567 1357.55 964.703 cv
1342.93 955.23 1317.38 914.438 1316.64 910.897 cv
1315.9 907.357 1348.66 875.61 1358.61 863.873 cv
1368.57 852.135 1352.6 817.774 1337.13 823.821 cv
cp
f
1405.29 771.61 mo
1405.29 771.61 1411.27 775.231 1415.52 774.811 cv
1419.73 774.393 1422.03 769.313 1422.03 769.313 cv
1422.03 769.313 1413.86 768.108 1405.29 771.61 cv
cp
1 .94902 .913725 rgb
f
1337.13 823.821 mo
1317.06 843.428 li
1317.06 843.428 1321.64 872.381 1352.02 876.161 cv
1352.02 876.161 1376.95 856.201 1362.05 835.409 cv
1347.16 814.616 1337.13 823.821 1337.13 823.821 cv
cp
.976471 .592157 .27451 rgb
f
1365.64 968.756 mo
1365.64 968.756 1366.32 965.84 1368.9 964.692 cv
1371.47 963.544 1373.88 961.039 1374.08 961.771 cv
1374.29 962.5 1374.45 963.72 1373.12 965.197 cv
1371.79 966.676 1369.51 969.152 1365.64 968.756 cv
cp
1 .698039 .490196 rgb
f
1388.66 1394.66 mo
1326.42 1394.66 li
1326.42 1394.66 1324.93 1385.18 1328.18 1377.98 cv
1331.3 1371.07 1336.17 1367.94 1335.01 1359.58 cv
1338.96 1363.65 1345.41 1368.21 1354.41 1367 cv
1355.51 1368.79 1361.52 1378.35 1365.2 1381 cv
1369.27 1383.92 1387.41 1382.88 1388.66 1394.66 cv
cp
.137255 .219608 .384314 rgb
f
2336.7 1393.69 mo
2335.51 1041.46 li
2335.51 1041.46 2332.82 1016.08 2310.69 1015.95 cv
2287.07 1015.81 2285.57 1041.16 2285.57 1041.16 cv
2285.57 1041.16 2285.89 1043.36 2288.32 1043.37 cv
2290.86 1043.39 2291.29 1041.2 2291.29 1041.2 cv
2291.29 1041.2 2292.45 1021.65 2310.65 1021.76 cv
2327.71 1021.86 2329.79 1041.43 2329.79 1041.43 cv
2327.69 1393.64 li
2336.7 1393.69 li
cp
f
2324.66 1393.62 mo
2339.34 1393.71 li
2338.13 1378.34 li
2338.13 1378.34 2338.27 1376.21 2335.3 1376.07 cv
2332.54 1375.94 2327.1 1375.52 2326.57 1377.18 cv
2326.11 1378.64 2324.66 1393.62 2324.66 1393.62 cv
cp
f
2310.62 997.279 mo
2309.58 1002.31 li
2309.58 1002.31 2284.68 1002.07 2278.7 1028.72 cv
2278.7 1028.72 2277.06 1039.81 2285.08 1037.49 cv
2293.1 1035.17 2291.88 1029.5 2303.24 1026.46 cv
2314.59 1023.42 2321.99 1021.09 2323.76 1012.85 cv
2325.67 1003.67 li
2310.62 997.279 li
cp
1 .698039 .490196 rgb
f
2399.97 779.423 mo
2399.97 779.423 2393.23 805.301 2387.41 828.961 cv
2385.06 838.492 2382.87 847.659 2381.32 854.633 cv
2379.74 861.797 2378.83 866.647 2379.17 867.188 cv
2384.06 875.236 2374.74 924.075 2367.5 941.788 cv
2366.86 943.358 2365.98 945.197 2364.93 947.239 cv
2354.83 966.748 2328.03 1005 2328.03 1005 cv
2328.03 1005 2320.53 1005.74 2315.63 1003.86 cv
2311.55 1002.28 2308.79 997.267 2308.79 997.267 cv
2311.18 993.455 2321.07 948.326 2333.59 923.063 cv
2338.95 912.257 2347.34 811.746 2357.68 798.269 cv
2366.29 787.026 2399.97 779.423 2399.97 779.423 cv
cp
.976471 .592157 .27451 rgb
f
2379.17 867.188 mo
2384.06 875.236 2374.74 924.075 2367.5 941.788 cv
2366.86 943.358 2365.98 945.197 2364.93 947.239 cv
2355.64 904.984 2371.8 845.3 2371.8 845.3 cv
2375.74 846.887 2378.87 850.157 2381.32 854.633 cv
2379.74 861.797 2378.83 866.647 2379.17 867.188 cv
cp
.929412 .490196 .168627 rgb
f
2445.38 1355.54 mo
2445.38 1355.54 2447.69 1393.75 2440.48 1394.24 cv
2439.52 1394.3 2403.9 1394.09 2403.9 1394.09 cv
2357.95 1393.82 li
2357.95 1393.82 2358.79 1382.6 2372.1 1380.37 cv
2385.4 1378.13 2407.71 1368.92 2415.86 1351.4 cv
2424.44 1332.97 2445.38 1355.54 2445.38 1355.54 cv
cp
.0588235 .160784 .286275 rgb
f
2514.49 1355.95 mo
2514.49 1355.95 2516.8 1394.16 2509.58 1394.65 cv
2508.63 1394.71 2473 1394.5 2473 1394.5 cv
2427.06 1394.23 li
2427.06 1394.23 2427.9 1383.01 2441.2 1380.78 cv
2454.51 1378.54 2476.81 1369.33 2484.97 1351.81 cv
2493.55 1333.38 2514.49 1355.95 2514.49 1355.95 cv
cp
.0862745 .207843 .376471 rgb
f
2448.11 1263.5 mo
2449.14 1279.66 2451.32 1300.44 2450.39 1319.15 cv
2449.08 1345.32 2448.13 1367.39 2448.13 1367.39 cv
2430.83 1373.15 2399.21 1365.84 2399.21 1365.84 cv
2399.21 1365.84 2388.37 1299.63 2379.44 1246.78 cv
2375.43 1223.09 2372.11 1202.6 2370.88 1192.93 cv
2366.9 1161.67 2376.48 995.621 2376.48 995.621 cv
2376.48 995.621 2423.35 965.971 2442.55 981.516 cv
2461.75 997.057 2473.54 1012.21 2441.45 1181.03 cv
2439.01 1193.84 2445.79 1227.31 2448.11 1263.5 cv
cp
.168627 .278431 .545098 rgb
f
2448.11 1263.5 mo
2449.14 1279.66 2451.07 1305.52 2450.14 1324.23 cv
2434.01 1306.95 2402.23 1270.52 2379.44 1246.78 cv
2375.43 1223.09 2372.11 1202.6 2370.88 1192.93 cv
2366.9 1161.67 2376.48 995.621 2376.48 995.621 cv
2376.48 995.621 2423.35 965.971 2442.55 981.516 cv
2461.75 997.057 2473.54 1012.21 2441.45 1181.03 cv
2439.01 1193.84 2445.79 1227.31 2448.11 1263.5 cv
cp
.137255 .219608 .384314 rgb
f
2418.66 999.25 mo
2418.66 999.25 2421.86 1165.54 2428.23 1196.41 cv
2434.6 1227.28 2467.96 1368.6 2467.96 1368.6 cv
2467.96 1368.6 2500 1371.71 2516.8 1364.63 cv
2516.8 1364.63 2516.12 1299.27 2510.66 1260.84 cv
2505.57 1224.93 2496.24 1192.08 2497.68 1179.12 cv
2516.7 1008.33 2503.79 994.133 2483.45 980.109 cv
2463.11 966.086 2418.66 999.25 2418.66 999.25 cv
cp
.168627 .278431 .545098 rgb
f
2481.94 1014.18 mo
2481.94 1014.18 2470.7 1036.41 2491.95 1053.56 cv
2491.95 1053.56 2501.17 1059.95 2502.64 1051.73 cv
2504.11 1043.51 2502.45 1046.37 2504.76 1034.84 cv
2507.06 1023.32 2504.27 1011.37 2497.66 1006.13 cv
2481.94 1014.18 li
cp
1 .698039 .490196 rgb
f
2389.93 741.687 mo
2389.93 741.687 2402.64 761.249 2399.97 779.419 cv
2418.67 825.24 li
2453.21 773.118 li
2453.21 773.118 2435.25 753.33 2428.66 726.461 cv
2389.93 741.687 li
cp
f
2384.21 758.28 mo
2384.21 758.28 2430.88 760.579 2431.9 732.558 cv
2432.91 704.537 2445.64 685.968 2410.74 683.298 cv
2382.04 681.102 2372.42 693.019 2369.8 702.29 cv
2367.19 711.561 2366.92 756.676 2384.21 758.28 cv
cp
f
2497.02 1007.73 mo
2486.99 1008.6 2473.17 1009.68 2456.41 1010.63 cv
2453.06 1010.82 2449.6 1011.01 2446.03 1011.19 cv
2395.42 1013.72 2375.36 1005.41 2375.36 1005.41 cv
2375.36 1005.41 2374.03 1004.31 2374.49 998.376 cv
2376.87 967.796 2383.42 958.799 2382.67 952.979 cv
2380.98 939.903 2349.92 833.085 2349.92 833.085 cv
2349.92 833.085 2349.51 799.399 2387.06 783.813 cv
2390.93 782.201 2395.2 780.79 2399.91 779.626 cv
2401.53 783.995 2405.98 791.304 2417.49 790.03 cv
2434.51 788.148 2446.68 778.197 2451.9 773.085 cv
2452.84 773.09 2453.21 773.122 2453.21 773.122 cv
2454.46 776.711 2455.43 780.453 2456.28 784.255 cv
2459.28 797.513 2460.99 811.451 2469.05 821.913 cv
2477.01 832.242 2483.81 842.421 2489.61 852.371 cv
2494.44 860.652 2498.57 868.779 2502.1 876.691 cv
2534.82 950.184 2508.83 1006.69 2497.02 1007.73 cv
cp
.976471 .592157 .27451 rgb
f
2497.02 1007.73 mo
2486.99 1008.6 2473.17 1009.68 2456.41 1010.63 cv
2452.02 928.26 2486.04 849.375 2486.04 849.375 cv
2487.29 850.268 2488.49 851.27 2489.61 852.371 cv
2495.42 858.083 2499.44 866.532 2502.1 876.691 cv
2511.87 914.088 2503.14 974.697 2497.02 1007.73 cv
cp
.929412 .490196 .168627 rgb
f
2369.32 731.459 mo
2369.32 731.459 2360.02 767.462 2375.41 772.631 cv
2390.8 777.8 2431.77 773.975 2432.02 729.771 cv
2432.02 729.771 2410.46 742.457 2400.19 742.072 cv
2389.93 741.687 2383.34 735.726 2373.83 740.296 cv
2373.83 740.296 2370.36 740.044 2369.32 731.459 cv
cp
.784314 .85098 .909804 rgb
f
2453.21 773.118 mo
2453.21 773.118 2485.84 774.046 2502.95 796.583 cv
2516.05 813.852 2529.47 906.172 2529.39 920.061 cv
2529.31 933.949 2513.98 1010.51 2505.6 1018.79 cv
2505.6 1018.79 2500.2 1020.14 2493.02 1018.71 cv
2485.39 1017.19 2480.92 1012.75 2480.92 1012.75 cv
2480.92 1012.75 2485.57 927.439 2485.62 919.435 cv
2485.69 907.846 2449.88 836.696 2449.88 836.696 cv
2449.88 836.696 2431.29 802.825 2453.21 773.118 cv
cp
.976471 .592157 .27451 rgb
f
2429.94 692.128 mo
2429.18 689.262 2425.66 687.738 2425.66 687.738 cv
2399.43 676.131 2380.15 688.546 2380.15 688.546 cv
2396.39 667.01 2435.26 671.782 2443.34 691.343 cv
2456.53 723.281 2432.02 729.771 2432.02 729.771 cv
2432.02 729.771 2407.65 719.358 2421.87 706.571 cv
2426.59 702.335 2428.88 698.557 2429.65 695.262 cv
2429.65 695.262 li
2429.65 695.262 li
2429.9 694.163 2429.99 693.119 2429.94 692.128 cv
cp
.784314 .85098 .909804 rgb
f
413.468 1394.66 mo
413.468 1394.66 413.468 1383.17 415.105 1379.34 cv
416.744 1375.52 422.751 1359.96 422.751 1359.96 cv
446.235 1359.96 li
446.235 1359.96 450.604 1374.15 450.877 1378.8 cv
451.15 1383.44 450.877 1394.66 450.877 1394.66 cv
413.468 1394.66 li
cp
.137255 .219608 .384314 rgb
f
562.57 1394.66 mo
562.57 1394.66 562.57 1383.17 560.932 1379.34 cv
559.294 1375.52 553.286 1359.96 553.286 1359.96 cv
529.803 1359.96 li
529.803 1359.96 525.434 1374.15 525.161 1378.8 cv
524.888 1383.44 525.161 1394.66 525.161 1394.66 cv
562.57 1394.66 li
cp
f
468.489 749.385 mo
468.489 749.385 467.662 774.984 464.386 786.454 cv
438.453 804.544 li
536.073 819.152 li
512.791 786.986 li
512.791 786.986 505.763 752.662 509.448 739.965 cv
513.136 727.268 468.489 749.385 468.489 749.385 cv
cp
1 .698039 .490196 rgb
f
468.349 752.921 mo
468.349 752.913 476.066 771.503 490.607 771.094 cv
505.148 770.685 508.458 754.242 508.458 754.242 cv
468.349 752.921 li
cp
.929412 .596078 .372549 rgb
f
459.669 737.874 mo
459.669 737.874 454.973 714.434 451.696 707.334 cv
448.419 700.233 445.688 668.559 482.006 666.92 cv
482.006 666.92 495.933 668.559 503.578 663.916 cv
503.578 663.916 503.578 668.559 501.666 670.197 cv
501.666 670.197 514.228 667.193 524.058 678.115 cv
533.889 689.039 517.506 727.268 518.324 736.278 cv
459.669 737.874 li
cp
.172549 .227451 .392157 rgb
f
518.868 705.212 mo
518.868 730.791 li
518.868 735.063 517.886 739.175 516.227 742.951 cv
516.218 742.951 li
513.347 749.475 508.463 755.016 503.123 758.755 cv
498.383 762.083 493.289 763.99 488.94 763.914 cv
485.154 763.838 480.233 761.987 475.464 758.831 cv
469.046 754.577 462.932 747.968 460.328 740.186 cv
460.29 740.07 li
460.194 739.746 li
459.441 737.361 459.013 734.883 459.013 732.326 cv
459.013 705.212 li
459.013 698.869 463.438 693.681 468.846 693.681 cv
509.035 693.681 li
514.443 693.681 518.868 698.869 518.868 705.212 cv
cp
1 .698039 .490196 rgb
f
459.014 719.69 mo
459.014 719.69 459.068 703.4 471.971 700.896 cv
484.873 698.391 513.75 708.836 517.846 696.957 cv
521.941 685.079 462.03 685.284 459.014 692.861 cv
455.996 700.438 459.014 719.69 459.014 719.69 cv
cp
.172549 .227451 .392157 rgb
f
416.41 996.519 mo
416.41 996.519 420.52 1121.98 414.376 1193.57 cv
408.232 1265.16 414.421 1364.78 414.421 1364.78 cv
414.421 1364.78 434.068 1375.61 455.368 1364.78 cv
455.368 1364.78 478.727 1226.48 478.578 1193.57 cv
478.42 1158.52 504.002 1001.99 504.002 1001.99 cv
416.41 996.519 li
cp
.168627 .278431 .545098 rgb
f
561.722 1364.78 mo
561.722 1364.78 542.078 1375.62 520.778 1364.78 cv
520.778 1364.78 497.423 1226.48 497.57 1193.57 cv
497.637 1178.76 493.114 1142.28 487.863 1105.09 cv
480.679 1054.21 472.144 1001.99 472.144 1001.99 cv
563.13 996.306 li
563.13 996.306 555.627 1121.99 561.771 1193.57 cv
567.915 1265.16 561.722 1364.78 561.722 1364.78 cv
cp
f
442.309 1021.42 mo
427.547 1019.46 416.963 1017.39 416.963 1017.39 cv
416.963 1017.39 409.099 1018.08 413.743 979.307 cv
417.274 949.801 416.168 923.16 415.382 895.75 cv
415.291 892.703 415.357 889.098 415.546 885.084 cv
417.807 888.705 443.005 929.402 449.787 959.646 cv
454.728 981.707 447.28 1007.69 442.309 1021.42 cv
cp
.929412 .490196 .168627 rgb
f
545.977 793.056 mo
545.979 793.11 li
534.167 790.138 523.061 788.181 512.791 786.986 cv
503.731 799.021 497.227 801.813 488.944 805.09 cv
475.616 803.247 464.386 786.83 464.386 786.454 cv
449.865 787.941 440.074 790.605 436.091 791.843 cv
435.301 791.937 392.712 797.563 332.431 920.268 cv
332.431 920.268 335.674 931.564 351.484 951.267 cv
362.732 965.274 380.353 983.542 407.682 1005.01 cv
407.682 1005.01 410.262 999.5 412.613 990.578 cv
412.613 990.578 396.368 958.967 386.587 937.561 cv
381.836 927.141 378.608 919.146 379.533 918.376 cv
381.294 916.913 400.946 899.852 415.456 887.245 cv
415.34 890.396 415.308 893.261 415.382 895.75 cv
416.168 923.16 417.274 949.801 413.743 979.307 cv
409.099 1018.08 416.963 1017.39 416.963 1017.39 cv
416.963 1017.39 427.547 1019.46 442.309 1021.42 cv
455.661 1023.21 472.43 1024.9 487.863 1024.9 cv
523.252 1024.9 562.041 1017.39 562.041 1017.39 cv
573.207 1017.53 558.911 947.916 556.822 906.03 cv
556.339 896.303 555.889 887.426 555.468 879.312 cv
568.808 890.896 598.348 916.563 600.526 918.376 cv
601.452 919.146 598.225 927.141 593.474 937.561 cv
583.692 958.967 567.448 990.578 567.448 990.578 cv
569.798 999.5 572.38 1005.01 572.38 1005.01 cv
599.707 983.542 617.328 965.274 628.575 951.267 cv
644.386 931.564 647.63 920.268 647.63 920.268 cv
586.781 796.406 545.977 793.056 545.977 793.056 cv
cp
.976471 .592157 .27451 rgb
f
497.57 1193.57 mo
497.637 1178.76 493.114 1142.28 487.863 1105.09 cv
493.312 1082.88 506.582 1061.5 506.582 1061.5 cv
523.376 1108.6 497.57 1193.57 497.57 1193.57 cv
cp
.137255 .219608 .384314 rgb
f
409.371 992.139 mo
409.371 992.139 424.117 978.485 430.124 986.131 cv
436.132 993.777 437.224 1005.79 432.582 1004.97 cv
427.939 1004.15 418.383 999.785 417.018 1001.97 cv
415.651 1004.15 409.535 1008.33 407.678 1005.01 cv
405.822 1001.7 409.371 992.139 409.371 992.139 cv
cp
1 .698039 .490196 rgb
f
412.613 990.58 mo
410.262 999.5 407.682 1005.01 407.682 1005.01 cv
380.353 983.542 362.732 965.274 351.484 951.267 cv
359.963 950.636 372.342 947.604 386.587 937.561 cv
396.368 958.967 412.613 990.58 412.613 990.58 cv
cp
f
570.687 992.139 mo
570.687 992.139 555.94 978.485 549.934 986.131 cv
543.926 993.777 542.834 1005.79 547.476 1004.97 cv
552.118 1004.15 561.675 999.785 563.04 1001.97 cv
564.406 1004.15 570.523 1008.33 572.38 1005.01 cv
574.236 1001.7 570.687 992.139 570.687 992.139 cv
cp
f
567.444 990.58 mo
569.797 999.5 572.376 1005.01 572.376 1005.01 cv
599.704 983.542 617.325 965.274 628.573 951.267 cv
620.094 950.636 607.716 947.604 593.47 937.561 cv
583.688 958.967 567.444 990.58 567.444 990.58 cv
cp
f
503.123 747.481 mo
503.123 758.755 li
498.383 762.083 493.289 763.99 488.94 763.914 cv
485.154 763.838 480.233 761.987 475.464 758.831 cv
475.464 747.481 li
475.464 741.187 480.614 736.037 486.909 736.037 cv
491.678 736.037 li
497.973 736.037 503.123 741.187 503.123 747.481 cv
cp
.172549 .227451 .392157 rgb
f
600.526 918.376 mo
598.339 916.558 568.595 890.712 555.323 879.187 cv
555.323 879.187 568.57 869.257 576.762 883.732 cv
584.954 898.207 600.526 918.376 600.526 918.376 cv
cp
.929412 .490196 .168627 rgb
f
516.218 742.951 mo
510.81 755.264 498.191 764.076 488.94 763.914 cv
480.052 763.752 464.858 753.738 460.328 740.186 cv
460.29 740.07 li
460.194 739.746 li
460.194 739.746 469.742 747.892 476.057 743.857 cv
502.579 743.857 li
502.579 743.857 509.521 747.824 516.218 742.951 cv
cp
.172549 .227451 .392157 rgb
f
647.63 920.268 mo
647.63 920.268 644.386 931.564 628.575 951.267 cv
610.275 951.013 647.63 920.268 647.63 920.268 cv
cp
.929412 .490196 .168627 rgb
f
492.154 746.105 mo
486.432 746.105 li
485.121 746.105 483.451 743.958 483.451 742.647 cv
483.451 742.647 485.121 741.336 486.432 741.336 cv
492.154 741.336 li
493.466 741.336 495.382 742.425 495.691 743.204 cv
495.691 743.204 494.896 746.105 492.154 746.105 cv
cp
1 .698039 .490196 rgb
f
2690.44 1402.38 mo
139.119 1402.38 li
137.27 1402.38 135.757 1400.87 135.757 1399.02 cv
135.757 1396.62 li
135.757 1394.77 137.27 1393.26 139.119 1393.26 cv
2690.44 1393.26 li
2692.29 1393.26 2693.81 1394.77 2693.81 1396.62 cv
2693.81 1399.02 li
2693.81 1400.87 2692.29 1402.38 2690.44 1402.38 cv
cp
.180392 .207843 .321569 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Diverse crowd of people of different ages and races.eps)
%%CreationDate: 4/3/2020 3:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6flAQ8(+A>.NmL"@7M'&aK-o_H65-#;5Qqi'0bgX>F3a1Y8,2qs0+Rja*8t87IW7?a^@rRAs,f+Dk+[S]?oOaU4,u3q=h/RT
%>e-_:.s#V^9i$MGmdN#,s-9f#d>6%7`8Z5MclWOEO+`#K++&@RDM;P>)J86rA3^UE2[nN<=>iP@Bnf@71;Co(m?7AM:Is4ReaLt:
%g<tDTf`U]=9&Y*1gSaU!1Ea^r,2i-h?\q$24mDZE=-Gq&@M6+?/:`0[ekrVp/EdT9$pUNEU\3%8r)BN4@k^FR'Fh!=8B]$TIRX9\
%]MtiU/j![dEL.`\3JF%BH8Hb4*ik&=CfI/6UHU]83''J*IW$&cp7m,&?\K9rG$JN$:3c`AZTub'N<K04/`?BD]MTjo[<]PpnJ-n@
%e/qu]c\/DkOY)ILad$>Tea>X&p-^=ipN(i[8!QZ<@d]!,0gHn6IZ&:>\tiP0+1rb>OmeKi9^)M0oTsJn,FM>B%-F,K:EYc4[[7=(
%bXn6#7DYrLGTbT_C078"d9qfMguaI6D1D`i0KS\P:5!FO%)E2O0LSkC91XR.c='MQ*s"\BcJoA$g2!S_fc;DKnIY%M_U!OZl*dBZ
%Ns9DTmLR1R)jC4:(]NHM$j\O.;aUQj^i5]7)>j3BQW4;P2f*'h!LsT7ISBpa)$6Dpe"?P:kmMeA\sSG$>gO#S.iQ(I*Q!iGrc,n?
%Mq)bB'C`6Ad$%=@fVZ.WiCLB?#%bEERU_ceo@pQV2nm'DVp4`M$j9mh&cZW#"TF;jgj``spKKTYIL"3:!VkHi4U=LP#DD_Y#_!;:
%hnr]gBGC(j_XirHOjdi[J7]4$j.:jHd9#gU)ubceI[4`$FY7h+$<@s%*]U=$?Q*.9J;Al',f%0W+SZBEMhZ%Q?b,,;<1b3tpqfN?
%3Gd@i87mN2QCC&u,T.PI0]u9@_97ASd3(Y6ZH7tnD;8[;0CU8E3T=jl"3BTl+(-oNi"2tuK2jW-F,"!fD+#(3)os(/JKi,T+K28J
%Mk-J*7$N$1&I/4R(>=['i'?7[XSQ_ZT_i#<JAt%IA!,4]%3["eHR-B[*ks[HXt/uR/JXakSIjT'coY\2J?VU<%eUau>!O?#r,6".
%(lUF.9_sbuAp?K"#gH&qNibe"rV;9j#YG^0;1iLHJI72`+U<c#'%s!m-@fjh#5"O=J_54@UF1<.)\)9V(uPUS3o#[c++8n1pUd%+
%3U1^UMa\a2PIH.f%E^M@L`a5OP6aGq)^;19?7^ZX6n:]c,p@6;9QHiq;%@*7;)jL<JJ/[W'i,HKpI>DG']>ni7F;gj+#Ql$o[n2d
%0!J])<2!`ilC[.Ifs-gS%>JE)P_nCN9\o+HJJi@+::aqm1Wp%M=[I^\k=NO)O-#;&GqP$[7J($/H!/290Z%s??HUM_O2obS,lHH8
%l?r]C<Fb5Lpr(Le"Sh\8=hXso!;`5Q2PG+d1;?L(*SDE^%JiH]ci[t(F;pDu"cNLABUE6G;Ve5'!NmA/%8i%6buYgDV2+Qdp_PdB
%^dA@rQ1g_+?PRZDr)>TNKBuD/<e#9sj,Qm@+Z\IaJH>9-gae@XL['>3`Yd>6%@;cDW`2de7iem1Qm:-u@3>[l/INF7GuM"&L,i"G
%Ztb[eNIdUoos1g?iBKKLjiIA-g*lm95iJ&cMqL'k9dYlJ9Oe-oTdF>G$19BD@YgR.B1fl:YW40BP,7^XofW>Cj%Q\WrN_LmQt&%E
%%'H(0ndc'tNlW.m$`>.R*I!'WA<%Rdg;+mZ%W70Tb<c[k06>&KMOjBZ['\0k;qU;nR4oPc\Z2B=AjSjCAn/t:APunucjWKl6nosk
%j=quMC:YrKX3qZY8JO4/&]9(G_d?h:%9Iu.FGG2%:l.\Ml0BW_%n8C64?8A^ns`+"9LeUSpp*lRG-l8N<XtPjF6,_-=)R'@XV(t*
%gQcP1,d?D-=*0f-3R/U63+u$73=P/^n`;[Cgr>]8pi7<\DWAq=?sbPYPC,AAACekh92g=:rG%+(d=;.ObrJSX#C&=T8Gm:RLXVJ9
%eF3S4,_eCrNa#ZOO"SR#a"j+Fc'O,cUHd/T<,6;-(WZp+G0+/r+1p(3Rk`QtKd/cbX6i3^E9)7ZM1Q^cH*"[NU>'ON)B5c42.#V#
%#e.3HjaCf*_JHq5W_*&nU[PZ?oZXL&:2H#1[k+,g8Fp4:9UfireL$-.OJ;P?,g:rH/H<5OkcL=7jh[,RkqG(,?p3b<9^](r4f!fl
%BMH7I1^*@=bKrV"9No;/H=]ek%cDG[s-_@"T,9ulk7W3`0GYG)mK!uGPHe43pikC.2fs7'0&m+hgqRbE<IUp5H+RK:NLh6$-%N*h
%=5G:.(p^EP-a;;\ZYhsf[9\emP5lG7Tr2Pha<q'J=r(o4i1Lkd;;`!hBm[-%`5*V,g,S$3WSS9,'ZkI;SH1Uffhc!*c1oaGb:RE(
%Q.M#omMMKOYu-O&&V&>QX-H5ZQ1_T0$,*.%:C:!?/Zg&kL%[=cj0t%XPNB,!4,V[$q<27n!a.])RdR'kMY\^?rm8fcq#"b=D0Wo7
%4LjZR>c`YOZh'Oi01K)'6ajQ>*7bfB/o*p\?$KoAO7Y5X8u`a5%VrBuM_cFjeC@I!?CDaShuTGeibeqUOGt)]Gqo"+K\(,l_-0iD
%2T"e;A;C/7Hs!I2X&WN`)#GoNZb@5\0=/k+^;a<[5Hlg_MmHH4Xo!)h`\jmda%/t^<;6!oX[I;]"35ak)o[G\bdo3o2*[a!0>Bri
%>&_XuQ<]dG'6F`8b#nW'M?X8hXcKj+5\B-PS5L3Y(mtjo*)c_beOMRWi9Y2P]s93e.N!M,f(#5YA]`XQgLWm'Z:Vl:QnHM.>,n(n
%$+e%,o3;Z!a);XjDk$So-pF(EN'?6'UdDtaQA@&pC,'14l_C3jI$j"NAK5ngT954;D>AoD(TY82E,$uVo"5KlaN+.YH44="^$8[9
%[C%`q_V3gp+"qc:^I2j(:]&<[NmoGBo\eIU$Pa*7+@Aa(IYBI078DB^=\'%e+U77pc/rOj1"`^3?m][%/@<82CtQTb=bpk$/2S1N
%q+;J;e7s-b<M2>#,;rh9c.lpp!KO6Kc'H@[(`jfZj8[NM_h%1S8cHS//AP(!P74<[_6mM`9)\1>+u+sfRUj/>n']4k8SYh9c[m-[
%#?Wb6rOYPg!tJr7`&=#3/)d-YIo7U#%Pm>_^=ZtjXAXE]MmHH4XoITX"*'>QgZ5*u\?/.O9(OFlU>R0#/uiR/F&=Vbb;IC1q%6d8
%CLsSr/kY^_jeCZUZcPYhjJ)Q6[*9p6A]9$;P6@,BR>ZYC&Q`;hrhNd5*+[X>U0dS!'WeiIp!rS2F&AAj.2N-mR<;[*Mqk.3a.+'L
%\[3J:Q8t;tI<Zf6L=^#af'dR8opLWn3f7L/i('>FQn$XmkY.B?Jg3\LW5!9qI[cOMQ@<5pD`JY]WIi[S.5MpRAjrjk2KB7Z"<4n[
%O_YoH[MEm8a+.MTk1\-:f-iVX)l^9.CB)sbD.B[G-t@*=eM^=m5?b)/GD,6Sf\^!mP$jAZhC[Egg&TnZ,O<N$\lhK>,hOZCbq`2d
%9\=7k@jLP`86<$9pge6.AW6`LE7=cDlJM6U?hFS(""jbNJ,:NflR;cMC-_)+]<H1.[rdBWWne]\?bE@/lP`X]3/_p6L90dJ;#<QA
%d[8.qc(QstR'"/t1^":%DGI$2&lq6d,SYD)cU'?VC"AJEQEuHb`)4<g,JrBBhZj'A!h[<D8)SscpQU@_cNCFmile?i7R-36^OLm2
%]:Ae(XGb*M-A`fTSc?VbrZuh(5A\XLPJ:.(RT\K.>5]XjH8)'ri4<5jo]4Mlnna_G+<t:'Q;R]-f[nT1R)p]X2Hj8a!<WS?4XC7A
%Td?/Q(c^`U1+@/JXu6bL_Q((5=[b+%EG%OrECB8!Bh)r*GYPOj[Kj->3q>3M^A&q;j>q0H=Ie-R8I!mJqJGqUf5L\5_+4'5p4$.D
%lu)NH2uC@ZrSPm!mq2T$CPFbE^H_QAN9+3'E!JA\5JjcQ2g`7h)DPCbps3QuGI-JEg%2Ufk$T#dh0+.^;Ajcd1uo4'a/7]q(:3t6
%qL/39EtnN-cd!@an20))S/<*C?W`b^MCTREQm^Q;=te-8^_#T@V@CaQ>dTa?='YI$\u+SUpCC.ofGOSZ$F*<YC_Iuh\,3iU\p"f7
%>LbF\k47A'Qu!E_>DSnloZ9qZn-E-Qe.L&5h,!n2O"T7d`^^Hf3hdL4W4T7HM4ZB[a;p4Q-Ii@Y0]Pm5[S%:s0asSnIs)'\Z/0&E
%$4/,f>]Q2YgI6[L1,LkSR[]K%*/u^lo;j7m"(Chc,:]2@_b(.UfFcX:2D=[V.L0"@lZgWpIuSt3JJF!3IV!4!@d"P8Zkak1e$!Qh
%0:Tc#-Le;I]PIX&S&!2on?NA5Qte)fB&NeEHkZe(?T*J%(%smOJJThfQfT)$5:=ciAHGD&hVhW'#h"bqBYmYD@c]s.5HU+B[tfp.
%.@JcaYR-g%!]Gg.X9K08Ib4c5%\(?_QE!l4bOlZ%Sh[bOqQ\ouhiM."Gl'rjY-:1G.*'jl;H@'`DGFYE@HE:uJ6-&1>4dL"7Q53[
%@/="R0Njdpc07lje!HB>VQ!J,g*'\mT:8Jgr_j:UqH6ho(h[W$Wq'62,ZsqaG)V>'>8T;aU.3=8/K>c&,c:^!^K,c.XM"2"gMN5p
%_puP!/PM;>DJT4iiV9&/"3`O45LUKP[@-iiQXt(tZleJ)&L%1G3J[UeD.2OCna2X=mt`(r1*$]T%8(HH/9E0+H#ppm%,USRYk/K8
%$l6ddJ!XjJiZWm5M#>uF0il.)Lhu&fCZNsGI2jL*"6(.W3,IRk/*lH&gR@$<0fF$1<L]CN*+KZ&=Hb]KoTdHB<c6I-;uR+#b\`)N
%Nlh88h8Mrqk2%m?N7e),:hhUBRqF`!ZX/Ts?lC:`jVd?164KDDIXnHsZ>d]A"_K_3>Q`"D"07YihKW0o%I*/f4)X>;G81\kfWNfm
%A)X:u]sK)>&NO-d;jMBafpqO_.`BRt6d*-S*^de_%d26VC]t=3fpp<^5<VY(Rg7-PC,>J^8,T&mbJOJCd\AOVA%0q1_d[[f'$e'c
%S<^Ioi/a.5K76n[V`%s%P<R?OlPUE7EMoF:RFSA+G5oQL:R2lu[8u@r$'aGf0Rcp:(D\dlPjftJLUpedp*Q$;C.Vbl9Xs(2?T9J3
%m"DRIR9?t9gBi>4s6#-r0sYjYOa%qVQ&*Arjn85NFuI(iCADmp>dj1bQEsaQhV?,?qbQnI0MJa22n/>>2W!494\XJ"_`1h.:#.f<
%bVnnE`gtkoEuT=@j3DMs\KC._Kn#7ILP<r5\T89<h>1YQ*&5(qj]96bo+4.%S&7VQBDZa7m/dJ#LM(ZN_t$GQ0FR*rj;PP95?D<8
%53D!4M)@Cs@Yr2)*9";m"#?/UN:$egJ\.gBdHHe=hN<fpM&qf(meBib/%!K[J+[fUe9nl>nK$b7lt`qf0_&;4AX%t/\!F)Ya$hq,
%3U8&md5AEqk=8_]/36lio<Vu^HJb'EEV]oiD.A;AUAMTC]EImHb@7tG4'6(^IK!\pO-+CG,H-'"=nlF_YZ5P'=D"(tos1g=aBE%#
%9Ufir\7d=\D]IE?d(mB8F`$a`rl)6/r1K5Z``YZ.++1s7&'NZZ9gf1?`!Q7cmU1XS]d^Bp(-Y:^/E'9ohdnu_]?!Gij))lKJ*0(Y
%&1I.MI4_S3T5O+6/;'4r$nP[p]/J4@c2i:ok./5roT6q1P,;Sh@4sqaX9BtjqN[%;Zn[GeUJ\D'M&&::._g_ig*lf;+af4B`NQf!
%n/Lt`=+>DEX]FE$#J5>/D<-l])_Hu]0T;-chS-]*LX9erTQ^s0!f,]Kj+&ATH:nrP,h!cX"r,Vl#&C%YIp1haIXlb;ojb`u^*1,"
%0'#J^Y-:1G.*'jl;H@'`io%%<N[lc5='dO`oRo07EW(%?3_#2iQOU*tdIV]qiVLd=D]Qf#El8JN_rk[g.fPVBR,-Qj[VeSJR3(4k
%`\uS?+&"L66$F.n9WWpV-Z"82s&u&5?d,cD+*!U5cu:"+f#fMF!dL1l84d#q.=oWe/reH9C5[q@AKCa!,<gR+7GKZMd+Y+SiPDb?
%=8n9icVHMHj7c!1Q@dET^Sr8tRB(gs&"334\TJYr[3)r&emO[EDC%QDC-V8Gi:ThhYVnEj^Oc`]CQI)qSsE.d7Q'/9XeN3^W.0sO
%K"Ug0VO2at=^q;=eRj&"2K38P/Y\F0)ofl$6MMT\r2=;BA8.4!%%ENi'I,i!ah1K?htGOPXKZ->A[<9Eo7^=nWQ?=)`IT>]223*V
%D4I(0<flKo>j0(oRC;ZeVr\hY[0V/!==r-fhLn)"Ad>0FV>C.MLGLHqDGi$8:Q"7P)M,k#OS2Qu_I(Uu>N03bkdN8DWI@8HDa5u>
%N$/`3H^aft%cpKprc'faq40M>/B*RKn>L(;0Zq@rrc<n06#L\<L+%Lp"bt=m&Qg?/:uZO<&l4^"9=i6eOm.t`ToEiNkNN$=E.!$P
%Nl^s#[L;Fde>YnbeM5bDc.e*JOebRWgJeT6TmN#h/ct66s-hnRFfT$\THub(:edBm;(_F)CWM]=QGN4gC[3'kgH#'$"b-?t7eghe
%[[/qfXgJ<R<o?@7D[Z7LRE5Zcdin$Mj>6iVZC9$^6S`.G/CT#^fWmmm@uO668q[7*#g!X?]$SL8(o[p,Ce_KN4G8r)r>&Fc>d67,
%K,;unh7#E4==X%M28!hs2cr@"''ZSc95crP&,8LM^Gcpe"s\-W+W-(?6==!0JP[U'K-,nW1_:/7?O5"@#2@'_5pBid,U"iL4@uJs
%;B4)6(e=R)%)G$9^Sp8t%Yf<YgutZa*A?>p'%gr;EWoA.%Rtk<JT*.ik&/'9EuYF1aW'mdrb)Eg@jE$AL`lU,$:KK-Q_XON49?T:
%Tt!=;r[!A67/HD?ZGa8+^pp?8`>Gens3JI[]Bru*oABT*huEZDs7]n#bMW?mn,N+Us7<GoD%8\GrW$2WO_?ii6YJsfJH3V<mO'2%
%!JcA;KN(/i(M&E\gk*$Zqp]jaEG4,anAjp@WIX`r0nZq/hOKB'O8jlt<'Jt2a%]Kj8rh%#'M\i(2\#fX9lJJ.^r>88Z['[n^>YS3
%(jVQlh"rn]?blA&&$*GL%D!(^qB+cVU$>]B#WtRZ\iCX)_f:t^".JW-IDQMVs56t4LBE!e\N_!noplE9=EGqi?/7%;MOrA5=#]d*
%p?I\:+^=u!ACr,*QOPd+%no?`ib2HUf<lt@E#Hk?>L9NK2g^eRl#UM`6<!VN+P>lfiDlH2Ka",$i0c&P^-^I[+=_<D8>_cH.#*cP
%?6,(@>o<1R=rB:U]lZ`J/eeqJi/7ckFu:*Xin9j+@sY?\ipX@^BS%P(h$/!M=GQ[AqX7NF<V(UjJ+n2:el$,7J$&d$YCRs3qq^D\
%&`\FE-t`'N.'dcA1=fIoBFrU'n&n4\LrT@iW8V%[N^b2(qL'*?MjWL9>+*7D?P/5Z6nE4>?`#,:BEZ(N"=HNl<9iJlTZ=jR-r]O'
%2:ML\hs`sbR=8j]N!L[L\NRY`$mVs1'`jQR8rR7FNQDqiY8/gZptUMTC%3nj/=r'57R)`&2;P1/<fJ0VbPG7'X?a<FIiK4F(]&6+
%lrU.5UsBD$n*7A*S#cBTLh@QNP[Z&(gQg6n-.L+$&rf:rd@d,iqS/`9__ImNUGD(4N++@F:pOAMe0f`OP"\ZEgY`%OhuEZDs7WYr
%o(RY4qu?Zm^]"+<s7O.]^^pIshu>A)pcn`C^\mDI[>!XkUj'^o'2VQ!XN[dm"T3.8(&k,(57k-B,Tn"0L$I:R$9'MRS2W,@!hb2f
%#@sjM6P($i,h1hQ`28oAK-m!%+76\gi^BILU9Qt&23ENc?5es.Q:+FWd"#YRC>eH7*in%Xr@TU`7[T+bW9`Pp%.QP>krp?^BW>T9
%9uaQB6F(*Yl2HlEGFL&oKM>ib>Am%kHh:ibqdep4aLH)RV>K>@Z8LQ(5o1SiYAPAiNQ;^Nf\#V"d[,hO,d@B>O?<hdd_.Z(&qLM3
%0EZ2\1@Wp60Wo:$oI&W1%YOm<h;2rK0Y.R6gJ<P:Ko'MR7LVON_Vnm)^F:<JK5"Qc(eblA@iuu3=AWf`KR,H8n.1\a9&q01;gH8W
%/B.NQfkT#D@p?+d*KuJ#^H32jR0\X4K%=E/(cZi*Of_:e5:>M>A\4X+,-+7D;sT]2@"L*j"<;t8O);0[,t^.QkU"2k7$^9#A#iFV
%h'QV@OU,=(Sr?0iCJA+I\E\fXi2MN/8/;1ieS?r#5:lN/DH3Juch+Fi[s<V;XYWqk0.2/"W*on_"]JSmh%3m(bm8Hr*09Bn7>;@t
%LUiA1FO5f&.j??pA+:CEcn[1-F!)),=[]<)6,&pan59ZQ(k?p(]49>q)QmdQfm#mC=B'4OW3(H_ntk?T[7/Xe$&aQ;K47;hl\1U9
%:09+=(Dt)TSj*3/Y\8T.-dd2k;kd:k::&guJQ31i:OdpqrX!h:`BY9.'lkSt7Ldi#@S*o.N'DD3&iEW`A4W'S;<'dlUf,+V5%WFf
%ZBMkBN//.U==?"C]Vs_jN_**s$_Ut?GhdMB5Cj7'DO>-1U([WhGX\&bl%'ElY$_,^5^[X&NV/7R1iddS#,H]TLt%=-68GCS$Y:`n
%D^QfprjFTT#Ltcl:gbR@]0j`\U(ej"Vj[tT.%RFheM!(qTG@NPMCE+>L#JiV[S-e/6<0^m/T4L=nOEjg0M%%VfC+uk..gE6r1r3d
%'[f,e&Juj>Wj18&1,R,3\8)1G+^%KbN.EILQ3Vte'ps*u0gKhRADg8q0Q<,0QnfGG_AaUX.&\cJN1n"&d46V\"R1'=%MYrk)TPrC
%;GY*+Ofor+"XnN0ENZ%&8/1[t]>EjpSfDq,%[^4@+45<MPEKln=X9g($'g5slE;\fUk^O[0BKeSCBb'D+G1Q\HV[%DhME"0RX(LD
%*i>hq)C7)8R<*:(B%_+oK`-@@2PHeMnHXd3WS,Z2lpJp];TZ&?CapQ5L"J^0.!*5h.qJm(o5[F1\s%]hid>es9]:L23+=5sY>"p\
%Y71i1'GNZmCF'cpW5f<''/I4g:f3Sd;f/^`!EE,*Cqj;_RO#qJ@@86jD)a?+GL'DKBn\uCW7kRYXX'0iOLqJ1&k4=;@;@I;-s]g)
%b()=tNQl14Cff("nm!,-ip[tgWC+b?k92DpRC;Mp)2*D-#8Yo`V"RC-:YuuEn;`%Z#2JK>ot[HY6-s/WDpjU3F[lmkBMV&2FZTdE
%((<jP+YkB=JW&9LA=,P-Jkp1d)rVgj<ZLQ=6UIEoNRG%*gLU#2)5.eUNERQ\fMJLS-#69cP9'D2/Zp``>*2S6rPI]E4'?CJT^A[8
%!;8p4Ld-bobHt>'(I2`725d2]_m_FP$QJVT"g^*.p'(VNAZK]!hcl"m#]EtWV.-?[LjK"C]p@IT=<$*\cp:!6h+kMX@p4\;KVL7T
%&M\1JaMnf"`4_;#EI2S56VoUic%,_+fc%VA=U(fa7YfmZqa6A$MLm5+'\%&tTUnG^ZogBXd%.c('I08_..Cjn-<_,<r>^t=5p":i
%hr$G$%/WFEl#q9nQ.)$HCnj'5OOFdqF_g)d9V^BU]E?87ct`]!:GD0G(a1fS"#^m:#8#-S5r8h@Ra%7dQY*hE(abLk2U.P)TNaK7
%o1sr)Fde<b!4sC=+MaUU@ij\M#mjF]?agn6%n>p1[,E)RR'Ot6^\Q&<@W@Br_^XVPh.R5`Ek/`TK-cnj4upJ&#N*l6J^NYRkG<p[
%2`?oEYSetRq<P:>C;rhag!VQf$[@-U*D;=3)[L5:3nP2RI:u`^Ulk@I)__8$eu6^;,I9;T#jMIcDq9r2AYkm5Ke@h,A6>T5PgBD^
%:p+Oe>*%ciR5L9\)f<7kRh&&ea/VU\d97Fp7Uu6b[+8*$3;0fW-M!451h,22FO4%DNh&#F2&Xo4/Jb!0Kt0%B&_>_#6CZ;7dTQ%#
%qBTYLXZESWm1,X*eqAfd6_Jg]-GB'YfH2PZ6YJ7XlX`.'YdGo)C;Es#(e1fc@!iSM2#C3/Me^B5^IDO@PZukF<&J/&obIuKenOt@
%ePrFiY97Cr33B`V)KGjPPGUV()+0*t6?:3reS7[:RRRnp[:"uk+15cVn6up.(JS]Wi'ssg)?Vj4:PMRgB&OZuSio1&rD0gILI6(5
%gRst6'@@f@m3kJZ#&[tpQG5%O;Sfm1ePW>QgPA*?'_MSA!P^kklI9n/#/J*>gOWP*-"mG;0.F?*1F-D`W&aWaj<_uQdc6AC9/`",
%$:b+a+tMA_MEaQ(':-eh9sj_(Aj:A1nC2baHJ'b+*P%doO19k>h;b!m?W@&[@bR(!de_NO+`1HjZ)Idl[\1l\,DRk"cWNDER:I&h
%.`2NgMW*DY46KO\70Bi^\4@,7/<.+m@-L+6\Ki:3N)`f#C>5aUs&n]sE5P;.QVtR_5o('WfG54tJ2lFso5u3*5m@F'-@h+4jG:uT
%kYd03a27hV[Up/,E_-f+Ar!&bJG&p^Ehrb7o[go*!'B,e'&[*JE.#Q[&kI]q]&,C;.YRPs@kd?sdk['f_I1@,0]RULYcY-m%2Q6'
%KGm4<7V47"!7:.7=u(Mc-<Z:S@^P5.lP]sDKsl7\f+1g_mbeHC^X`G`A0Vu7#3;bCO"T+9`<08#[JedPL,P@q"#;JhZpCj9UA"fi
%L6H3o=nj]$U)Q@rAFj7CPh1*!U5m&sQ?uETnLo2t)Zb]"d6eklEA8@9fBFYF7%cX&hQt<@hJE@F`=@V&J(p?F*Ao9M(PRH4>G(!5
%qZYHV^`3B@imM/c8[AL(>T.3OE(&uMK?V48Hj!ukNG_AklE[k?YQq4u]fN2si!RhPPNe+O]R.U3<_Q`uM2sVh)2LG7)6Zl/0GDj\
%hbjk-/_>@3c"i&_UaWU#[OE*+P![V9diHM"XQ>tn8HC/<R?V:0*hJ0<M5lK:\4oO3b.0"kQ)J[D3$&gU6@uTYNgP?KpPMrc3JG%R
%"=t4^pM6c_M#L$/jEF=ar.dW>..Ml%=6iNaN?R!B$WK#O,pTs51:$-Qcn%Ju5e!F`4e2M?+sgQ^DFg^<OJfsi$l58ncnt;]$&_-O
%H(_gc3r5%PH8=#Y]XIV[r*NN;)[\?/!!F6tVrQ<G-nmE2_eE%oOGb<aW"W61YI=a^$p19LB$0e\[#@U2%\IL_J)FE^BYLj??s#qO
%i2&M=nFKUP#k!,9D,o9M(bGuajg<Tk[Wel+I;fWAbd9<%XAN^5h:ujk7K:K`;Sgsa8kSXL;hFoUkSU39`1#\j&=-J!1J8S9FfNR1
%%<>]#Io-V9'9OQZBT/m)78.-I1U0jo1kptJ>F1(=?rj61%0eJ#-b/F1^I]c>Ypr0V;X%(pF-/BPj`OOnP$rL-M"per7Zb$*.;[,#
%ih7g:8&2%IjuFlW&KOW_SP=;3=#O('PY/3"Q@`Zrk\98IHN1s,r,?[q6pA3.KDX8lFHS']3f21VrB,"B3t=#Od`_&JmY\Qr:*Osb
%35#`k--ECrQUtf;N9524bLdjJ$LRWeD"]CVl1XQmO5@R*a^b($9sPQ9*rqKe.bbi7ebM3'=hH=6O$cl(dlf^.B"d&RcRDuXee8$#
%c0"a5dHAA+qt66b4aYt`!F9;9V<YSN3fWK"o%DCX6i*j5n,U77g]$f!AoG</GWU5$qsp2UA\@d6;!%'WDoq$Gr[jOG]`V?e]f4%p
%$EZ2dKBSU#!/iYfIX?mJqoShIU7L_21S*_cTqKKII^Vh4^QZ]N#7k'0@*i`PrUZQaTD$%+V,k^0p;F[g;cV/hO;l+_fpVmpnLoZu
%R;7Oq*LT[$IWV+6$gtXT=7-T#137E$cVThCe,/a-c;Co>p>DjO/(ZCt37*?97n/p7mRO#KIbm]kpWa72N9bVL.TcAZ+TfsMd<R)F
%^dO4NhiasIo3gK;\NKFO#HoN2B[k)2K.3[#,$_ea+a2P_T!S0AEmXt=q@N;.'&AM-"HuMaSiAiM.c$0B$of5ub'V6(l$2A7kDk>V
%JP+VD94[3BR\AVEa7l^&7%ggVLAF%RmK&PI,DS@">$`B`OkV$)eS2VXN-KRO]l027`7rRKejgeMkO#Eb#(h]I#OeT-e-(<l2mu@&
%oYksA5NY0N5NFH,p)/)BKBk,Y'IWtlIe:6I:NPqhp?_C(n*&`kpo*k.oo<W_*&6[G3ZT!OJ6(oUE<pL2&.$<J"h(-lkdRcZSZO,W
%".Sa1'R>^d2,gpLQRgha?$tg+nmFBsC#%Mc(UNe`<3=UhVf$[IQ`4.2#[&8bI='ZK0=@BmNur!JO\-Vb._,/b-hS8@H^UT^BhriZ
%?-Tbg8O:+edri6CoYA]alkt>qeHsiU3qRZg:GPW,/sNkn3(("d$[8!ER))/!.o"(Ae^RQm/gn=t.W098<rgI,lX]"rBDY*NIi_@8
%56ZP'lf^1RTT_mRnTLpU5+YGH;`1%"dL3D]aOoHi2(6qf^"npA<0KqEauf;ec:fT`H-S;Fa+mfT@GH=sk2]&Q#tGSi*9BMeISM#W
%48+'_iKCnDAkQK.P*Z7*XN%9tK8\7PHhoLiBqNHD`'pGdca3mP8<R`36Qt9HS30?58&jYSkB*u;F.sQU!!C5,?"XPY4UT!94bgg#
%k\hgikiqW;gGQeppUDp2DT(S<UX59`-:]AJDJ-Os2hFGqkN+&KgaNsa]T/r/rW'%aMA%buV<d4?q-8IHq$LY9&3Sc!*u;lhef[uk
%37%H4-]U=@62R;l8_#HXcfBMV7-8QqgID8+f]CGmMA-rih"4Sh^E6$0Jr-,<F3WS9^&S0cPWm3Gl2?s$16@bK#H:=FF=;'O9,<(,
%4:"A+SO7>\ii*:.)eBXfBM_LUUANQ1nop'iW0"pqCcce/Y##FiI(o$UG7Yr`!"UN_[)*:&;h5*[K:YF$aBh(6C:-=igpQ8N+QVnl
%=Q5CRY1&S*&3W`fh8s*&gV%GijQs*B/UMJ7o]2'S@4-AYYk^C$Ep[Y/ah;frh!]sgocc!;B^DgI(eWX`rb2(PGiuh\%!(9%/+((o
%=t/mgq9qnTI!RmY^QD+`Do="c3DT8\hj!3Z]Pr71KK$Z]-YN>]]d16C5X<)(IiP4GBQmJXT>%U9'A+.Q+\"Kf!+@C'7gR<]X6r>5
%I.<3f?7X20LDpmH*U&1ZK*Hr^7:!d6c?,?KNUI>8KttLUePtN54UnfHN2VBETIq6<B<p.8a4JA)e_M,<o9,88PAC)f'F8u3.jG*c
%dcZ65TpPM<KT0HL%-H0YA>j*l_a^/TJA!)P$Oi;=s)KTN8jO&lSb/1W)T4fNZsjRd2WBB>Z,)hDKELs?^l*[lrsHU+Z%j384PS&"
%]Hhrok$/$YQX1ZV&MXEGaKUDY2<fu87#(@_0/Bm=VVFg,5d:j]E9-I3KO7Ih:gnhR.Q9:176!!DWTD2+]AuEfLnV4eGgaL]i&Zt+
%.ZY%-7b#3T\ac$k;>p$L@q^B7s,oA=dS&AAr63C'N/4mPjXGh4TK=CM_C(!L7"iGmXR6IBF:6%_=--L:n^K6mBn'FhKC`QJdN>IB
%rP^I_,`!KA;qNVMJ[#i26t@(VjEBuO?Q[l0P=PTk].8+*=;5kHB3/\Ta=IM&)^TD-^`^CC1MVG@G0-75+q>T]Mfe"[fS%Nd?$@fF
%oN]\>K"]u]j<Z3OEZt/XJ;M\:rb0U;DMPM6BAXjmQunlk<JK&9<-;FajBQ8g6i"*]:WE,uK$R;69(!Q%U%D7[:0hM\2or;`Xfd5,
%2S`%@esR.PR0=3dC>MrgdF[t^p7+/@d-;_g0#!TK(D""%L??O"\(<.7f+c-WK]P`CW:F#nkZW4j>mk/W!gt$[CB8d?7do34Mer9V
%XnoUf07Yj"h\j]V%gKILN4gNC<saD>HV5!H6KC*rr%W>bc[J%,1Yo6jn#/D%qZNeb+T]Z)q@S]f=u74i7l$QY$b+i>PIc>Sc1gq<
%*0817(cXM"IX7Ms*/*))km&p#Xq*9.f2K]@4ZuC+o;*^t_H#h$me>iiD]&m$q)mFHd1cSZ_&XA(.!*&Io;HINH9TCK.ECl)3k-X4
%U#R<,#>3l=2Ulu4]#Xl9>-@cnrA:)t4@S#?CX31^JO8Quh=%K%q5X!oGYZEgJ3RqXm5nCc:Gq^rJ?tO$Q6L?^$+D,mkChLbnU=8P
%I7<brDhgFMgi2frfS^8L!Xg![GC;-LBX<)X^:d)>Cn:i4Hluhf[$SA;WnupFcBdrbid#k-+72c@2u`A:@jH?JlJP(g\Hh:Eds8>K
%>c3:%?/VnF0:55t7Cm^-!f$_L>?\ZG(mTABpAu^cl%'[*n0_Cl^)sR/E<Q[J/B(&N;lB_Fd@cV*j.Qj=GiZP\S_]Le!ea`6H$&S`
%%:%,;?.o$rW`j(aJ[mdL!m*NN*6eSSKG2BO5XED*UBaVmSTWQkRd'T!&?u5Z3skb^Z+9^eBI&Z,%_T*?=s2VX5&*l2^/D@#nd.QP
%o_nU;A.T0IkRhC63n+2jC&L0Mf&I]9Cg%L<Z+N$>AK4YP+cTR/57gERB,`"oC:]@8,D"&5'/F[dH.,"#B>`$rfBLc=iH1D'd/[=a
%A_Ah6Qg5Y[;E-V5On2/q>A8AGM6!hOW3^6$mJJZU7hYn2H:He62sYfQ8dZh,TR7dFr<&4Ij[WCnT((b3i?SghIipna5)!`G@?+TH
%das]@1E^mqc++</D4(`p\.:>oA9[2uQ:sDgGE:Is`b.'sR$W$9a`#JDO#LGd)J\ePpJ[lD3g])P^8]ujh"bq'bi/.jQ5X%qOc9t+
%.>N*)Dh77Dm;cE_+2.-0CI%K^mH3^5iEN`rbJF7!c:qY@;W20O-.ffo4&o;q+3j`=lN-5ghi>"VX8>kuS:p2_m[5-qYp7A8ifhkd
%`V5\^^;nr8efPC\grQQ<:-Y<E!8j"OJ_BU?Q`hKRHtoU2e*d=)ktcZsqlE@\&)_h0;R+7*dn:DDh>D2!R\?9Qg\pj,*H^)9H:Ba6
%V1@'NW,gjiY<;(K^u#>idsI+F-E`u(8#&$uN?$gcbme>)NSW$<\ueem7'"l5So4,cank&D#PecCl(r,tP">=W4#)6#rS:0pY&F2N
%dcA8WMO2]X`_#dl"Y?83AZAX$ISVc@%\)^S>dDI>IZKGX732i)X3CO1BJr<_I1nd32IEbdB&t?[H3fJ-B)d;"%[;hM2X`Ui/'!RO
%q(Ze1o+U?lluit$]%B`bZ_'<tTkIorblAufHRO$UR=h`Q2FU!iHT?9;maWJE+6OQVkE41DkJe:<mI+*Iopu%2^sMbCHiG!C;:ooX
%UkNfkOZmje0SrG(n0M)8mFr@,F&iqN/b;7[Si=f^8/AqRl>T=7-_EuD!S]>3K$hD^em/ZA@7G.InQm\H91@m+cZnXu4TK/mrOP^r
%?6Gppjn&u;2:65%#m*'NXHu%5*PlTeFFWN3fB@iZpC>4+l-RoQ?1Hu5FF]&qDuV84EHkh&QsT"a\0j:?^&TBL)X>@a(a&tfLP%\(
%K6WDLI3aW9r@78`\f%CuSqr[@lH."F/)(u\h233`0K'.IqU`DV8K)XoRJuE'AP6(Zqr#Drl\b\a[c?QLCu_b3(GC7la8&\a\;asr
%.].bJ!&k#o<uKn2p>Y)aa4YE_gSuWn,MJ0*,$!;3B(`t@'LBt[3Q\0oduh=@3*RU(HW-Z;J)^[]H)j3HlHNY"[PLa%.Tb''HZJ_B
%:\r+S0_*%MhL=Z8J=h/n?]#*($4;64olq79oc$#83&q4#>)U*&gL&&ceJ93%LSMMW1e>SIY?*g]m*0*!^GcK#3V,La-A1RGOL-E]
%lNhm$ln5XWR#4pg1+D^"0mW-U3jlf><r3%;A:=]aEl%"Z[aRm'*9k)*K5J7eR6mk:j_*DqBG/)fp,qSlWKu!6B=k%o#B=_>Jr]Lm
%MXF^kb$?Nm-&]9?F:&HnJ/GbF5s#?k^&hHC>'MXc(#EDMBmLFqj)I*Z#$<"YMsM+aeVS,+8FeP%^$Zl`R.iGsVXoR<G6D#<Tfq=J
%,l;9$nq`/^n+hCEaSDAH=*^n,/<E):DbGQY1oJGqq5Dih4"^k[q+N$!]m\^f&,N8?A(9W\b!9M71HjBNIE;nrA9%5n/l,'r+>=>B
%@kr@PH[V*X:@824$7<u-97ni)oN6D>L=hRJ5;)]iqGtFTiYVkC1RG67NqStNL.3^hqjP&"?1aMkX6i-ajiEM2G'`*#Qg&=KdptAY
%g!q=7m]J)O5h2??!D_S\'hl4L-F.mk%F"@jQ)LL@0`>Gj*qT8m&X<i#d_HS!%_9f+7nj2J(_EV%>X/2[Fd(%8>.<PY\\jPbql(lZ
%k:+q/#KUAsNV?(h!VAD-?Ic8qb?Dn;DrEH5/]`A.eEpZbkfi1>O:17Cak0sH.3,CSKn'Ud>FMt<eU(ehs*,%_+K#C^^%l;$6_.%f
%R5TRGStj5q^\7eO`M4[4hB2,Q`Y[[!I(f"A.D^,`h4J(EfY_C^h,T.j8hTel"J*FQ0G6]_.WfVpa,,QZ?Rf)aa"S#)(j[M!1!)Hu
%\$Hn6Dr4^_pjHA81sR?@#Q_?h*W\k'lAHo+fDE(]_ft.Vq^NBQp$nM!T0/c]arS/$=tdOm&c@A&TWOEL:(.,E(CJKng2!ig90HfM
%_u!`),SPm!+MU=`c&"!#>&n:;@.j]Xb04s6Nkb1bS)bu;a\HM\1bfX=-K:;,1ILlALL"7CH5t.+\`\,b-\aHTP:B]3eND>]A1Ha3
%DSrDE!D+u*BK+8bg.0PWcV@AOHh/#?+U=TTI[I\L)R\^$pPt7s]\0%Ene2;@lD3!oP!M(LaEMsBSIRaQ0[D)t8n:.tU6BLlgYjU+
%POC,(U!"O?dr/kpmT;h3V[ng23VQb3%c.X'Ul[4'(XU1*>tD?On&+a5j,p?lATq</4OlqD877=u8;I'$"S%Vn'-PR`q4.e4><Dul
%d2<MJ(Z/p`-8D;7\93`R<ujg!DH]6.AFJ=L4i.64le@:YHZ!d!jZ%4=7muG;]:D8,,/73>-<-OoN?P4]pRa[*ff&fk6@gK.^c*qB
%dkM\>Xq`;?d<k0<fbouU!2^GMjI2;"pXjUC=GmF?k=>?Zq`^^n7dR(>UK+=!g!N=PZ]dV(Hg!3'TZ%C1O[=s)Apl@Ej?!1hIG.P7
%I7p:WEDG@t8gI4mgUFsV^<@Z5p@?1RkViMQl=&;64a6:Hje2M2h-@;FDP=FjLVOf-o3cnec@-cPElX%Sq-,\$o^8-CC7/`UGc!(N
%M#0;FMG@#oBlmT55tC2gH1Z9HNXe]>,5_*0(4^CUC-UqrH39o%V?I`EpDDhiYYoQ<rBbcTV)inhqsjPSjLk@-WHk),"$*t@mHY0b
%jDOneJH:BT_K,k/7&FaL3IpG8FkHW;qKG(iV"2FsbTR!lL;>ce#4<B5(iJ.SK)alqQ<;0DJEQ"GY#,K2CWiFc]S.UrSLUt>GXt:\
%)ODP+Vs$a="R2!TDReIcGbtJc[8W^$-1=/F6PLk%Wi?1ljA7E-2Cj(%8l"^_H[U)(D9C.A'hTH=_k%<De>?1!==+!?/gpU;GLWNg
%Wj@KeP@geC^Il<F8$OE,87T<<9Dqia^qoP\(W=.16K'*#aqm1%s.l2=krK9'6sXI"%A2P@](>u62%IK!J^Eq(+t,Xb'gJAs8&;Oc
%3";C[6Edmt3?c4*Grc\4#$`O@8B:-,(/O9<hZ:+HJFr4LgRVElEP&j3"j]Bd?Ft!9W7p'oO'0*8Ii7bQ:7`F252]K)D28Y*QXFpg
%*oPt;dpP3PMubLdGXdN_BH']ml7^^;k\Mutkt*,]*aP<a0B2>4XEa[$c-t"4q],5(m*@lYT5+1ce4Gi`9LX_!R,G,)j<2i0r"pbk
%GMg0%m%0RlAp6,G<JX]brg'n&l`IDIg$SJ"c>gE'O`S[-$b7d:?`7-?6$'!rfR3&Y!>sI2`6ZNH;huZ8RV&b5:]-\n(5sIG+?]@l
%l6^J?bU`K%ncm:BM<hNVhj<Qlos(b'!#(_^I5J_mKtb=0s-/fCHc/*'DpI\q*3*IuJDB'of5kUeO>mBH&Vun-18o,8OfS[#DC-e5
%LMqf.7M"bhoCb>]dt*s%6n4u[TEQ(9!#p8-o[#1Eid7Yr2UpdSIJ.'8*bdoO-6M)M7q9%!MP0N],6R;Yqp1:FTLO*J@n5pr2Up+&
%X$9raheGF\@+alE.'\!P]rYn@lS%VOAR25>kN1'e*ej'Mf4Nq\6?R<4SVkMC&&GsKp].rEU8OkHZ$XV\]fA&Kc"j6n/bBWSYfI_C
%#qB,M8*h2dG2GQtn!o-$W/'hFT0>uJn"/6u0%?i'>s1GL!>lPZ0XY;jZ3_>J%J;(E*d[1;h-*Y.K@;27$Ru,Y!/EY]K/?TT65NDa
%P<U/`?YMj_c@8<-.tbXF(0#e_m4FBl+pkA@2mTdA)d[.KTT];+qr;!%C;HN'TH)?,'i[Jr1#j;K)3=3La.Z[!B31dj<t9!5[?jr[
%I6R@kUE0J'4e.+-UhI,Gi=9+.5<;];>CLiEFeD3IU:jV,>n:]$IsLf)=$_OJ35DBZ7.Q8HWb=`$*ZYB+TjCRGTO.rhMoT2,41?@M
%9lr%GeCDaKe"I*@ra>N#$an^!j[HEW'nP<E(]="DULS/>jl#!$5'_OM%<Zd,XUFg9?J$<?[X]^9fD^Q3Ml\hdbL9_prV#VQ'C+=p
%YG?cmJ`-WZ4b[*c*N6.rru9_eBLBK0)@`k0Z(NGnHH?78ZnAr6?I`W=JbjKOcZKKURS[KqSo&iFc'&6+'Aj'F<,7YMRae*T*blq`
%<%T0SF.#-Y:]gs#NhR0<ZN&r=Ob-Ec;jsW`oaS_''Bf$,!.;Y^jW[@dTC>[tB.aq%G+ec(*7XTo;,R`i2oFLCg*'EKK"?ZYB-[d`
%nd+Gk`[[piUZ-HMK6g!lGSEul*VUt(omrb?G8$AP-.H4r#ft!s!qr\BAPs3oYjo80/WIYTM)5`#EU-V%GakQoC7N#5aEg6kEeK?p
%qsSVnC7onLFA!&1oq$?"9fCCF.OY?@LpQt>YCh,QG@gLCVdED&oe[:+lGCWq?;1<>f\(]fQD[c9kY3MrWr"Ug337Mk5OFR$#LZO.
%d3:ZO_#ACRp[th-GS\YUg:2#BBg(R6(>67TDDmA5YK)Ot`T'%GHeL[YNiP4UF*3PXpnu&R6N+92NY:Mt)r,(3K)M\=oO4r^Zg0i(
%bpH2]Vpe'2fR&\IlG!6T^)7Z.TD%[Tl!(9f!mq4cr9:iMlN#nuUTj18o0DO3;>4dGfVk)FLph6Z0>/Fl50]oV)jKd>o>'$;@6h2a
%4g=6Gke%rhqK"$>!nI[uOm8pHG0?KI:G^kfWT@9aI2!/i=q/j<4kr169P(?(B@"\8q,?4aadgD1k:hN>RtI&djM/g-[sU>Ti4K65
%]?i^dfKJEf-f?%qe_hN&r%2i2B.Fkpk5gCPpb">PH&%Lq2EX71Oqr^!ZQ2"b\af13J_6/:N74=?>jUVUc5?]/Rqu+#/n;d$i+YAM
%OG!i;&:iFt('3ju\gIq7OE9/:kRVqQU0A,XFWC1heU\Xlfsr'p?PKr!";kn3B3hH$-%-B:;#U4`<E0F,Y\p*@D/,aPTsj#Y6e,H[
%eC[d4.YHI/hqsQhZ9'),,.@`-.O(L6mg`Y,W.hqeWq/du.\Q9&5RXT"W[$+^6oV%g13>,)FeCq3l/T@GB1#9q5`%+6/Td[Qf:o#L
%p"8]_K$&@S#]TT)QcR6Cd=hpePaZ&fWOMpMI1fW^(h&iqf"edEfC"&B(n.mkm!QS2*j6<q7]0t1_fHnQ3mn#of9AoD^lhafLLZtc
%%0:=-T.ig]!5_^!JqTHHoQ>?jDX#L3aO.$X+TW;6!d$RG3KH\9BG9aj1g\u96A%7W(LFC4Jrr&!3[d%CZ6>b#p@pl?9:CWdN,&HG
%1`V&$abX`,Lo_a#R.b[$m%4!MU2iBk&D=JD4q#1@j9U7*T*^.a])c:5Tt<6D'F;X&"KKQ"/a#^obK-WV^Ag=.[tjrJc?q;b;_MJ*
%)A<+g&$%lS!$$CN%NM#792^")(#231&%kWb(D>]7W=Jst@h6t7"A4Y!N"su"0LUCakHG;!>k;[b&MZDt`=UbAGIhjO*-Su/KQB\b
%(tFjWHrnDMR-oqn9Rl0KHGe_;,EH@CbfsLKf5G0I6XbU?I:+cmca\R+;?5&oOFE4^cU]^c'QQfD8?`95Lu*3qq$kV1,IuD=,Gu^K
%:NY5(*5%=8OUh3DF!?<\L?$Ri\N`4P_uT<ao0.Gab>U%3[?i6Jrb3SNUgBYPN*&@uG]mH+1o<.!S&3-.*-jtc0Nf2%?IXsYT4`^(
%T$MCamch8ZK&5L^C_5T8<!f$)k<9a@@od6Bg`qF+4XcchTakKB(nNX7?/#'7[-L-<+H`?poLPIqKW6OOAqS^)EWI4VRfR&+C\;[5
%8?3,[gjYb1cK5Vq^*DG&c\m;_^K3//*^EC[EYl<n.SM;h"/]%TISVa*M97\U,#R4OorU2)g"69_j+?F/:(%M3$Ve^hTL%"%NUM6n
%esX@]\>H1#<R=`lB\hkX,&Pp!`E6Cj6._?c[&7ArJW97V2Uk^k8_0Bi!i/CbA_a:B't-ui.O_.%>"p.oJ:f.RCbVs\ft#CqXt0Eh
%FN1,4EcAqE\+R](_j\L<Y1b+fZ8RY)!lZ,hN=A$g%\^@d1Q@*X_)r\\=44=^l>TVuV9gj-9Uhfd-Y"OE,10'm5)Vh01CGFr>e80H
%[#lQ?+j*K(\)UDp4Ar+8/!b8(MRQ^8PA0:%NZHaAd9`F)ZgG^`ch-8l/quI4HNY(MCh$S"5\J#()4*Tl_gs6]l)3qI3=0fMMOI^U
%6;*&f[aA26(Cqi;6"%K9n@_*cOVl.AIVs,GU9lt`NJ'5NMWOt*jZL+ro]Tp"`k5YXr$(a`[/<F3G>np1=/7GNDf!<AMh?XX--5jA
%j'[`_!ggPR76Y*'ie0O,@K`hH+TY%mTd=60=R_dPa0]=p(VgdiDrX!EOGo^YN($%SMC;;2W/M)a,S-si?CU3elTnb4W0gZ4df1f5
%D8c_g$m@N@e!M-h\MpsI+8M:Ih$'\fXFa2d@J$!ll.SuE/:)"]G$U-d(g93Yj^Jbg`d9o2@R!pIG"jnj&W>'FV?#c7Si>kP/d69,
%4!)NV@J_$sF/<l[+&#PMEqPMUQj5WX&Y-a,M+^dNfdIDP7\!8=RQ@CqSu/b(1haZ5hglYBOu)b+PbO]l82N;]Hd#88_J#o+;qdU-
%#?=(k\G\Hh-R;LkK0V2cTEn+;c0XMEcVKa/g41&[ifE56p4[$hl`M08ng/2JN/&YB75<AmV](2#GL6M6[P6*er49F8X2^QhF6XqS
%k6=^K>thfX(>)p4d%^uV/t<4o]2An!7gBJl_:dXNfX`J-VHrf#WN/Da1RYe(3hkamAnX:_([cJfa>6.*?Jmc?g*rP7!G9,d]JuU*
%d4*R7r3<9Yb+)3)EMbe\D,F/6f[]U,Zn.p0ika:,;":S9-!ls$>r@G]po#"NdhG_MB'`&u.;JOm)n-"lc*>S<o`F.TQ?Am=Dou?T
%I?ObKT**Y!\/e171kW)JF]X[/]o![TbFgChlfq!ppOp3`]G>\uFfG1**MSp\%RG4qbmgKggN-+]2n%n4\P[F9(E#K-jL<gtR%&A^
%GOn?aFmpIE[P6rh-V:d-$n)t>`g(G];?0DI!i-dU!m4?nX;r0O2b=@DGI2m+>h"nPNflKk&3#2gRO^ohBdu?:gQRq?/'2rW[;?^D
%O%dW;"<Pri<#tt8grc0NUC1t=A'#s/Yp!%OgR?B;'n:'O-F"jLjL!_.]mXdf?PqGE[_XRKVITFH5GQ9$RN"53Wgp%k_uo?p@J).&
%OOcHJbc4M4U72.83h#cTB,OI]nSGj@ChU#QHS^P+C$)<2ksp8t9<B;PD][pR,WLK;qN9R9B]^::Esa!2(1[;a>q)&65,[B'`s5iS
%S<M=2N:Qg^h>3b,I:21?0QVGKX;itF)X7UWqDVAhW2$o*J(T[FEg5Pbf(A"g\']Ml;N?-tb>:FSVg"]jDcRJ[dG3sNa+OONb=bIp
%d)M\NK<$d4dit]eNdW$W99387>ieQ;YOb7W7PI%c]'K8+CRpq%EIhe*Mr!.h"gdID>4/t9E&uP[+R-QMO"E$e`+W8?Cn\P`P\LQ%
%_.C9N.8?)tl4;U3)])%0U78pi1_ic#S8r$63s`nV['7hP@`ngOHXUjTgHRZE5HlX<-FeDE;-j5UB=q*S34.P^JoX3D3.:kZQ+eXE
%A=2V^?jj%j"k5X#(6`RF'eCfDe*uHqe+&Nq!%Qf75OG'$D4NcZ`KLYC_]lf7DE4=KV4+f>84bJ/SBn^2%tIeV3StNM74fT73p/0Z
%1TohlfIWhgO'?[O[=!Sd0m>XME@p&`?b/4@3M.WtZ'K<$X)r?IE^&Me^+J<.Oa5.GN,/6tUaj%Qb5%!3q2e9S6oglC=t(,hFnRu#
%Qh*r;2L5!P(JN4,7_1V$S,(`XY>2hF$%Xg+U/;?B?qa&3=e+[Y7O(si<h;1mW6u2I9l3F5e[D_3WUpVZQ`R"^`U&?t8Ylbb:$:#I
%FHSW.TZ$4o_7(>.CaT[IECCeT;[?"t^Sq%KE0XIif9Cc;aUCZ\9,PhGDl1_GP^tGM_OHV.VqtODL%,#-9ESQi_pY[E'DaC9hW$T?
%S8WK69Q&$n6I'"`O)\)lN:T\aA'IpQ@Z58Ic?ar]Q:CQ4P@nOrZ9,1AbLt&+XQ5`3\l#]uDN;f(==E>gnd$en7R+XUk+sID>/sL^
%kn].bqE-!&>/CM!^$3uOI%.B&VM$;fet$=<.;]2Fo/+E/UntY(Er/a?")/`gj&eQ""p!juYVD.MBG1H,U67_-`C?k`$@)Me601(1
%gjt!%k*T:7R]73!f+sPb?XVJ":<YPZQ(#REEW+.B,0$Hd,I_NSH&lr[L13iI*PF0Rjcs.S<E1B6pK#]T=p8Ke;o;AKSjPu)HKn_*
%(4%cX6#t`u`-At`Q09%o9XVP@HSb7\nBmJ0ZATioET*otU7%S'?q)tQq+geVaeR(T.dE>gi0q2c<<S6r@kN+&]l./b[j<)_@F@Ya
%gLLj;JTh1pq9W=+nm(kI_Yh6rU,!^iGrh#M&*ijs-7G`P:^`c=U@D)5o'*SZZ8Ydg@QmG-5H[MP.g9=c*H!]#O/,rST!%O]:D'pR
%?*-71/WTn)A@gb8;$2F`Jcn+g\Y:>fXFmh<MX&e3WCUsKcmC&8`eA^G!OO/EW2s!)a,Y:b]HoYAKWnV+gA`Y%f"S#PL.<`;=HLZ2
%T?`4H'l:V'n:BXZMOBQn_pTB#!+S^n6tN,k3(qX<j'odMJk0HZMeb.#Ab<u(*PE>\lUGgb3)(cHF$=++7O;l,Mqu??Dh>S-mljd:
%"!`,5^6%D$d"c*3oo"NnJ\_gXIQa3HoS-"k1TQ;#4*lOf^>n+E7F9&I3bW</,2Xf*"r7Usf,eOuMQ!=NV6O[@Z!V39?^R+u)B$t-
%ncL\"B6UML3B:PjTb[Q(-,<o72*gD6'sieV+!W'@O@qRq7LiS<E[`[EUV\cErE,;;&d2]Fi]$V:B;5j!c=8"f=)Y,*`X.3@.>j3F
%o+\M\go(UuaJimET/meX7^aHj0f8g]I-Y7]b.K2'"s]=ZL<;XWh5H$.jrlGMf#O4\k2Fm9bZU>]eT`L"o4G.2dAb@=arN>-aDu1d
%[&M?9dk/'b%mtFkU,#M"#A:4R_5PT4_EKbeY0&l/\bVs0(L<H<V*']C-srEi?\gA6><q.3e9AF79<t[<]eCi#D;Nc8R3K/=Yu37"
%$I=<-"P;;u1,9:odlA5NQ-,k^h"-ua)-)9AWrC"I7uJfEKBWuZhR03O<KWgVlhpAWBNA'5Tg<k#>)^+bAhk6klg\<5ce_P@Sn2)%
%2</SX<Y,o;[]!0hV\**kF.2BUi&D4CRAlc\aAL!*l!i5>*Xl[!JR7u8OWqEl]H`rBJ$[UL1</Jt>=peTSTcUf\ubP$$tq`YdigAH
%!iL"L'q<1.1::N.&=\E/1<oC+abE6ijE=h8Z?:mG=`V-J)-E9KJMMCc*Yq^#qte!^,$ERA6Af;^h:b2QA78""(WjO#VM\pW%_=PO
%,C>gK_A+L289C;t0IbVK7q4\G)Mc-[V"W)4Pc(M3(13<(5;rs%b1i*)]Z5$]B._9T+kiZKno0$'3K*I:rdd56H&D0iP:U;satpIC
%A_TVWqFZ6Y`nK\O)-+u$eAdC=&jK+*8[[T2&hZm;I:-tqkD\Ze*@dfKYd_/0RW>,Oc;-@NNABCZ5db\n-cGBXqjok6U;7c8!TE>O
%cLF0;HIY0r#:J>-*\Q_spZT/11/msn5W=Lj??ZbTHa97!Bh`XDphoXc?TYsC-%4g+9YPZcI7!\DB:j6=10':_c800Q1QtE-0&X,F
%eWHMppA.^M><YHO/.+0]J313Sk[.p<]1q(ZJrn-\];+N]V*&WIK,X.tmN(%r]s>7?ULHH245]VN(Q,6ZY*RWlp4G;dPBp%iN/RWA
%T"#3/qLZ20M\VqcbO4<Ugu=$KniF-0m[cb#;:uuKeV39L4rWW"qaG[O^*AhCrF3O>(S_&AJPiZo?)q[*h%K-)/5r+*?EkS`<7lHm
%W"1b0ohpluCMG'^%YI8o4fGhg$jG36%j-5Zffc%J!npA0Ydt7VQAsWB0RW]X%G-hGVWEVgPq&lnr1pMsYXYP,-0;,>R.hT1L/Z4i
%2uBt%*XH+CJ5aOAF^Da4^g_Pdf=1:SYfEP%\_]HDbOY=P>)"c84VrCWSsG,lpS:O/QcCD;DC27"4I[nAD(>tBe+bQ.)/n*Tl3]8E
%d^#:+),)\e6'fbPP+'9D\R!$b9QF>[CGfhT?qdSNo/u?95abls,j!Q+MD#`DfV^UFWND!P$i@<2qNRlR643Usia[QlYe\+>Xf=S<
%VUqOLq[E0](KoCg.lnJNfJd0I)nW=Mb;[gXkW'%J'SZ]seYeQ3M^[r@Wp8%I2Y.[WBmJ<>MW3V&qm<C"Ug;c0(&%/5US=ba9^Q+j
%@@pS#T.FT\W5:a#)<Sfl$SC_ofj7s+@@u,<K[A'I$i@<n:nDF0TY`mpW]h'uC6l_#Xff,3@Bhc__EQc"i].DDe6PA[?Pq1LNCBm9
%_^OlX5dYeDqm<C"pas-I(A;HBokeDM+?3/*T2l18'eAkkp;mRbDRSb0XNY#'Ve&qJrBl"-g>%C1>#g!NFIko8p1_d7[,\Eq_EKus
%6<,,)n#8qlbk`E6NVloeqm92R;P2lcWN]/Y-3G?0bFhC,kp's0h0tW.c^Zb3UIo.MGiD_V6))&the(&<4p>Q-q!".cMn[.@s/lXV
%>PrGukJjY,<R1!5Urn^WXUU7WJ./Ti;jKmT*L#\!i*>2q>AlQN=79+?5;oK7XTJ/MD$Io+:X?7'-F@ZLK;MiC;s?'.&a-5Fa<',r
%O4:VRFD_aefZ_M"Ig-P^Hsu31&'h)/2KRHEiT5Ra;3&1>s-)#ndJ\RIV,DW+s&mR$T(VZh/_)Q[g@tVMMplBFrhgK)_96`$FSVQ-
%4Upl[;f=mg?iGh/[b^.VmSI6Zm#K^sl'n*i*%s"'S"q#P'8q6[0i.Y\^sE(r'Be..ICe[&<jK>7:#Bc09j=X'd_32lE\FfJ6Dh+;
%(2[H"UY,uT,cU#S>XAL#(#e)91i]%oF.f[NJk*WqBD#_N(_pom;uY%#Kk_q@kZ1T`5]9c8cZlEiTJrAdEoW[5,R"u_LhZMh:5RHL
%*R.mRMgF?)TRl=Flps?.bM!u"Mn"O`9=R?0U"-kWFWLb8T&Ad#*H)4qd]iVEXU&\G04;FPJk^C(L2M0B%?m6$B2c^LO9N4cLXVhZ
%X:(Qsn:IVPX9B<XW/l)P3r8riM?<EN2D3(TEk*E>G(['YCj*.YB\[ON=,;];6Et*Ldh;"\h@#'H03a>o`dk[2ccEtiV8SjIUg/s]
%DX(.^*b_5a<)HaMTl:;hTNmQPMcl+@HiI%G@V^[4q"Oao@.`(26LOg4G<GN$rj/mOp$_jc@]Iaon"7bsSA+i<VI_T,n))\9(C446
%\FiO<n`i>kJ>\*Js0fEfORu=:2sF%B\=n!4T4p=sB!q)[EU"7H9RH`0a7rMQ)X)$8e\86E;qE)7GTe+$rUL0?6!3T#\U^E"d#3)K
%)-s0c'.6G3%[qPtQ[^<=cDdn9RB,ee>6GBk+g"i'-QMQRopB]s/#K^p#I2k?USU:,mBE.e1@8B!beu-0&jrZ!;uQ%1/8\M*Y1/T+
%BqjRXi=:4P=e5i&:*n;B(rtOmq4<YW[8]VL<-:Z3o5\6?e_NDm0;R;g<T!XBUW1]BW*[ZA`Mgj#<Yij&T?8NX'A\AO\@UEBh&RTZ
%:;a9IIBn=%Q@;dRp9oe#0Z=D&(K>UJnbR>dJ>@2ho=E\Ue.,cmQl=Fq3Y*.[!\VCO_aSMkb#*hO(**OI&D#\Q:MSQ(O\,Gq+0muX
%Gr9s2Wn'r/%p&m].bnucL6&P6<oDnX43K&s'Fn.T:&(G2$+r="aIt(5o@TW2V]0nl96iC#,4kB$Wm'4\eOJei">Z1%"JH4RTD'Gm
%<?XhTG,#f8S&3-Eer@B.QToBN7mVR%Kq7Bg'i[p?#ZoK?)W"9'X6H,Y20(WarQ77r+M,n?Zb(jiU._EEm%pma,NgnrL6#;8+`b]/
%,*=O=DfhXAG4n7(fakd=]Xe-n_JVcPDUeF\h<mDk5`HKnV4MG#'bs\3QU><DMgKlN\_LIs3OQKgWE];=Q\8*D:OK0c4OL$q"uC^e
%0)ZlIM%iE@8@/L_c:Nm,+T<'Qk<Xq$4W;I"A)L_9%lV=!cieG"4-ePl=krAf/W=K$:5nM>VLg68ogcYbOL:IcV*Ci9B&_U3m%>6O
%qC:'Brjn,$1DL/79AIrHeUjeB2rW2<<)o+b[k7OK3/kd-m.*-"A5F8K'"X7pR[I^uRhYp4k(&;KLV^3ld_MrF$%[XbJ6(+6N5hY6
%>b5N_ciuL<r,B"qfMIF-h!=3u;KV$_N_Km60'Ks$Z0u@(hkhp)-0#bb0C[(nP%(3J,O5Z*"b``0F-71jHT]R$Tm$_2[+ll!^Ya)\
%,-;QM1R4&^0M^6]2N(:C1TOTPaj=0af,5qN7D2X3`S^$kOFs_-MtEge]_*,ImN)D1rA1[m/-QI']Z)"DeanrgiKqpceB&98(o%QP
%cWk)fn9QoRVTo#a$Un?qR6@H._jUlcXb(9[4`3,Wgb(*_`&W]@^Wt-g\5sYK>qmo/+p!Xs6q'W]:pmdET\<<*eg._!1ilrsq#t/2
%='MtGG)U`'^'<;5?s?Nk/F76M-KnU[SDO"1X#IA","k<[f`AKO1m8qV95'VYYPLYVWaaQPGV*2X.+^C6PU,8>,:]%Xjc[RH6"njp
%.SY'/-&Di<fU-YlXHH!,H:6.0[+pG5M[$RfXftG2EU+3jFec!P[.T%$MZu&H-[nW2DET2(-Z)\CLg,pR[Y8@!P*k<b1Q@atZ9g_g
%;Gm#S)_NWtB5!Lg0tb[:\',?+=Nk?1]W`j`k0"*3afrPGZ9fR-HI8&o=pj$/ITbWqqD>_>F'527Xo5]O$FL<k>Z+!!ltS?sN)Qj[
%?$L&Q<3'.T4HrL>l.Z]U1/hernBa-`;O#Q"??g.>S7;R[;!/3IeI(WZ6h=6Y(38B-nSO%c(@"'G.)Sk/.aNM$Tp@Phh0(4(,FIf6
%6Q,\VDEHXBV4c%Y:8D2!b4:7A`jZt+c$d>SJ)T@VYtj'^%ugqs3A:iNnBe[=!&GMDr5(hfHI)C>4B*kiWJV^5L7[A@6`Gl<9Cj%T
%BiZiK1nIE9s(7Q)&+q]W\D%L5p'@lT4>^)gfP/rL(EQbiVf;']I,3Ne[l!C$B"IKY\/1-`Y1YEieETJcjMmZq(+q_f&=n`hnBe[+
%L(E.eJ)R)@Q@`Ao^tr\;n8O8RMVAW#k=2o1@s6h)nSO%2Dp;aKpDpDB^L^Fe\!VJ?6$k5cj?iaP6gIW8kJBSrdpU=XRe=NbNF(D;
%/7AFn6fVJ]91c3iG\DKZU!ZW/[?:p?kdEiRVCg`C6fZo2"oi3&$P0A*a"=Cl>CP<M[S/Khn8M-$*V[E<XEt<;^[TVF[R5EYfAse9
%Mt[q2HJtR'(\Md%3e]<>00I_k^0*N##j]>pA%*D.=i?#L`jZtW\[_F2qM)I"DTOMWT'O6\CWB/oI,Ud!3)[.1[P_PHmaQrGZe",>
%]^X:@(Lm8UmYidW_F'kR31m,o,f%WPi??c$nag+4BH.4T$Ca%.4ObijPFO?Z[5QKfLW816T;XmPKnm\)rRCD.otj'JU>[G(>.F&5
%fCtg,_F(sM`ORWaS?`tH[iJ(Kk.L1[S6X=n%V5r#o3HTS>bin;im)i.U%+/(S7ltLGc2UL3hA@DAYZj+d!024bN)2=ljF>`D`cb6
%c5N/O_F%a*g-rUN%_MCt?$mR%i`T>aE&gbHG;ptVSea@cVaI39o_1\+I/g>54!Z]K-rjNkO[TV&SXtdN!gkq.GZYH@>5Rg;&oIQ\
%CFUORoTd:%/[Gj!?orP)B$TeHQ`FE,n$*\jR_YpUqsNQ[am4-ZmCq`+-kp2Qk:j=<[/UoV]fU=\#0qknGM6F%]LqR=:XTjP/(k8]
%:ER^7f[1tRIsLuu$%M]@?D:kHW#<4k5C+uqN'1DuKKdhLhVD>8H5V"le>TG;pUu2omlmP;U$UBSXTIP0]gVnqOf$DD_s_pDH]L`.
%,?OSoX0[H7TVE(OCVQ*+c:M[3,t,LG#rKDqeF`C9<kYth?11@3i:Hj&FW<M7qX`s0Zp3GcT)/nXr<gGi`#T7*H[tF:h0G&<fPom4
%7]]7a\P@OD#B-gdh\HRg^3g@d9#DVCi]Gj5aGP;qUZZY\Snd,BTZF3pUq)'.D,*9N]u*gTI',mk6kOt=Gb8Dr]66PH3tCh3]%OWD
%Y+=tj)'>B<rBTRfZI<aF>Hkd5>UW[]:Y__l'hjFq*23d3HR`C'mJ1t*(AR9O<a,)>eM73Ih.3=#X:U0L[&<6l:a"c)LiF=^3c?4Y
%o5Qrn)cUnX*;P\U">B>rpgGpUF2]6A@IQ.#'kCgJ#P9le5<:A_X7IIibQca6rK>eTfAPr.rtZ_rQ]4$3="ao]/>(d_7qFc70MDr>
%17Pk"Gc85ppQ%c<$(uarpVNY62\uWW%6lR6"Np0P4(+pQIEY8r?eB]JHm0OYq@!WD*J1KB6WBE]Uekb.^7Mj^=.nJX)"9EC'jf)\
%o!uPI%!5\F]<^ifkcNqe`DVP3+*?eb:bS@&)?1gC-H-3Bq1GuR.6d7B+1t)mnUXI>AsE**T+SAq$L)J2j)B,hs6\+Z&/nodjUXOB
%/b+B.>lmS3GE[L4.GQ5,SpV)5,BsMt\-kQZ!%O,kGc".1#epo>%]mZlo/+*/H%a-j3TOc$:"bGnTL=1s[Gh_0Ymk.M*Ceq<^H?Q8
%#1%%7JKa6-F4]_G1[+QrQ-_Vn0H&l+L\c,[7::`3=>4nd]fXu::*b=[m`0K[1:IC\KUbA:9l[kG<PERCmSh)[gSIr#6HhpHjdfcD
%13.T%aJA7tO$5=ikf"rM9+;u9EejtK08K#l](>#-i+tT#Kc-in-2n*,oI,\q7h"3%]>[c8!Y4o6^i's*!Pk(ZPP[achg<]t5ksUf
%pF6%\/40%$'R6)eQdDYgDL=,B*INTM'+\8p#Ya[sfX9H;!_cqe!'LFTV]=J>E]8'V:I^BRLr3p,#^9puK?oX`:nGQK2N?YJ>oom@
%IDh5t)0tpdIH9pIicB?`QTrcL^8=MZ$]hd0Zci=#=)9Gkb/\O_*5D:,&0]Ar&Ct/?Cj5=,I[5t@r#%o;!HZJM6R.bK'6tW5qq:Za
%>>$$04bciNO+*`A_J`ke(iC@M98!,t^&;3BpDoUU.,G$HaCDr7TQ6StI`IChp3;)a\2B4_T;L;kp??38[[fO&hJ]#DqleaeB182d
%]U]K-*k'B==,$$@ME6Jd_qSgqimDr?j77Nn[)TsDq"V!_aF,[3`6#3H-Z8_=C``/m'+jkb'CsnqGm$ZuL)c?f'd_`<b^'/A>?LC9
%]qQ0@8.K&&"+:?&SnKc)57`qN2oOV#L3B=!F2WL@mc2qM-7<rl5kdR^.(FVg44gd__()t+i0Kr/#<oX"@%onQT15@q+27:9kk)fI
%7a,:^!VF89h1IVeQP6EtdJID8UR,`;q=_2^pP0\(B,]25>$IWNS;7n6KOt.d.D\a]@P[!+IYOOTn?p3BJgpV)l2LB1%g=K"$!+%s
%i`QElgY5((@hE]!DdfMsjTI/E6)i$9''AO:RWuHTN2MPq#e]-n31^&Yg:9OW'Dll0Okl_dV;+G,W[-=V@NR]A<:fXN0Qa)\n_Hef
%o6.iH4IUX!?e-0*mX`3$=AW^HiOAt33]Fj4QpE_#"0JTZh..`(rL+"(ZLq0KoDY1/hK4V8GKQ6R@'ZUpQd'1?7%.HdTkkP;>8]dI
%p52(?6"Z/96JZ'kY3p?Y<P*a2"_C2'SEZlM'72,'?*'93,^J=m4h%j]a:\V`@M@$FhP8s`n:#MPjH8APju<f9IgBSuhW'B=IJcP[
%O3W(e$"m1iJTZ9"fse"e/+2=0@,nc*pu=U6K.-;5fkp,H^=c)B.tHb]2r/O7DQSIR4$)2i%Ll"VNBnXllt0V2Ku-D7<QbT]0rPSe
%;%Pnk6o%W.C!LAS[./]+<(nA^SRYuJ;E#sU-p%0V4`[b%Dpb7>K)'f99K0`4,ju6biOS5F]#["qlgEb-lMC+^%-S8Vc*hQD$<i[q
%rTt`nDs\"?@!O):0rA05i.BuD,L&6#++CMBaK?"`S(D:VW2$kQ"mfke*O=FA%b,E*2ZQ;Tqd>;dB-lpSAG&$b)@ioD4[/RuO!1Dq
%a?gc#eS7,/)kUE3MIARK,\a]Uc39*IGV7QhkEu"^4)cR&VhP-Kj""g6i_TF';$UO.nBnTl_+B33/UKVrjL82bjrq#db%/r6KAgUs
%)a.R\$/=-eNHKmT(bJTD$YUc<!>lQsJDE],nmFrc0K1e$!G_\T$umEB4@;oGYI3_9iD4OKX:iQM`:L6/CRX(j>2PJb#e3,'UEVk\
%[,596QuX)t\Les5^gQ*%_f#6OUQFb71Te(!k3',IX>gniPL^U*g7``P<Gr3m*5IBdH1`/d]:.S%r0+S$"8OJ8X7J"cY^9\t<P-:q
%:klgB$h1q6NEa$lo!)qR4-QV.g[9oDhX/U+s4$HShS-kYrNQ5<k8DD_$6$pS!sdV<?i70AQU;UrnSeU%4*P1`5F[?5rora<jBFee
%%Y(9h7ph9mkp:?[B#Lq`guQ+L$k.SXoAJs$%2iP0]Z/K(l[dnZf=IrShc%YoMj"d@LRLC#&\7=;fbc*_41\7tKL=pEE=OhkLWQ=C
%:-IpFHn^u^afp=*<AZ5E\A0(2-&,9N!aW,?G[0&/^u1TEQntj;E+hL>U\TMk)SS@C6*5#2=!0*IMGd#.\:6;i;1Ydq7;pG.]_r9L
%]D_6458'MGa,E-aE2+s^?ObmXbAf:S+^-3HhNon)mi=ll]!QtIBKaJ$A!@9]kY690&qG92ka#id:c82JhX7PUcJ_j>h>KK_J6E%;
%^"kl(lK$[er+O.;mec_udPpi"d-`oT5Q)XO"%<7_Uur<(\j!5gp2U2nL%r#ETS8=W%*>+d5B=HunD![<i)cL$W*7pRDq?oTD)W\Q
%?%`4q%@i!R\_kXa0Q7+SboC^Oj_miP#;^>QD77,Bg4@7d"43`ETA-Y<S7Yd_>$ke[6fYAV)0l^+cT.=O#1#S1Za.kgKF5N=,?X*g
%1eWE(B9?>YBt.8\/M_n+jq'7,MbHZo1LFcK2rag`3f"p)NQ@p/r]olprH+<FO8R+!oCaZ+4`c=>9QS[>KC!Z.r0Ag%5-C(9g?9s*
%]JZjQcA;@"G,I4>A^:j-_0kW$qD;]dcub=V0d.OQjB,eXj*0r((g(!%HN^=!-$ON@T!WVJH]'s\G90s%a2nqEc/OAa$MZ$@[Ku?Q
%R.1XGBhEGn*l^_H`_-#H2UL`6g7g]hh]KDZo'`sGBuI+C1ro$B(C&0fiR]$jOb*MV!dtsGJ/W&]d5O\*d\53jZe3#uHp1oIiu3[o
%-8<al_<2#)ATn,$E`P2J:"A[GhQaqakYo35#G2Vhh!hGCYW6Z5](Qpf/sAqbR3)C]j#jqNZQku1#g]O%/0`;T8FeaPNk:F/=X/*E
%#c$LlLe0KoR.JlE0Zh<?"#,Y$A7L;g!:fuNCcoU9U4[M<@uf"R0ZeQ_g>%m.N%dq#Z80OL5\ti11/-+09*5*Bp>34#NoJ+urpI2h
%%g$6F6L%T_An=shGA+.&@r=aYCqud-0h*a2&=Q*rT&9OehE/"qVlQ;Q])?m1=YhjlO](AlWQ^<[N6@5%5_1R>)[B6PcZ*g0L>ecJ
%Dgl&c>JpL4DX_KZhIr5Pdd_SFqF_pFq+Yr-NdeV</\4G*ro)>Z-B&1ZqRW<NQ".T.fC8BYm/_]BW3PJVs7l3;+8fnoZiBajq"r#M
%3;2u;[u[FtegIND79o?:9-<Q1q1lH1i<KjjGQ0cij't6ibFNHPLrC$&n#`dB(U"jo5,+e1C3]X!D`]psf6lr1^Rk&%n"7-#n?C98
%:c<guo[@_R>f`9lgGhp0MOo1fe*$.dd=2$GqhKTa*IdLqaW<o&^:815&*aPC+0fQG=^3jAC5;S<H_:3JYPJ\,iV'j`e(&_^5(!-]
%Rr8Y2s5WFSs#f3&=204XUVE2ffY<DtJc1ci*c9;RIN#utZrXO5l-I+]U<O0Kp"/g$/4K'opd88==4:UjIe2RJIoTa(ld4OZf)]g^
%rISsTI=S[7DuB7t<'Bc<jWaX#kP(lCfP.:,UW!D^?AJ1<LKC\U3o##BrRIlnrhjq4orCkA\"t[.hk&Tgn4NKS:OWXW^\3Fs*T$U$
%s-\@aEXlLh9q,M<:T*a]msQ59cXF?o8+43:RP=Y7H;8B"^\r-%*p^`H>gcA0@j.)Opl)<[W*e!FJ>X0Bd*DY"2D/.)N3eSaI,@WD
%\F[r!f.SnAV-(/2C`UhXT0Xsoa-k"b%Sk>(*OL<YM54eMpGZAJY2j>7%\EWX8N\)%2J!B4GBG@+:NFaa/nOY8"561_p+r#oq*ZkZ
%SMl>fnepWHOfM..4QQU2c0@H8T.u8ekr\IYoAAGD%s[M$]+9F.:5eg6U36.AZ:PWfjVbCLT!=_sh17*,ftI!sa'VWeo'W\GH>OG6
%m]A^e5/$FP06TR(:.[NWD6E7S_T-!<CM-2lH):2f/8;"S#pnu?pXiAsO#<%?8UI1gb`[.X!]i]sY+6nRkC/9Z?.)OKmZ"u/kg,&L
%ICXgHF-!.$rP&)DpDK0>52f0$BYidVIGVqfDCM(<'8mNjoQ01,cSLj=Eu2?^l'1$&a'BOZn(cPIA`!<4r>a4qcOl7ckNNrS?b=,]
%(t9;"P-MuB((D`tM!hihSeabJDgaLnC4>Y>X)%S,TAdf!hnI>$NY`ges,;gJ<@HI)h8ep)&b++OofrE8/h/MO#DF7)e3WW.cX2Bo
%q9GT3oru31YPmjPk9$p[XLjnXmH3sc(:5epW/@BnC"#2"QX@><pkM:PgWKhKo09=6S)1h=s$M,+Kl:=&r65%HqR8+@3:QW7ccotC
%T76[q`o8'U5E17B3t0H'MYYG<Ps0Wddm&;Y5em7p^mo<qb+7Z-W3<tLN_&Ah?DVf:m.e6^iJmS6p&97sg3X-4h1mp,Ta4/l]SfM]
%0_dRjr$9DSp^mC.?i2bh8't$)2dTOrf4,p%Zm`;@f3WaqKdfUgdHgQ#^O>OX&!$X4pr4E4IJVtaUF.&_ncm[G\HpD)8$BsKn%A>Q
%j$2bG;a*<kBmL-'G58rZcea*IMpKSUYC6??ZerIlq)9C;Qp[8,6fStIJ,*h0NVtUi=oM@7R-#?kN)QG?Vinsm`eOdYBqO70Wq!"?
%?gQ`YIrPpI$EYrM;q<GtJ3Tmp:VE@ijpT4^rUk5]jB"jQ)?0PGqsNY'oHtKbM`:KJr,Sf\rB)\3iJm;uogA9J5Oqc?3\3Q)pHJT$
%RlBW?040.$]CkO`7=E0_Y9#pY3aZPmo7*9Kc5GVJc<oqa^RBUum<u)%(\XKUT>HHb,#!KDbKmlrD3(rNnd&97o\j#(]lj51NU,][
%>Aq4NhQ>f6keV9,mXG-4^j=K%m#*Or'd]!7M]Um%1/4/VB2iVP^Q^KJ`]DGGe@_;,:%$8/Q($;XV+gJ0EXeR:WHj>3RfE-DVg^Ma
%)Qo%8rc@\+TC:V7nbjQEqt@Z!=)L.nWu%B(e]l_&%H3NJhu)upO*C'll0eRsnAYu/59Jdrs5;&k=)PbGn\Mj+QMebYUE@4\Hc>"l
%J":.[cX5;!LJ&DG<EN,pif1_'\%dFUf,q\JkDd6![pRu\r*;ta]EH.p+>l]']r90-NPBu;G@:=AT>(<ro,f2!p;YR.h0Y8N\4,qn
%LsLN6*.RtIhI#1:@Jhs)h^hR_=*G1"mD&SIf<=$*k9#3Rl6#:e0:-lhr,ht@+$T.3^%p\q54@A'r2n_'HL%EZ?94etXD(YZ.\`NE
%9NE_@O&JQ^>=<=XIIES*56'C'cb+;ea7o(q2a$-R$FZ;"Wlm4HG&.I)Oai-HZ"$FOo^pSVM&fg;J*,2(M&fg;YPh*Q-[';4"jep?
%S7o:]#AXC\\H0h4)]!'MEm)Bd)@]m1heZb8Da(l1D`0?B1S9GPZ\bAlh::P8Z\bC/I*l;QM/dD_J]<=^.[@eorVE-->T^R:n,2^`
%nE$kR;"BDA34RN=l2JM+dYjg2QB/Yq:XdcG]^U)mEsOGQkFTleo*9btUlBm!qP3d(e^$W6j9`ob\N4l1O_\fL5PW(^SBnp9`ar_a
%Pj!>;I.5l^M>kHLUihgo(#pU@Yl1t2fZ/rL=7Oo*Y6UQObOR?VI/h1"E=7-bc9Bq'd">r&F<fc30D@c+q9I4u*H`^Ke9AL34oa:1
%%tD)]o./V[mf.DRm!6mYRtKVrdm`cf=)!O7Ie_=*W)IE_8-Jpr^LRNEk<\j^mpH!d46`i7(3%1RV<?P@s*1*o,@tL$J[YF8*r<\N
%(uG8To@Smal?KmkFk8'f9Xi:X:To0:[-?<U?@D6(<)QBR?h05c'^';1Y;k.pjM-"U:/PNI*5)!hPYf#8+t4CZ](XXR_#(T"^3aqa
%):oCjIHA^Brq's=STaS%cTLgi.rVopkmu,-,[c+Jk,l+AZc[3/GFuu9GFn?XB-4cE4la/T.oIt*nZgo5K/`i$_I!*+$\&XuLq[j2
%]-OOMNkm2(akYM;(I*<Oc1dQsR_npd_(P0Ia[1TN%f"j:,u9mh_q7V%:>$d\p;KelZ>Jk!qe,(D(SS1a;O=k2gqQD&NkqcSKf-%e
%(?*S(VQ\_u0V-u7iSa<GJ.ZS_YeRYN#I)VR6N6\hB,?Kqb/(iA=QV4&Gg8nIL>mW_4SGcMV=OonDk82']9UF.#TKs"()!$J4oce2
%(8s$]EGb"ZkBOcdR==P6-[`r+JEs*SMZuiS`KT9)j%oF_1-(jVq#V5_5Pogq"Fb>72_Y"?h>*]EB0IQ1irSj0B0G:p[I^!];\&U4
%a]2QP-[WiZ.%;/7:3jj)GN?b1Y3]drIE$"G]?f+oa,\AW%r-Z$^rMFmMUmc)k5eA`k48&6&^IYM3sT:4.=*5IB+2PHce2+?]`!V<
%e`Ug62h18KqrreFr,Zcsa7\VuT23n\Rb,f*/"hTlm65%KJk+tc6;$TWT'5OuHork*IC&g0m\1BJ<BubD4iTnLj1iO8Utn_ZI-f_S
%?[D2!\t8HPb;l[G&2t>c(@Abm&T9ej9.V^[GYukGqko=jlB4>H8)eefSl6eJ\tnAh%Q^cpU2t3)l`374H?SOr^\lK'DuJpck<FIf
%7rq*2:O?aLj#[Ki^A\!pLngKXEUr]<j'H225J8Oj@s0*Sr:9Y"4dbj?h>?VoIeN_Hr9BhkDD_2[q:f9SoQRTsmaGAp=7@*h$T`2T
%nE\u:(D-O]rcRq@44-:@Vp2F5l*"IlFB?,dN)0MnX+\BWYKiB@b?*M>SJV<Fn=,9dp('f&gDcc<M:^=LkGKZhgi$Qrg[oF?i_+XE
%^AIY]$s-<XnFkfs'5?nWQ__=WN(nl+5;%P;ciW?1GBBli#igu:JrB(+LC%R<R,."pbLg;>+2#S#5p$'oleFi-ZO=4PR(U(MI`2Q\
%hitFg2p=)Uf<[C+8`5r*aRt0MVjm.'r&lmST<9iQT]1gAI5hIPs4Vp6aa6(tYc\OUf9]14;_Nt@9WZe$o)?J)O5,'<;nr1RfoKCs
%d'*D^Hs"SHDnZ"Z]75.eh/?VG\oI+d(8dI0>_ZbWIJ)nd1j&Ui^L5>m"NA-)?W=S-N;EC7Ri\^3qQhf%IJE4fqpV0ia.g<I1;7#N
%NOE2$hb!32ht29r6`Sr!mm#eVpXnoMrqb;Bs8)J>mb4;IS>.WBa5=RNpi9lir?a,qiQJ.J=!@qLl[/[.brhKaO,#*U/=umJb?+W"
%Zi0,iO!l[ZR0R)BiU-+aZAWonqpRJ[kO4NTnH]*X:V9GOE9jXhY.abMG\cc9pYPc4HbZQ>/H+s;5E4LfhnGZoj$^?$,B4p\III18
%7L/sC*$+q`),Z'7On\e=c26BLF.P;f)]SYKmXq/3acGMd?GHC)GP;X:4M(FM;niZ@oY6sq0E-IFq8uh0J)-BK_8EIKqUO+4q<=6L
%>rdSeqUNjBIXLY)G=N1Xqr.OF+!4d6Sn"D+GPK:lDd7Seb13]p:HJ9.hlo>Yq:2l'03l&&YL\,5?aGeuA(L<']^SuurMmL#)ZK?]
%J)S02j$2Al1?$AgG;'YWm'B4Wg[FN*s0/d.\e;S)mp5b\(Yt?pT!EkDaC[4<=8%4T+1FJ$C/]BB=/h,VM8'5nAbqGcq/9(-b3lEM
%^[&mM+0e$=-$I9,&7V8!O13cFV8SVgLR<EmVu;cqV!#A0P3RKg?*Hi]Y3`&kHb<&0jo$e@_fGM`_f<GgDRAB:Pl6ue'b$qAifef9
%qdV)6b!UP3m+8=7VIAA2YjeDn)).=>V#>;;kP&99n,'iO==W?[X^/S[KWh<P4G:r;CgZW=5<=b`a>*S'blpJ29,\076YH#O\,6+D
%,):qgn!)fHbbuTshD=85^J?`AfO/XF7u[->rYT\'fC?^`jflEgWJ)FrFUT7Jqu+;H)Ju#YLVeLt2<`e+5KAef*m;97?%8[]h0p>6
%IPg]oZ0Q8c!Zn+Dl*,koIN8BZ"tW<P-1:A<T,dQ7iG6GQfH9[GCol8u"FN9@^&?>"`,D"@@WU\9X\Bf*6Zp-O@H<gC+8-acTa]Vp
%6F(1Af42:.O5SX]?kS!DMo!u5n'fm:P=XH8R.`nm)RE/C8*\j;/"BGCon[+b'okHVJ>%WTbEYF@pDb+F9hp"_2qsg%^1=O?9UL%2
%oc4]H/OnKXbb)=$M-4=8:>'.`?aoLr3FR9/X`]MGnROkK3hDXPhl7[&bo$caN(r2Y->CkE\E4bjCiY\jr=VjpcX.1dHWE*_`h76[
%-*uIaB%ohiHPf7W%XYnGeg5JAT/bO2WM;%7Dhfh6W.\U7mqU7^pS3RL_J4g1?!srYdi/%)qd]#o]mK27pgD9s8RSO2A0(PHW#h*b
%-^c=JF0TlJ7[OJLO8/-n7EO0fPG.peMSQrrmEaH\gg2#5rP9!/Pl^%o5l=;Lm(h9Be\N$$oE0h;M2-L:%!K]]4,>ebE#MI!9I<F8
%$oY6$h@=TJCjfc*VqqoZIBFZ.BtHu?M-*^*CURoD6,NP0XP"B6hKpsH*#$$ql0PGkQbAPVkV,q_46#I$4[lFnK[Nhf$!kJW*J/HC
%;nX3qHF"*PSOKKq1ud$;,5!j4e)1&-+(E&.Cftc"fLW6-6arq%!oj&4fNV2ji!8Tg%O")e0#p]Uls92t)p:-lPc6eh>bOD_g:4,U
%5":QFdp*V0[Y^(CW9jk%o+>'K<'fM\0TFu-Gd[M9!k#6aCrj'A*%ZDjBp,aTiT&87YTJ1NgT-b/kN-?SBfnFfHM=pud5K<oR$+qI
%q-n`?3>>`K$!GM8f")C"\X[oO0=eMq9g.3;9%T?aWQ2gcluMA.1i4:Xk71d#8fh&T?[R)Uq5kNLo%PM1<L[iD7lXedEqA;r5CRhV
%gFH?4J,Qc"1Mf8OiP?O^G1W$6@EKla87#&g^a^pm%P"m(?VL/T'0F=)WM"Z$=#b2s-PGjc@m:@=J5^:9Ua`,]a2ZspiQg70eWan<
%K=66INPYd9f8Qh2`N:2$X)qia&%53<V6E%@_q@G^@!hASdoK$JDJF"3(!ecU*<stj&QaVL0t`tRWBt((gc2WsY@5R&%VE:gc/K<O
%ea>[Y!=DS(5B\'.R]V&,gl.)e"sOi*NoA'#37=IfegB@]j@`KdOlMYCG5Ku$fQGmWVEJe0!n:SbZ%V_4IB9K\(-#<]2&PbW"DnQ_
%LqCMt),h2lDBE`1^ce;j25MQM'5^qU[>[[@jq@'9%G9ht\oD>O@?qirA*Vqm-S8ikAAG<IT^Ba*.]1p;O"di;Wfq.8T'`3u'A4!f
%dsSj;*JO^"XV1Dm-6Th\L4YhQ-51Qh@qN5I+a,bUqe\Qt77c)Bn)C+HMoHoL/D3MuD>.L]rhR4>%#rY80N?eN$&1%&R2G^pBl^j@
%c_bO[I`L<sm_,Q[g(3DgNj];gHJ$)nHOFc'O=Rs9;N);U;j(bbl(6R63pfPLo%H;MrrAMX;.2HP(!\j3j4Ro<%>WmsNmsuOk^o&J
%6<]E&"jZGD]qGrA]Dl8lhHLM[BU(;[hQW:ZY@8?d`AX??=.iCQ0o7Lu$O5oRI*WVcCm0>@"C&Dl^e.i/dQH)eMGKduqp*]kX5J7;
%"q46SpV!n__4m;tNg-^\bBKa,U<U3DKAqe)Z0YaX.Q0Bt4;PAW>mG?Wk+N3[kYr8.:F'g3:U(%-N'thjC5aKY$#[[Z!mM/3WnU[u
%^?B0RBSL]jQqF3V_X!'*G8TAb[b=qAjbD,meP9;EC9^iT(\<J$20EUhaBX9/bZ2NKN2,&+pd8[1?@\%U@D3.PXsVLt5.^jNH@Z7F
%RkNDNZC)M40/FEN*)0PqF;aG_G,NE:Tm'OB\X5Q;ogsXG`'k$F$_O7hR\=/%UA_IC$2]YSJJ\:sA>\Gd1se.O55`cgeJRDQ_,K8b
%?r/=br>%MJm^Wc"&K$98QF+mF)f5ef)`/pT4;g!<kQDbPGRsBSFhGuKn&??FQaT-4:3ZQQikr7(/BpSCo'6"u*=Rl`2FBea4nq\)
%plP@7l]"9KBf'TdaK<Aa/:fNaQ^GS'abpPL*&c8poGqliK`p'ccSG-5Hn]b\pME[PSfG:1R(Mb=W-dAZ@#0*^CqJl<(prAUYADM!
%SQn3&o58KKghdj*F3<G<d'C))YK.!.ONRIVA2<.lgYE?bUK#+uU7R^XP&S*R,KuqECRW#ODj*eoFdWF[%d#Z;`X:i=6dQ%jH+#a*
%kT]pao+AN6n0+K9GSJCgbC.^EZ?+V.=BGiigpcu\[s7s'c5V6@%R3a;TZVe]ANic;:WV+rqeBYL_d#JF[!]$hR1>\s>E6uq)S'!V
%#D5[QQ(^OS2"7QiAdeUc%"kED=]CkKa']5.:u6+s'7RU;0VRe4;&D#8oBt]/<Vr2CH0CV2keIN=)#F/\Ad!]PYfmLQl'1e:TugfK
%)D:Np+p=5[hMb67rP&&d^tYeSWY&o)n8i#n(S7/=YGpk>Mdq]bIqo9:RHNk2JU66D^=i.2hUCm%#`;bAN!%bb@7"F_UA6o0o8597
%U?k>@FgIbUH`AcdE1en?#l?T'0HO0A;"jYkLDH@>dL<Dp"Nee\GYS*]5YarD6.=hjk+fe6I@"mg`kd*NiNDKVZ;Y>T"TL:'arBcJ
%4kMF$/bO.3@J-@S81(o:+V_Pe\8#V]jjGT`@40'bD&reL:0eC[dBsJ=MQ\H5PI*LiqVLA]nnLs4;.JIRrB5-$9ER`/H\B]S,>FUo
%[o]M3?X%smUbqr0L!UZRGoNolhb>2[+@4B@LlKiC2MRW=XN,[2I`>'"qgHuI<DnU'8(:e7Xssk7B`WJR1H)(-!Lm?RQg@km=Ju_6
%QImO51;_V<T5*\-'>Yj4):mVX2iPuo^0>7@a3+t-+&%h4iemMaL]"_),&/L^"t)iP@OY6C^BOk^Lne*,G2kldRtBH,$keq%CY"Cm
%!e/XBOk+;"LujV:rdm-4WMd2jU5&fZ<rAXuSfq#2'uLpph[Adsl#R5l<SYsnjG.%`*aue[$;lC[R7CA_"^2!TQ+S(uD%Xe\D>+Am
%_a:Tr"3bQ%3/eoJ?';GXdXs[@U9;mE(a^KbW\X3M&Nhb**Fh56jS4$q3pfH8\p]*kcE;fqeakWP[LON@LgjrMcgS>KK*c8cYWj8P
%A<8YAF@#HU&RG\V8*<'__O^$3ItT<F45LI?]e/-Xm\k:nT3Q:T/=BFj*`!fQct*8+44jEj/M?e($nrb"Bd[_fF\A.0#O/;:'jH30
%fB:k:EpW@=ULcTuUX**.f'W.WUId;7D2iO+&eERWmRp"Hc:i-^Wr5%HK=HA()ibsobR,ds&n$f<c1U%F0L,_5+:VM_%T2oYCMt"e
%E#F0VNju>g&m6,V;OuVsVBA#aLJup.1_XC>ilKsGaKm<1R2EA)H.9#$KEC-mR4^?OQA9I7F5Xje8gu+B+XP"eK09eBa\[XLe?"V&
%Qa3*Qd,XIK8dPsMFGDA.QVAm?p'uL/_5bVLXC1DGniUrdh,(;qs6nGfm^fQ%<sgkB.0Eucca7*>n)K-]mket>)[DFLDd:^"Lm/bf
%b,kN?FV.hZ7Ua"['&939`T=aHdG)<3Udm9q;F76J<m7q>:cW5p/c5Y"PC9eJFl">;#^t#=bqs&MKde5*;"JFQP$M$Mp%uCjI'$A:
%`6UA#nna1j0!=otgMb0`CR<J359MBiL'oPF"GrdEknuiA_)i-,Ba7guFp!%om)\QZ]idc2;Jpu`Re_>6ni!cae<'s9*E`TO%QRrR
%3lehCKK$@+Q3T\s9@otiJ7KRAFU]Zr'@T@UY/+n#hKG`2U.q@OV4K#>"+QZ'nuQS"/aJk\;)Qa[6<A!0U4>0^N,bt7E"2A)hbc8D
%2EPL'jsPhbV,1f)ZR^M($I#EFe/WmNR]XPSFI<qtbBQ.CY]Lf3nhfjLqd"WH',K1IN(5Vi*(?H'3?LnBPm2ne,g)=b8p5m-OQoGF
%nVEUYgf7H;O5nN2gmHa]9>+7W+mZRVjGts?j:C%qb-^O#=RG,,JsaTVF9`4Ai[h%#bfHhfqe+fDh70G@gaKe5U8Ie*>r]jjj#d?H
%&&-ljS+_?XrHpVV6?n2Xe=!;E%l;];hk:4;gFu"E8nK86X<g7?1f\-m;UPUsM&U"%mNH_R]H'288@%K(5"@nW68&Z]Fbn/Sh7"I-
%2uqfoN=F&'fiXQ'Z*>d42ieu(jG\AaH'kij3thm6Y+?4%(1sdXo(\jUlTfTGUc9%7MT:_E)O/aZA-F#"%gGcHG)KkD>n7c>,-J:l
%Sh3b*QnJOcU#RfZ?KZde,'R>=#iFib#EH3m(rM1Z;@XpF_/*1;1?^pjd>?[An>+,E>hF><OI.*+P\.9q2_Bc$/FV?h9Nm,iQliY_
%l/;M]]1PhIRkjbpo>6dWMp$fm(GHpcCU6AL**(@4Ne#$DkAgZ!eG#^r];N](/AHOi#j!j?K<^<@0Y`XKAY?YK69,1'%^B-(#mpqf
%Ef1hdh#3h,R5D%H;Tp')]upcNk0Pc9\V&Z^m\"9#(E\K56Gh*UC(YHO_5/>1`+A7,#F.r8+>U]I)Ci;aa!U\6ePooLW*;@'Q<]ie
%B-H;!G-JZr_NI(Va]#tN7$+k'^3T!F_j.:SY'fs-X@OHT!khlo9'OTK.8\T2SH:3>/SgmY]fMI`P%u$.h-V0'Ldu!7E]u'WG+IOd
%<2J4[euJn/!'&F0MmJj+bE,e<g:eUGhH_6'"=Lf3.nu-+*T1(k2+edOs4YjlIITGK8gS&<#]VcopR,*\nBAHSl'\8O?)gI!JuAO/
%CK)6/Tc05Sf7nV'`L^,X[sN\D>as1HmKWoF=$(M51KQ&;1#Jg"6"k^KB(>I].X[Cr>O>=W8srHUJRZj>:$2\)V\8%\<&(2oZbJVO
%!/F-A[poauK@\E/1df>(f&1&lVbV3:=\Tn4E+Z%_ThuB0Au%qc7uN'THl7*m<,NP]Kg#V$MZL;@hQnr1d%hl_0Q"0iDUYHW?lmH_
%jWZ?42MEo%B=Ooe%P'sX$sM!/S9JV3d%s&h\\5bV:bGn=5f\&=c^s(?@iq"&2@X`OUc3'?!AGmL3_C=optV(!'oidi<sc+X-^.p,
%6QW#BEnAl&,JeCW]i/roc4u>!I?GQXo7fEPK7>@\j-h;4$EkHI:1=,A34klq,-"=.nT0-K)29(,l0DJ2"==U,#KL:L3sqnB<MM"E
%:toI;lI2dYA_"E@kS:ME<CFlj+(Zo%JPN]?JhW4%i\o^Z6m\tS:ekW1'0D[1V6M=%2HJS)?#2.0O4X`K.ch&F0@?70mSH<?h.L+&
%WVHt3h1OMi*$>1C"38kWf&`=335WO[9;J<i'q0bW!+*.XBYP)_?HgN#'[+.,;\gSZ[\f5T>U\MEHFV&/43'Vo3V5IBc*4!5,aG'3
%64`9'SVuaeJ=Qb`C<E$`<OW5'J5Jojpd#?Sd$f+?b'4UYHgC&HPh&:".3tS*Qs!Vp+rA-+%r"B2Sp.ek8/hfpUc*T'!KeN+9@8a2
%J4NqgZ96]g86bf?@\se]P(Ogh>ll31??jn25ihLR90hRh"<C4ef7rHlc[@N39tmgU<`i/S[(1_4bK45u[1E6(jR%utj0b>&O,.s.
%FZ"@CN'5@hRQJNW,@=,mn_)IB[jH@1=AY4HRaXMu6lEReP%[o+jK:#3Hg$!_09f>?^LHSU$+=6GSL\60WJq_`:_S-O9;&95i1W%e
%m!$/+bo8^n"Nhe41&A.?LY;fj/b?\ALY=B^8OcKmJIW-;)MS*W^nCf(Gi>6\i(uUFPZ@,g^9&h@YZ'g(BE[*:%6a6STlMaOeDaN8
%J)QeqIQYD:M"AK**Gr"a2UmL\)hreN.-Y^*WaS8IREY4)<nL66[<*=1CoG%YrGk.[F,:@^H@^EApA]`6%]^3scPb'\k18.q(d4ZC
%A.KPQ_b6!A^jjN^K)^/R-X4abE'<!LNWB;:*TE#6,Vl%&KYWK\r6NsAjCG>3(/StL],R>\6_>Ii#Z%5_9b5jne"gs'./Q/'IUi$\
%-7n]nBESaQ&JEatX#%Nm]tu9H0g.=$OX&:2\_RA,-D)#>SPaO,aJ813"fdSaJLp^6TIh9M9Ntm*[*j`M2,oTnH,pFE2rX%(:Y!G6
%?WlFS\2TudS8`TjoJ$.,27SdcgJ,1=Hhn/H>(Gos-U(fIaeST'Cn:OD6`LN1SaB_tS9^*r1BB7>?l3:keo=Md+"O"Q`d*tGfU't6
%#\='P_S-/;6Lde%d(7R[ouFU"A6hI6fiUm]'6dt-D[5Dbf#YFQ.[WbNFGAB2ZD#+Eo>[Z+4jZF^pr9m>aL[lLoj0=&BM?p/&L\g^
%lWar1DShD36>)r^.5dn(ZW5&pE:RG,8FPh.S$gn1;[`j5PTkBDWtso&Su!+p!DdBD.Ja@['i;h[]!O$X?*545Y_Ia,+U]qNd+B1Y
%DD,JB2D-g9/Eh'8OT5ob).DtU-6/F`rb9$nCNX#YFF?(Jg"V6sU?)UJOTFb$NH3WQJCcMd0aH\-IJ\Y;=,Z9k5fsP>]9@t,Ri^N-
%!I7l:-QmW_Fd0A$,bea=8N;Yt*gS[>NX0(QM'\./(XM1#jPUlS.T'<HQM.Rj._;h7C"NDF>@0a&VI9STCIIP@d]bWC[sV'4EDFDl
%$?"B;-_kH860G:R$/SNFhEE'+`Q/Y=+Uj$=?A!m)RD6#'Es%j@0F!_k.sujimgI2^7uJbF)S2*#apX@Z(adL3KcXmNVOh2Y-S)+H
%!1nST&B7aJf?g0;b8'2::d52Fg(pOY\eE4cf!g(VnMcJ!%4GQU1;AQK?0\A&O?+lO07&KN_\JU(+mlu]m+*r12GP5.NUA>cG(VKs
%82b%pSSW8c,M-Om[<T-oK<"Z*85kY_7_Qerq?_,*'1/T%r-_hInm13!E[,Y"C"+n]6fOKhP=<p)OJIikleHi);J-c-h='o_-i(-M
%^HlP!aM*c']VJkHCm'1E?*DD?Nes';.Ok#mKa"go[`ithjk>Ur`EO.V1df%uE&\m$9]*6n)8(^j1Z-oof0W8D,Tq6+/2MW2#D_0]
%R"?oDhCaZ$:*a\rKPV#JA.ut55BNS7K!:HCf=4Z^W,8J%TM=41foY%M;[*-,;mCb(:7erW"`GC+c""D7i_;H&-CR6KqC(C^'1eR%
%Oj_iXdS`&l9qXljTjV[KHEXT[?akOI6,WBTWUc(2`kd/>$k@^r!#ppI9d=C[Z60UT&Z4s)Z*]_nBl4F>53<]$F+BjCYX@f3'*C+g
%77)&'fI/5C97Fc23khOu`#BS6^d07ONX62oT8j!Q/ht1Q"E<CE!X3MVg$MFQLD$YJUehl+(_]r6%Yrk!</fZ%_.2FS</f%PU>#!h
%M@%AH]:s#D(`Ve=BeNjK4;n]dS3SY,l2-3cBs8GF(L_WVYS]uE.nc8%!'aZ^W<j@#k!5AW;L8SWiT&:XI<9Kf=%E8_$"LgA//qX/
%LA>iDn+g6fA^dO014X$iTl`"'_&aTB632)[KaH)2Br`5DC=m>r9[[PL4F/u9/M+Q_<7!?-9+P74N-/3(H:2"@/$TX$f]mmaBdkV3
%fWqYq@HkU>0r>]<;J*]/en8EBQQ^9i/M'&D?]epD:Vc&.k]j'R/15<hItuh@(.t*nASZQD'h$$A=&=IUd-9g)EVJ`-BijSEok"D%
%f2qEC=/\o#]s6X(WQR;`8Rs8l)'[?=^kL.WVT?A)-^-k&Ss;mP40M;s:gO!*hlsDrp84CMOk29d1u1"_L7g<,[7b\=+14@1l'%'i
%:'`=)0D)i$B)n4!gsD.f%7%>o:@5-#Qp\olR8+]5(*&qT?06<!"&PP#B3e9kp+eN1E(AMHZ=ZXoi'k.,D@W=BWAGsGS!Ju3+DEa?
%^A$+]e$/q,+dMa]JmNTP$'.N10ZZO6HZ4q('IiuGkC&SAc;[M']^Cn$"s]&/9O0*QH-]uT8thu,ea4.%&u_<9-Pb_j&)1X:78c\&
%&R-Z'4n`Q1?!<a(`B-IGN5\_Z=u"K]!J03LkZU@c79`03O4iQ^MHFGTZ]#d66\"1X6Q`_.Zh#2>Ymrm7FDCpA#=^2fAoK+>DkM@1
%L_qb=.nXE]R,5oI=01kIB:c([_.,0fY!9\P"??g1J0T;Qbdl<,'m_5e_ODqV8-U*!q/M?R=hZ_sV[Q4<jnbZWfm;qOYJ&Pm8?NoX
%s5#L*V20e2b0;&'=bK?$YWeAX8U/:X9jC]42JR,DDN1aWAUNk*6\"@.EBJ#cN7[J[[^TT2*[NRu04S<VefekV2m]PZm<cKga=7uC
%Of:[Xi79^1IVYbQD68Tb^@`s[c<MDQLCd2!.4U]8ETS9Z;?jFr<BUCm%Q2h,k>T%=?o6%O(U:l&<YfE?0snh]O!FB^FpPK+NJ[3W
%J/:[/I`86R,ASB;/;@3KJ[+;2JIts8"-FR86H'/0;a,/^,ZatTaP"@:J;Y[hoZ.$?ZA,-;I&<GZ$-W#Z;q0/J[LsPa`=[sc$d]ig
%XTtRUeoS#Y$uZoaD]I^=Z[,Z?6f:T3KT&g;:2*@B*.fc*]`A[6;j<jW"0bOt:YI:BUS(ODDV&C"e]/OFZ,,E9LCN8(!fo3N+?*89
%?aI7Bpk1cU!kD-\:2C\bA+WmQkb.DiR^:J#kBhmOZdTdWATs\#agiXUL96G\NJ`YgKAF4agYr5C-:W>!8K=nMQl7[pb\-r1gs.2k
%h_Wh#`fW5.HM<d/0m]:@R:<F7K*O%5#&Ks2e>KLF,(fMmh1"h25,68Mq$Qh-`5h*C/9Zi^i.e$q2Xin\<c#jeHu[fTnosurltTqL
%6bup,9h:+Xl+n&f.'jAk,01E2eZ*QP;6X%gT@FV7V>!;^-_fu^WU'u\rK1&uR0H`omFSCj'`@VVqC(_8jrf!KOH#CX"fZYu#J`8J
%U2TgHgk'rG9t"FU@PdC)6X(4c\&!;eKP.h@3<LJM?!X&uS>0.SiVW8nEi':Gr9"<H:1_MSa9a93;*6Fud"4jE")Mk]k"VDd`h?Dk
%cK57IZd:m+iu[Xl)S4ddegLZ7mRIMD0SRbQL4L3ESM9J$'\k/?@pPP7+B0@K+UB*=_G]I>1GZe\_Lk`cphdW'9<(_)Lo/6]%%$<:
%VjRTf_9kI[*k;h"<$*s;kVdI%S6B@k'6jmT5RAl1r^_:Q_&<+Wb/?;['Ue"W5ZN%0%\?5^7/TXo-A`'(BDa_gTc?B-pW2F3)5Mt_
%0d^ftcG77Bd\r"F0<FBXN`X+3H6aW6RF;K+$oj7M`a5<.!^5[l!]ksA<%.8>F9Wk&qst^eK0_e\fC0A=^$E1_c7D/l_N/M,cn4)W
%r3>6tCY6ur53%@tKQZ[q_@<2\[L[0;9L?F6e'q%G&D0$c&[(7+<EaS/%cLF3I6DddhXZ!Xo4Q[RToBBX#AMZhdCZK@?/]='W`$_B
%S.'qM]TlMW)&*sM6YMIC61GNXRqnNf//(h=&gq0*QDs#L/qGd$;KSD1JMO/VFC]:lb&#;\iZr8dC/d@9&h((BbR>PC^a^@rJMQ.u
%bTu[]!G*r`nY=;n))Ei_A_%JBZge)1;!+Jh@I]6'03bZZO]do51pa.NAEu-VYc%_);g<.W"%rbrL:CmL(s`7+es2)e-&ihL_.&[8
%HkaCaHL2(Y[FOL=alMM39-1J@TIPBFR7E6LZg2X;o;DhC:K;d,nYdU$-F$m7<c)D[9-1L#e[tPYAZOV].e^V'?7@q4B8ouM`")Di
%]M^$I\Qe$X(1U"MdUIHX='?#.GU6bR;bejU&h'>D.D'gN>8o@e_@j&*,qFT"9mEMRfE/7`(gZ-d(;oa>O@<'0`]X'\X*8N>k@7\^
%"a:kD^*>_e`19BK?fB'Ae7k]ep>W,BSOVGS-(_Zr.!7lBcI?PO1;6*4\P]7.T[RWJc.$I.rL^(<!XeC2hr80q+e>-";j%qL]r/Q+
%AFHZd?H@ur16lI5(O.j$XF_1u.c;ikqmM%QnA@UR!V/RjRl4^Vo"r$[6*LE96(m$<S3^J$$50LKK@6r1S3^K.64VdQJ\8E<5++1J
%UO$^?(M^<=rU,X86LFR3d,64m$g]PgI@jAC(j&*U'kW?`I$Zj_#s)-`LWnGqLdZ:1i"G.j_A<rq:FNF!pAuK)TY+1F%=bfQGpT+4
%KZ]c]?<@Ta&gpL^`:XEfYe]pK/DLqm*X:<IaFl<(K@k6B7[-m@8:tr15R@2nh2)GsLsefED=+.f_(-pCj[K#0O@#j,OhM@9chh.A
%^*eW5/FHO75*S)_2b`K5^oM-NVse';]6D"\hdb/pZ$#o7+!j[1:>]PTAQ[.J4ap^6K/n@@7;0Zo;u.Ph[3V0s8`.E0(^/<XdeC1b
%iZ;:#n$eVV?qMH,&uHGQ6P`r8a*qQJV@,s4ANE'^4P>JLT<bElPrc/,&N@T7V5N9\(Sum*&2>o`-p89GaH;rhHEp$+/kRd[>H4c$
%H8o+9D9jUnhMF,XU@]X.@VLPE>M7:gl('Z/q.5f-0XWg6oYBA9`NV\nJ`p&>oG't/FigmqU\&Mk"],q+%gh"k9"K")J^Oq!:QAkS
%6F'\cqWp(3%k&rZPo$u"E4i.9H;6eq<k"u%E.J=l#JS#6dI>MTm?LE$60[(i@rd^`a_\3V\@]IAl&fheUbtaTgc7ChCQr-jOeEtT
%95G=ai""h,dK@=Ib![$o4WZWsG-"Md4LA[)U\$OE"#?YD:-8*;qI*<dS5_R?VsC9['\\lHgH*Xkh6pu:4q4?D4!Lg&-'ri"$Df+R
%qehDAK?CA-&Qg9SZ@)*e8hZk@g!e^cV$F@08[rq?H5N8tU7q3u7Es%\6Kof%q<&c_Srd-$NRC1*#dY4<QsKje*(b)"J57te]nU5%
%%Rk)gF4\Yj;NS*H0W\Z.!:(%&+Yr"9OHcsE"AB=+'k)<Q\5t%7=sI!9o3cTF_=S?cCs6[^*f;=c_iZKXHK`6iW6MClLm!oqY_),-
%Kf$W))bb0;UX,;)73cJM(=M_A/L7$WD-_0biOpH5dTB<']i60nf6FL$2nT#6^*?BtE`0.g?745lke=juOEPo.-bs$#7@Z5P_X!9q
%Tu!rQY6,i(2TI+M#HFP`E=M>&qh,W-*@`.dpFYnrJbYtN#'XKr?3WINF``NMP9dV=5jV&&]JEf*CNVb_]mIdVSB]1!B]I[<]%jmU
%2QsuWH^!%`lsf5<).sWZINl+hE&Lp%gqfuaiPrfR2aCU>C5*`S+>fd%dUjaI9G#0Cf18/2KHbg$$j6uXZR.)`J:OL#qA<"9]21*+
%$=[Ta+,kUo&f3eu>R^U1.j,s.VOZ5i/p/;:CM_T/[Fa79F\g;:[6Oeb>b0'WG"H%r9gI[iVZjM%0A`=qYN(AONb`GIol[2\Y[,B#
%<S-[>$6e@q^B5n&720q@Z2>X]eo:/]H!N<meqJ_i)cniI*nRok"r"G'UfCTp$/Ce:^!Z5!]D,6<nep3d"=lJF<oC+`VX,q:^g.m4
%Fh=>d:0s[8Vd6eOQSY[GTZ`!AR)*(+gs-]fn0>2Y-!%'%o&aq4:lb%J/WdW\BIXR1e>W#K;@E#H9J[5,B;_2l^Fe@.iV&=X\7O\.
%I#X:g\5m8aO+[!4.,J?:$86%)JP]Sj@j2#H<uO5\2nD94WC3VTnnNYi0gFgViVAUcU*WaV.^%UK8m5cg['7GP`A"I6&=ojY1?"b1
%9?Jqohi%X.`rp%\Zf`J\"`^DkQ,"MFor9Rgh?SU+[_\XXBg,tH/OohT[:Bq!$q/+&\7fG!-=*Du?4DpIW,#V'UQ#eZ=C_+9l@4H:
%iD&fTHdQ#cj.`c-XBQmU!HdagLrp'`C2ZVBo1F'<G$2ku*1>\MG2K`8J8#E*SB`il1@V1Z!?PI\]\<2DrLkK,EKi:h"t=L/LL+Cc
%)]JoH$Xe)mc.Y"ONQb"^/3aKY=2d6p%K[jg-RX1]$K&gVm:uQN1HkE%3gsGB$[X3Sg`5F9E_*.,672Z0o36aL?noI</p&i-USBWf
%+i>O1<Fb&I"U@N5]4"8\r'=B&+[s>NP_ll)hZ6N+'h>7'W*<\G#3;=WR"BrtZ)3do^TeT`_<)UUZ@Li1$G`]CKY^31"QZ9WG'-J(
%`3HfG7KGC]>EqDG^'O=@_gm_gls<TOC%6tq+=\3f)P)oqKT;iA!W2fk0Muc)7"AV$>5T/P7i+\hQ%1%--"](kk]h&E(ecI:@j3/-
%7URk-ce;DHAYbt#8b[P!LD]b(D$1'Q8-(hGXkpSn*`5P"bWP;N+H-_RMld2V^mu[lJCJ*Y\MD[sXs<5(&AI.Z7hnosDt3%U[r\C,
%ptWs1Jd$Zp,ZuCR`RteQMEEA\?9g_Z=s0)(;1+XKNYXnc!&G7T$Y0%fKWPNlA:pO2PkBn*pu"0:_Ff"!5,6Z'GocV('@oKI%cl0E
%Q&SKPe51c:V-r,"Qir57,@&"aI]hb82<]PqLe(tfc>IU1!SRXO=j<=)K$A;>dIn\.Jd.-a**XoT0U5&Y.j*.4imXWY_mZDO!6c(0
%I8iRlj-QHT%"-T^f(o!D+Ue_d+E=r.CsA/f5rieW&NW``'Io9nZ%_>>5QbCpdQGp>76&3o&-^\h"<6"#7oq'BEcU)ZoR<'2oLpfP
%60GPH;8tiS?r3X)]2[jM92;e`f,0R[n[\5IYRar1&Bj3"+'d)TqdIB%=O7WDj7s<.1A]\b.S4K@L&*Dc",>hYeTLN02ZX5(ETKJ[
%A8PS3R#HGP&A*Ko+Pl6j&etM"]WcB/d`JjgV9)JMrpg#+re3:<CG7`]Ba%l`RsMTXieNkA/(ND\N/=Q#b4O>A<KL7+6R*k70nGFr
%c9:Tp$G4a^?gYk=S_u=IE9_"6!#7tjl>Slpq@N.8;)EPSQbYi@C5Ri.+r["9kVA+%_H%kS[RqW$4"Tk[ZY&]BJQEO*G+'?JA/(as
%BMW+=D<)O%KCDngIQ(<'V:]`]1W>[IW`3JDUbLF*gT5BImb$=(^7CrW_qI*Y=\K"t#a*<gEeB69$NoTjVKKmR3(-'>0hl/>Z`s@@
%/qQN5B?UA#1=&_pf]>tk<Kh.c6j-%.bMP8o`-LF/&EsRL*:HQFaupM[Z-N[<Jp^E1m,"g1[[G.;e`rH'W!GEACliLR3.<=E0NI&'
%PrNEch$-[1H94&uYSL^'k!+u5L$B$dkh&(\TKs38dMrR.B[i+"apMS_G_\7J=FsDcl5RO)RR^(n$t9b0Xba?&(7)?BjUhS;;08o\
%g5>r;!%cuPomhA55b16B!,CWfoI+W#4s5g.gQ.=69mIDH]%!9`Rbbe/Zb@t*!X:baQGW,]ZUbEiJ<CI/.JG'I0\CK;PUc3)+m#s@
%3hh-.)%%i)39*[siTha^TWTGCfZ'",FPDr_^RQEf;TO_ebC1/q,Xi7Cj/Gd=S4IJ&3f?6(2\Jn_Yqq#`cUC^#!fIiuL;q=H['_a1
%EOnC&C,*>jGQMhodEdABPM2'&a+!K^(4c-?4:i6fUKC9O1WC,C/ND3eLcK4A,%[\UBho3Nb"h;f*J7[.:?dZ%$Q)Ka]D#J:JCW<8
%5#`m%q*QjGE>*6Wn'QWon7+o\ShX8D;[2uaq<Hfu0S!TY(64#`]sbuZ(eXrj-l-ZSk*^PB,)m7Y&u*9s5hWtlEFS2hL<->YP.-bN
%MKN&);[4fsQO@(8"R53M-TKM+l%uBD,)TIc]C?1.pnUY\m_mb2RT48Zf!Ebo`mC\sW\pFbQ0X%u::7<Z!Q^3<]dGZh6Zg3tX+!CP
%THt]U2)U5i,t)-^?9SCl!W0U-'r[75qr*N$Z_6mGNJ@h:NfZ?m,e=%Tj1Ktj<2nBhE_[D\EAg#s-[5@Lnh.7cn_%**_uHm?EH#VW
%6UZ?Ln$&TkB3jl?;<9?RTe48t%o@)bf!9#jYteWV:,*k*^G(6Sb"k,9+CBZ`'S*"MoG^&e4?*+Qhn$+gkn^IafX6O*(/?98$=$qT
%+LqMF9@9Fo282KNX"po"@W%7(`%X:c(i8n3jL76)XL<n?PKq^8aBL(6Un:$mdBSbAUb$e"\_.8+LXK(CZmbaqNOB%DTQ')5#N1fd
%OFu#T*I@XY(S2$gc5oo>Y$G5sS)Cu0m)*KR?9P[>1_thq4T[p]`]gS7#0:RnBPs3eIK;`;^`9$sl*Q.]XP*D2Nof6F0S6e+'E\7j
%1+eVoA_-(]G?XI7\?_g('qr'd&[-);1\f1a"IEma##<i6qPCbAVA9W+:]hoU9\lEaJG28)YnR1h]O<5kP%+(!DjM'm2iLF5L6^kq
%'`nm8APnj6RsI>_(Ol')W$Tn4+@;bY,TnU^.4EJ4K4I?)jsrqS5RlrbS7UpW=f*uY:,r(-XooeO+S<R7Yr_P=lG^#5;5U<"0Jm7'
%R9L7Qo+$]"2C"kJjV7n[&WS9Taq&0j7mN/+2c7gb/&SQ^O?1?:.#k%+A%"'FGt(;N6h50qpQb[-'H4Y,HaEQQQlS`,MWb,YfQ;.r
%YY$D%ENh2-:M2L88YKO@'Nh6(<B=Mk@g;aKKX18+5eL@@*Dio1M((.Q)'u;rT90J`KYABPRJ*A]%[^3pDc<PkDAk?J?rQ3;QV_V#
%<>u@`;D\LZ_tPP?ptu49Y)=?Z>OEYVXY4qVU^@m(VV_t#.j``F3)3=kFp(#"1lI]#,:LP+:oM$BUN]aN$2/5N20UtKn:/e3?@o)*
%H5SJt1MVO:*)/TgV,K@W$OR>`h0SO6Z0,fW^dqMm^kjEi-*tin4`%U!IQ:_X,auO'HY;dp6'DE(I+F,,GSVBO$"tJ""NJ*dd?JKX
%^<FSoBh`fMpN78f`?Ytg5obRSR\_4N"fa_/(8;oqfBr8ck,P<42BL]&1?6o;;A;,P2R;YAf`eVaXd0TIlli<`0%;U*'-o=)OZF?$
%UMbpEG\N#Wh?P_+1_g=q+o<F7^BVc2J6';A`b&Pf)s4LLY@^r^UeKj`W=a(mC15mU0+RnB%uE_Y"VBgL$OrO(P'r::$(U;EW2Mkt
%]NN=l6RQQNh9?#ECIVV#VQr)VJ\gUsol;%kfO/SllT5);^Qcj;BH29b%R$G9,@Gh?es9gIUnSnTkQ($'HM<?6LE7g^>0?ZYGkp\g
%La[,c9UubJU:,R!*<=s(`DaJlfk6ZTKBc@e25hQp#bM"\)RSVIj517I@iULGeO8mZdM,Q!!X2t9)LIq_1(9pC$ed:g`hl<"7J!jn
%*(<)[ObW#<MESLYFl?hWb>4'q<HPnf@.:<p%Nn0B6cXB1bT6VZceO(5M5m_o(,HN4AaJ4GO7&O7_uC3Zkm8qt$"G\-IkAF0NA?X$
%c%Vk6S-s8a.JNG\Y8$H!*f+,j*)o?^9Tr9iZ<*2$ZGMPi_af[(0%)@@h?c^[W\T#Y_AAQ98m]_tdnUYc)s^]0!\4a-;o[dI22WU.
%07(9O->ePb&M:ZamA7V;_6VZ"\0FWRO]H'*jl'_YVd>Q4\7]UA**nNeLROW)P@tP@Y=ON\@G,s_FBWKg,.8!@K`s.SZVFVP,0Z>$
%Y27/<Q_J7*`++X9JN32=$).E4#Yu/PL'&Z8Yh09^`.U]NnBaCgLi:3&$NuV0*<de3#CrJo,7d(dfUO@+HEYtI=RB:3.,p$:$Zh.B
%+!_`RIKJo7L*k&K$[769L\[!bq66TZ6Y<KGF`jHpKBeQ3M:u3q3$UQ:X"q0J2K#dC&_g!,EEjLW^RC(*[:V_GAQCt'/GP(rG=Wm1
%;CQgqbLIq8aKUloR^>IR<%W&_GVF^`&,f2#&N:$KP]&PWd"bheZ(E,M.\S)ZOXO0OhLjRe*<OaNe=q\6%>`@3j!Y[!Ni-4EG:I2;
%.FIdXH`'"+9_s]2:hH-;H@DqR]5&lIci\.gI45ln0P/4h;ZL43M"Iu#),MbWT2O39D3#reFQ;h\o)-\%!npSYeK?C#9u(9Vf[Z:U
%oZ`%nU1BQ<?F3<I'.0k`RePOY1A+G&;=qESab#ORbZ1pi4K_?K`4URBne3jRLnu;$&\_!;gB$C95Kg-OFL7X!`R[@1G&m7nF/p<V
%TH@X^V&<ZIhM?5>$n=K!.l=T@1OofS!=)^tl9ersUbn-lNP_VL=@)*YLR0\&2QF]XA[MQ`NkrQ3!5=q7W2'cPmt\sr.KAei0\Jnp
%a?Q*U%HBa.HF<:bho=hEJf!8="\'+L,ba3/H+@TrYhU0U'Q(McHo67j305Vg7'mI?Y6mWFR8e4:5*[q)UYk#)mMNT6*CaaKd+)$,
%UZ-8]L)/HrMS;1/'AmA!JD[KSK1b3\T)r2)9_Y9gX`G9nja0PXE4=)Lm9@1)`4WmfLei8T)VW=+>&K(!ATG\#%se?3Nt",ZcF`(T
%%<K2,k]:5pMgm@pC+>13g)iC:]+beJkj53&:K9\J]S/VL_"Ak:^lf66U8,*C4'XOqkA</P#b^G[.j%gFN40ld7VL0jY&IFWZu6Ib
%Ef?I=ofteRZtWu:+="t#db>\R-_-'JP#>ukV*rU-qYS.\UUUtWP-*bjAh%m57G+JmcEC533J4^QS0d^\XI\59o'u#$Qp%=KR7:V0
%O+!CU/r_9F&[G6h,FuNS52#L[`^^1.P8;Kb^#[1WnoJ>6VYBf,2%&6s&[Y7G0KO4QO_ZAaZf3)[Ep>U6SP=hWa'oCI8mn5tW\Cl'
%3'\6u(CrO"1b#2u1To[b'am)q7K\G$:c+XD%5]08:NAbB@1,UOSge^uCZiVS-eG^#P(Qn@A']+ZGnVHg2`2nZZ;DkJm)u1<@RVj#
%f;4TK^)J3%m!sF*=B0_X<DLf<S"C7"oXc)SQ?VBAO:97)'-!![GW(1j9JL\[r$d*d?d16Z\>;4rR>Ee;^Ihkgll;JIfuoY(R67`U
%a62<[>J*Y9pM[u(;*->jEnETMq7tbWUoYQ+.P$"\kf#bs[`kR`PWQo._<i>c[pQqd"l2e)9:-MeJQO\R?0lWJ7ZX<t&m-**LZ,kI
%P3Iuq,-\4982H&/d["DTKT<X'X]lY0<J_""JgKH?F9F)3"ZE<'-MSu'H7$(`[hH-[2_9`Z*^/)/8?Zd,0d4tOhV4S!RE!oiX$2'i
%W[b+:<_,YS\b\DkgSdsN3-M)LMVuf%B",gKag0o"HR.GgURPjDNY2j@qbMp><q6/K\uI,+]m!3kgtC]WlQ&4*gA^FYP8FEg";sIf
%i[`J#b>SC-FU"H5_kD3o[_\b'/2ikBQ9rB4WaG2P[I?@.*(Q\O$(qi^=/68b/<+(<1/W:CCnXs%8qflKPp5k&nm*d``F2%PVmSr>
%9'/e:!.fk).4uAjP`Dr;U6kaU\pBGp0\V8=<[!q7hQnn!#_3E.!]fIEe>SLP%L4iad+;,;*f)HZUi=.:7%03C;hUkk7?'.IhqCB[
%]a2&klk-ed.4G9S[>kLWZ%O#&YjFofD!&7V8-CjDWk&GAk=*b@$lmZD3N<euN)I$m3c]"A[!ZDH:aEGY#>D<SlWK@P$do.MArlYF
%8L=#=+[+f4#u/I"^bg@W/:m.'psMmA^@amjn_FnF!hBX\]t/oTieObU6mY-KJnr[\?)tg-&-C=/"`47MUomY6@qKpfrWZBipcd?*
%NBX-m78PT#&d,=0ALVk4UJLFg!>rl:)!$h&k`IUPL=A;3K[CGAN)ZBIb$`><g5m[pq$YiahCd0q-sF@3*J,2@J[EZQb?jV\)KX@"
%fPHi@dFG,jW=]kRA(uTI+Vt2U+f27s-m"Ua[IYX#/;76r:`23lAu6=Ka;_;46U),u5mKLu$d:P9oG=Tea&D`>7>2(Xoa_BUA0Sh&
%j5.[6;>kr&ojS/Q0Z\ZabDcre%U8u93"R*K8WGb[@464he6$l.bINO0Fm"P,YXC*uY(6^Y5;7>5Ig7C:L=)3HeV+t2rsP[n[b>?f
%rgW+D@BY$-12o'K=Wb71m2^Y+3>;QYldV+WQF9eR:*BscZk7DTh\eJpgCq`J3`_e?oV$2ro@8Z2*JGG<D2n#''[4SO*P`(WhN>(3
%Q*j-]KO2b/E+0Wo,:DMXO%u,#]a<]EPQ:*)aQ2lY=WRqbdt#=r[e+TTbbf-miF^ofeS)t5f=EQr1)-uj4+KD=1_K1X"EFTF>Mr>2
%KPFVK4nKS_.L293"hI(C\`pr#34^>WZ4YI\.*M#\iEYn3AhsHN3%53//Q%jf;`=LZ83'P,h>;QKhuptL`q<'5"`)&_-UWB`;@bO+
%mB]Z-Vc[gu%i')\Ogr-WIPB*LlnEAHD8+(;8HRNj<W?l^0Sj75Fj\1U3:f*;QCSutK0>+175idU"u1(-1Tug:DJ,9Q`mBQCI<$R'
%mq=AQ]")mj<ULZo,?rNgZ)IhP4H:\jTt0@=j.rUnXh8p!U;TmX7$JT:lK*:2"AGrI,I6d-L9p(M)VlNOr"1=I3:eg:I^-;]#QAee
%rb7nqb@F?>WeeJ;Rs!Rnlh,/I:(i"EFncDc?+hse,i=tf_o)@]F4CpJESuGCDG2#s63(MTgV%o@:kN9memRr+n4<%mS5]L"'PpC`
%e<t3=R$m%Z_(1(c/tMm46tDLsM:aI4$(<cbP2lT)?HIr.EVR;o`hbX6#B"t>:(?$brs%'e4=c#8nYia00sJD(H"@:?Esm`;_CQ`I
%=#0JE!\^i5m]h-;QpbP8;?0oVrSekZ5i)C3k2s1IJ?Cs,E=Z]7]q,sP?0g'X'.j9'MJ?'a]?jl<A=EgqP8OL`JKQK2N&XFI,K1&&
%i2%m]b]2Ku2Ai@c)[MN-FiOK-`f3X1Jo4@na[=!90n$;(O;rqhQ'A7_'"sgr@8mB/`KS>8K[Rc:%T+@qeANGdBrCX>[(2Fp!'@WK
%\8J$A+Aet7dokc'HS,bf9luQP,`4oO@4Kn;"#?qdg`d$i>U\9HjW&A[s+&IG=Zdj>1#51/Zt)^!%=199k#Z%FlL5.%2bX`)fEL;p
%Z%I[3fLsX<f'7m_59[%MnA([S&KFUR0GUF+8!pju@P^9nId"Ls;YA6IYW&u0m2k@4#8W12g^q0=7TUL<qj*`n?'^L8+d^F[pIc4$
%!R0!l=Ku[(8uN=).#[@aZKer(1Ed(cg>)QP<R]e,0]3I\-kObhi3ma$@d'!I&r[ePS0:!#IZ2KD:u:RpeO<!P)`caA/kF8j$#&$@
%DFfEu=a6lI07XcM.o7\R>fig]#7D[d<`GS#LT,CK4FC$,g]*=0ekTs2S<6"!mq80K+-YR3+'dV_n;c]Nifr\<_h]NU$0t;")D2\Y
%TjsBe,T.G/\m<AoNKnmF?*b^U$tS"BP^n`:PDq]1LO@)c;e(lIT'DYnbD85)$m5)P2V?9m]1>kG6\LO*FctE&;(6KHN:2r5#!c:7
%F&#L'bbu&61VidU4(&Yt^2fC]i+;YE4_HMZCpZt98oUB]Hg'\/W\=trGY_P*V\$!s5t9;O\KX>75;9gUpon&L"AEcR%*h*U7CK$?
%'GW7!@#YI'Sl'UG]!CK2,4'BkH=p6dd!RD35^O63o#rBZ'lk<b(T\AZY2T7gIG%!0CmnZ1r>B<L'.$ujf,]ie`g_MM2]^V+MkIFJ
%!:Kcd4C$KU,7kWp\e?$OHNdN*E?S@6GqrZN4lqGr8=al\"=D*<53Tta`bU>,h4,!Y4!/c"[S_U"S?M^K`RG/nM2$!!;GQIHj?8S8
%'[R/@bcn!LW*n(nQ.%h3D,Z%H0%%%@a=#a1U;Ue6(o\(c<iUsZG#OK?rMKh`^q[#kTTZN'8nJ.Ip;p0#`%$Ku<rab-RlPL>ckFp1
%p2)7aUu2md&Xc=_>AMcrmKKnfO=Fn19nQ\DC'aUphW__/SVn:4XmQP;$Nfi?]"=(F9HCg34i9f7gu9VS^,16tW!Ap0^j5!U_%No2
%"r@+.6]X>']o^hhW3$eK5ss3YfH5g5$dle7H7De(7m7;nDB]X\!%3"PlL4p9/pY,gQf1hBnR\4+S4_to!qkW)of-iG)9,!n+/4s5
%IiH?u[7<OaO-td["3c,-*&@<(e1a6*,$H'/>MU*ABouI9f0YdX^s[@1\_MKu8c=^tn%^!B;JiCcK>0<WnE@_E$or=91;$XWOj((k
%HY5<uP:;=;L7pNd\_9u)A@(Khr/>UR)PTVJ+AN"3#=#6j-(OiVUN^P93)V;%roeHN_etR&_]d]\h+(6RggnF=RfHS>+$Ol*S#s;%
%,t$h\KfniMY[Hdjb>`gUd/P:O#)R:TY\UK*(>"YYO3%CbHA*l6Wg7/9_Gf\7V!j"b%[.Prg[FH5.9g^<a[XcI?YT):.7=\PiYmbl
%r\-G.8EBrhU%TD&a_\+9*mV56:K9kV"qkAQRk&U1_Ah$>S[/.m>EaDUH0-jk%/,^SJ`1.dgnBkkP&-G^)_J(P.,[t-@>_<@?6V(+
%*<b%Ernca3AS7oZCTcLo&AB72MTJ*Hnt:u68!:L*7glM`[=Zq)VmC45:+!8(_kRkFkDOt`@3pjVPO:NkaBC?6:`E#_!Z`nE`B$jB
%K01aJ3>ppX3U#rdk_ObV7`p:]o$J>@3YKrC$CR^-LkT9"#PE"ge"R0f?uV:=$:d)g1-fJ]D&b^i92Ws0fIVC+Wk<n0mhLDkPH0&*
%)fn1V+@?d;e31gRpB3A5Y\jZiTT=-)Ngp(;b`P7?/F0!jGN)OfX@P3$FF-HSJjF]p,YIdu\el]ZV*'m63IHC0D+>S5gr>&.-5ddj
%bB`3s#S6<u2GfH0qZas0dX_'gCCY6_1)>MIO@!`sPcGc1P^Wu.9Gel;p>H^qg)FHNg'BO(DI/_07G.m0P,)FG[NM[WePTbs[GO!8
%mV<r@]hp)9H].Is-UD:_*X]K'gS:?-old-D`>Jp;)/Z`K.1)=WqAuIul30`<!RX],$H&p5MJMHDhpTe3%O>s2Hg!BiX`/QP.80Kd
%<jF'#9#p:o:e]tKE.*nFWWS=O\m0"8s'=cgg"&n>s6"P<nEb%[0"'d=ip]MCP@<^]6B,hBWsINCn"=ou(O+T^Yub+DCPkmh^]?u,
%AN/u@`KPtO@N\=#5\(MdJ(]jF=Bk'g#L-7K?B0%U)FV%'Kn?Yi13_.1ag#_b1;JYdA",Ysmp1\4)FiJ$l48ia6ddoeGc6[L]7?In
%A*i<n/gt69qjt.I&q;?Qb39Uoic-B^^98:dT\1^Q+pt&D6^g7sJt!i&5<\UH%hhAa:Loj)dfI9tGPTf&:@1n2>%eBM3e\Ql9W-7=
%QDWsaUKDHiUk?.%*edPo^17:%N3[W3Lu?8?<3oNY6j,WkRkl2KaWt==i^XHT92s=,!HtnrD22d$D<V(:%I-XB5']d6"5Z&)!NIXk
%RR%HQ&q*S+*cVrKY0@Y/gUioO#V_\55]<p4,a5!>LGE6@D,QL<4(b7=,EuM(dhE\?+:9P$oUF.B8V')i6f:J4PrGJKdkIef8\fk]
%W`s^@KF][^_H_Msbe)lf9&L)uO;!esP%l4=,HER`)tRh!,JAIPg8P3=#CMaeHO?=:)`L]7>>&uj6^C4^?u"\pP%Gi(S#O=m1jbGd
%'N:kIl5.%BRo6e`-I>R3aK)5o<"M.1WIJ,dgka25DuBOL'<'0mg&YBr9=9W=^Vrk)(2C1;!^MW^+[lAT3j%10D5%e2"i[h%KHJZ&
%h%j`=[Hhj4B!hq5DCjh5*OU`YVm7U\R0umi3_PlNF_XO\C(l%P,;$7Q"D<Q0>Kpn=`YPOVW_EIB"5.U)[CN\uQ_lYK4>Eb<UG``s
%!Q=.HBQ&4?eq4*KII3@C`HpWCV+OI%R=Pj$BeGT7<TLup9N)&#;/lX"!j2d#YnYfG1R_K+;9>D;o\-NGQc!F4PG0cg5.$4&rmn.l
%?<Hl;$179I645>@=DPX8e4=qcq)5&<i*oT?Y6,F\ijW(^U"1dj=OVXHb6)'d5&r&$mlY;J9X@YnX%Do"XiQ_-)hpIoH)p<e*I&6h
%OYGNR_/&;f#$&kt1STd_WZ)th!Bn%r)`_.[I:t6GO#96tUN.-]AV9^c!nkNM(NLJT\gFsWMd^E;@&aQp9Z(6Om?KHnEK("BN;@46
%hH6-p_6rq;\STI>(8pLqs(:QRKHl(LEGQT18l9cc8`&2=Q.RR!B'UihLG@r9F4%%DM)L;Q_]JYL-"gTfQg(.h5q<DA!c8hL9;`1]
%HE,ml`f_:E2S9IH`o-1H0Wp.%J\A!+5)OB(q<EK^i@Nm;0A/+f%KJQ*W!EoKLHpc'YSBLA]aId@laXVm\-BU*)oeOX.eAA:3s2tM
%A>sMkeC&qScNrcdEUT84FM,b2b67^V&VbmN#1b[&;cOOmCaXqrWsrd3ni%Zr^-Z6&82&c,DICs3?<Y+Tg<bh8;B8&%k^$ZI=-*@d
%mOIX%j9<6;73`F1"e,khfTh`4^tZ@cZL_)saX#`CXd-KZQI9RKP_N2m]0[oEQ^b8<UF9,r=MP=X:Gc$6&Uj4Ee=:(!omrll?D?eG
%L0L&0E0a(rW0F6fDHmYpD!a6^`@)Au\G?P0SHSY=)$Uf95klk93=XrZBEgeriV^O2jJq-D)tS3GjDnLW&qs[J#Qt.%(:DsbS[mC[
%n,e8!@mN12U>(N8!?)GfEQTA2k?4K[#hDn=Y#gRt,6;nYr2RDS:tro*-2S,f8u6hE_+ddY!!Lu"*QC#obL]TfM,T-iA[t,]i5tZs
%Pn4n@@:?Xq&?hUoglpe0+>+jl<al<brNWFsDaYCDHQ.*,M'_%XkuK(+"Xp5O+sFWVc6TnS'T5?M@Rf,J6/;KT57=LhC<DK`mmU7u
%dI\9qgBc0>7t,tIGOFf0>cLCB+kk(V<d^^q>]KObA;J'3h-0i0E.:]WFDII\7QD%`8g[*lNH11-QW-`4%L,mn,oaODU9a0[D$n@V
%`<AlrSYR=IjB1@m5&int8-('erR)`R0M!1\eTB=YCMp;D>+;6qRRQW]U6Mlh%XE+0e0>6M6+nNc*RK2]%TH9[L+;e3&:4hXaG_Pg
%X^8SX%n,^2Bo$C^eWN'0FrjB6f#XpLE!qDVUtAV`-oHe9=L?(Up\6IQ]Mtnklq9*bO#>\o^-Fg=V!?qS9.j\A=gSiEn^^GQ3gNAK
%AP8a?5_,EdTFYTZWo'=C6/Z'XJSNbIKVa9PhmsniA9.@VL[?=iF'N;%,-lTo0oq!-lk(Ya,SSG_3YAAHB0b?kQrjN=e%3!<cun0c
%Ap:a]!V]$rD9pde[<US@g:Rm9%dL*NC,Y_:k]gE&AoI9m2J3#V]sps[YAG!IOE+>4YeWS9_'Yi5&:d0D)1-go5bbY'KJ,DImjr&i
%P'9Qc?rVWb*WWuX'aZ&\.Z>KNDa6Idj#mAY$qPYg>XgA,rF$S+S>Vu]>'2[ei:!.cej%O7Q!k,F*Q2@-ajcN]WGOlFE8V/1f.J%g
%A/S6GTK*9/`(t_U("7T5.1VAaM97B%57G7ATg7&3W+RHE#PnJKYguc4/*KaLOkaW3J7d;JD]OG)MoWM+lE'#EFOmDaYdSt4-nj/O
%W9l\Sqp_VN+;n#9ZBRG,9<E6F2jDM5@ji/apf6ir(%l=oR"m5sa%dB#i0eu<II%6,_%c_iQJGEWVjnM#:<6l43PmP[#X4`CTg/c>
%LslC2UKqG=9&4X;CP(f+,7+EC?W[S*HP#%?+YOGQ$-t[I*!+M>*GfR,?sA^@9FNsAjg\L4<t+qrJO7(4ZX5+I:$/hoot:%[1.Q[/
%IPQml2W)Sl,,neu42+?/Y^$Ke$3l)7;=m@A9+]phFpJ'.!u3ncY::B-gdl$B#&ca/F"HngUm;"DESU-l<&E(UCPFC3Gi78iPc(P8
%62e3ral9uM>I7".chg?SU\C?BRC77a*WI)H3P&Xmoi";101nEI#Gj^4/=dTID8"?5',q`,pCa@DE!^G&]E)aR`[RG%m'-rF#]b1+
%9T(hN)i#m2"jdZN\!CM8*q(Jd*3R"&j4s9W8/?kp3et'GSG=<&'%lN_+99+A=fMT<>9\Zn93W^k6mKgfAaq"9;`lB7UI)YR!kl1:
%@T#O,Q*D0,83(u.JkYNnRh-R2/i.2mmN@ZP;OD0_R_lVP;c,Eu,&#>%9d*9\<U-)W\IQ.I:[Z4Lh&W5J_r.h(iRtMF>35]pmi'l!
%2DbK*.!\:&gTI):J7FmgoIA@lq?A)T0ZDZomg,C*7YAKR&'),-aM?+]NCWA9=\05G!@Er:+BFD#mQmQ$$rXpgJCZDZ8(HXGb?]Qt
%4@rJ3Js7n#kiOU.)gZego.Z"u6Dn*m5,"GISL=R$D8nm3\_1A\gYlV3:5Go;ai8+KeSdPhFJp_q6d*h&64rm@l5()^1pe-WaRa^B
%4#IbLMiY=@@A96ueIP(U$)i;P"Fs4.M#^=(9r%uufMGa!!a('fe2S>".4h.T/gHHZVMM5J.tNT%$g(:7g*0*<'^.]K+,#"Vr1ZmL
%m09?O-KC75ToNCA:fp-dc>$*"p0f<!eljZtUN_4h)f6F_]<Ds]MG.qgeYFn.8&eWPb:5aY_G5c1J>g`oH`"O,+AoddFN%[i!k3.4
%.j31CMA$:hj(_$5bFj]>c/'J!*,\*--[&+ZTEDp+%ZKUH:Mf:XH65knH/U![T#U;19EWE#PKS2qd:Ks10ngiQ>J&Q`p<9d>infh7
%ghEEbU-%2D#eNVi!el_6C[%>$=(:,3V':fTNkb^[%T.pJOnE\0mDkF.pTS$2)mX(/c.,[d\b2s=:I9mB6n*q*(EcWfa/=k<rk`pJ
%P7Q-!ig=Ml8H&^s)q^hIh`+/3+6!21(pC85a]Qn';IdX7a*"'JDEG^1m5t)G_AEf]8h7K&(al5:Y)o@@_1U4k'Dn,Oh?WB!W^eM1
%WhdVQJlLd(f@buj<^kmo@r(,!]B2*?I21iMCkKQ/aQWtSf&t:]o$ZZKEr>FNnS$D9WfICn''D<pZ'C]%&KZ!2Fn@t#6m&cfXM.b=
%'p!Z]BgtdL(.Q6)K.TQLgh.EBGKc'Y3(0HUXH7c[c0E]nmb$u\U%O[Ai^aV-c-)YSJ.SKV4Tr'+X,cGFb>M0u6cA(JY]9m:#Lu2:
%W1@d/GRFS-Y=c'Ug<gho5+o$1/amg])\njKR\9EtR+lsoLnqa<XL2(r>[3]f+B_[n:W45$X,2c"$GD=D@jrI)Q:aVH5qC5e=A`TX
%*E-2];&.a]77u<O-oUnLlSTUgVDP?*(+'_um8`nk[%L5<jklX\.""tpoZ@"3!n(T)$i:5rTtZq%PPKm%RYYnFY@E\rV@ts<lVMdV
%-\.Dl1/ZNIE5Iu4DC2uP+Ju]?T:8Ol/MX]rBXF4ioufZ2/?PeOFh]c6$,(fK.YCfgXg>705`nt.VGRu?1RX262?bsnE/kpa?(G0l
%8/E8:5X`_]p1NV(iFWoNXFdRH]^5buC0n3f\idA(!T-72/.IG8).]hP770(_9Ku3!0NWqb/u%U_@s)W!C0Z^CLFC$H@Hld"@[6,n
%_GC,Rp:=5oVY0GF8Gl+16d^r=(HP?\<R]Ir[*Z*;gh%]N194M<&\/8j%ufJ[h"00\S+2LtRDrBl5f0K`&I4Dn(),9$a$RQq@E?Ji
%<"6N2+&<'CNK89[MGt%h)m"9`IdkG/V:lNt<`QVS_"l[3@3Gk'"m5"TE`O[9)00L37&!_K4D03Pm'/7eE#Y_7'_Jg6AauJdM.>mT
%NWoTUX6qQTi4SfY0#Ma7;fB%S6>[Gp7FG'DEWe+]Jl`mlWM9PSospsrH60cC*lbnCP5J<#pFUIr(lSg0h@$SBlr5:,k*?U=FG6(/
%_6R[p*?OLZQZ*MJ7co88Nsc74Uk$A9rB_\:]4U\Q0(-QPWJjf!h4T3=,Tb>bf[PKe@/3VA*5,Dl>W=5uHV8,*itT;=&MaKK^rl+/
%&eZqtrD9t]-SaS@Z)7t/Od<)HY-5]>J.bOl.m9B2+M(m#ZeC)-:`L#:?-@o2(rZb81g,]gf?`=1T'YDh0fYX5)#MA4>-l2I4<\;p
%1JS9%\qNhaY2D0S=IR%lW92=\B+.s/q&Uk-K(omSp7Od)*YLmf\>^?P?o@2q3D=H'SYan#\A0Rs"p-!4Z116qk%]B:D/2G,Q\0'N
%[&N\L)L0-'+k_.D;c+p*`P<C^372J&X^P5!<\\6XFoK5Phfiq)eaKGPnD\Xg^J1R1C7`(W!Yu*d/9V[C'cPs;W-rh^B=:N_emK<i
%FmTWcZ/4D="(nUVaN"AS^f]n2a='F*'IN!/3uVF$cjS[0Z!h-94?sl*(LQX/O,ic6fNP=tXY9`[+\[o`Q(aA!;%tmP@^JU)!YdN8
%=?fJ.HAN<6=eI`lBr8"`)61L!>noTTc[$I0$q0\`YN@BMTF<-jktq30W[oVJg5$$oR"4B;,8]NXCet-/aM7/\#`SCBaGoI!"n"/N
%c#biI;S^sZo'9sm$"JWsg1/JhClbJKB$2V<]dhtq4G')WnJa+d!81FR#s!r2Kg6joK<`DfqQWoB[25YMjIP-nZBi=":>8,uc0SS;
%AepIo+Vr%$=[gp,Bo;Wh6n);M(b3kj?'6N)!^RZ'%(qPEf#F2CCP/Hm>[;m-H7l(odZ!Kdf;DQL%$h*ZQfbWRnIIu"eLRgukabq!
%fl&,fq%,ie":\t0>uA5FNa+HL-%GcWL2^h0gl"4=<lBhEl;PeI-kmQGVb$>egH9M9%`aMpDsd%._QY1B4=",T[NULB.'kGo5&h!+
%SsY/Zcdum/Z#fV]Sm?4p<Kol[A&Q*dP,f6$p`<X;1L[o'eDAkj9:QpJ\GIV;4jbZCHKFupH?BnMPk6s;VT1G]\bj(h/eBPTVTG=B
%GjFp:Q.F&`k7/OLD3[sdI=(%[A,e(5PH?8:hiFF?Gb$E<"oNV0hr@!L<0Gd<2E2Zu'&C_+-8mE!NQ_XJL&D[oDO:N+k+0#@[P"\A
%q[HmSqGs%Q_H8Y<V.\X\epmlA\K^i?Cs1KhQ7PuJ02ka4b1>;&IZhQ(0H)t4&odq"SRR_engo>X1*#9_@>+ppf#<dj#FH.%+B9+Y
%#XB$-W8*4m;$>Uk0Hnhc6q+>9\M\[t2M2[c_Hqq(1^qcKe/;^-3`%bqJn:CPDe;a<'&(_H>*L'mJE0$SZ!anC0ihbB[K4(\^4e<D
%B^Xh;+<3+0?6JcXE+?=Wmn>KI&0MZK&a-PdJ)8`g4=-hdm,E.i8[Pin:l$p-B*+/=/P<uK10F2I`#KtTA/Cqhe>po8aCI41FQqaC
%oGPWYK-a]S'gtHmW9ju9/&_T^4Tpfd:nZ)e;0[T_m0I0@TOXm-#(]02D+63!e[U<h1#3C+]E;aNDbn!"U!Z.F#g)Ui7>.<&DBs`E
%Pp46#_O"IZ59pq]N-);;`eQ/'M;7c:h`US4@7!t!H2jU9p'iA^HWk'I;LI0+>isf/YjV:kLDTVnT;2T_KF^[MOQ?b[Kt3-uK+'b>
%"5Si@'fLm9F2)\Da.WeQi[7E.Z^4U+8=GfJ%HqEGEaK7gf.,Ca2U6`6NNh:`8NE;g$&BYJ)(6tYa,uoY+Hd7kIR!8BQrHm$TOa>5
%?mRt<[P?HB6LURbB7(,CPQ)Ts^KP$PU64%bGQTX+qN1:s8s$c4P9EU@,+E4V%rR?k7HO%Sp2Xd_,!41?eZu[&WE[&0fSJ#@j?*8@
%l+>c$Z-2=.0XucM1Z>uA09aB#90mArGmt9U[t0m'0i[Ui*#6C-pJUH.6:b`)6R>#&K6e0iqAs3_7n5&ce(*EuCk[=iGcA/YmG<-@
%2(mZs)RLdH'Xp&(MTl]`!>fnap^eLcJ?E5&+)+X6/lW?_Va_@2$VRd/'3Fjt@<MbkK?2L[IC\^I5m,$ZX[B6)!eI?`2hjMte3+j<
%*afHj5.3r_)l>u`30gWiB]4&ARpnmb--!WFYH3P!qh@u#e'p,]Oj"$HHBYn,c-\g2:tT-]O.u(#X#<^6%b&YK(aT7pA`nl)r_YD'
%'%]0m<*VWnDj(E`@tQ`TObBd;$[_;('>mcU$:uEDiQC<3<lFlPDW@."B+Nr'Z['lF!&lk4fZ1[GS4F#m!:1*[iB/N"JAp/s>BS(B
%e>@sK&?9'-rK8rt"$iam)lAV\8,Y;lVR)[unsT^S'."Y*L:o$UEi+p]G'@Sp/-,MbUURl'<#_P:oI:@`]`VICD@668;qBlnqFj*0
%1B6-EOi51,A>[%<(WepLTUo^Y9Mi8h;3k`hW-@Pe=hQd=9LPolnW`b/<JSGXHQ4t[b$iX6BC"F0>,d<*MBkG(*887TOj%MSX%;3;
%=!4[,?5k5p8T_+03_Csi6MOo0^3D&Or\`8))Xn]9foZOtHRV."Cp`%9-K(A'A`,9nU%JW1(i00Al_,K,TTd$sPSO72E6lR[fW5)d
%"fVg94Cg&h@W\)THe)'+GsWqII/!R1+5K)+E9I50p[0X:"650o4hU[^hs^L7mdnc>F6EN]p[8%Ua#h=c>t.RQlAn1-G^S]2c82>1
%5QCYt%mSpcqr=:iiH`83P-3Sfp\odY++<n_G7VF"F77#=msO`eSbirq_[+k_OPKctm[\\P^@I^>^^jb"mH^Bn\G,TIh$GYsrm;6@
%huC^q@Jr7Gb0AOfpu1;O&+9C8o_j8fpXAa:O#,D[,[ZH.-+e,Rp`-`?I;nr[K=a?sf%qLQOn#f>o'mgXq<#;]J!tlFZ.E`:ZN,1b
%DU2I(G'j$sVsW=:c-hfi=na0Lh7a$Q""qIX2uN<[D]\iTnJ=2Jr`@hNcigSBHi#nnh#6Zq^HZtkKk`.9_MN@5_4;\:*<1-'5I[96
%3UG$3(LZd;>oQkpD%-BK?kJj9'(:)*Yj37V\sq/ILlf$9YG_^2f_O1-\L0ONDZj.4i'DM[$KGYn;a5)0G@76j=2D^J6rVI<["R0c
%Y0oY5E(,;S@2;r)<`&r&"Q3JV<+L+OT/t>_K_B%fPn+nJY:,/De@=\JA$HZ%e`[af]'Ab[d"+pZ0rA-dP/Kkeq]kmd_7/%H&\NkJ
%q/-S;3_jeh>f=R-C1CiTp[7euG'A1Kp,mO(%@m$(kf^LuaQmr>]AkX&m(`GRnJG12bHIF^rVo[.4&uMoN="N0@>:GleD=E;ZNOY7
%aAi&\k"WgI$j&2LWHhlZs*'b(<6qiToba#N7JIY_6[CMZ!!_V9c0e5TP!c$P#dkAR"QW35qK4It^o2airN_dUjR#q)NI;rN805Z6
%r+86n\S#;c*4_C/G]Xp.jBeTb74X/rTT$?]!jRq&=%&jT)FINiKSk[QN"!iGpM#io("$*c5p+M6.="Gf5'7R%;=Dc'37tg$ojXDJ
%TFS0b#3ZX*M(3`1\;:&C:B-i:$kq9$mR6B`6#QkQ"!a@9a;[E\?95J,b>.K@6.U?jYZCq:#cc)!h((R@[[rSon=YP@O5*o,7(X1q
%A8b,\6$7im77Z6p*ebaO:o,t#/KQmc3TrK!T'0ZPG0l+#G_\$Z54S`QNpRkY'ElaCC]rMNZr-14N%S])\JJk80(L1*#N&[(L_4AA
%)8t&^5XRW3<*@,=d-JO"$?LuTe&Fm`"WA*<I\49NacSer.,m6rbE!Y8@E6dKSuG=r4d[K`m0V6$>/U/+<Bq6#cia:EU5&+K^Iq2N
%E87e,VH(V0*"doX:2.VJ*3kOF0+##grYhL:p]TYG'bZFt9`hCF&u7+bhDdQ*1(%J:5^2W!7-##u7$>ln1cSp&4q=T^@0&kG\f%*4
%#1<Or!iTdM)r^H^Gl_92,BW-^dn.QH;$,2I#MEerRI*bSLPT\=:U.69i`LS[i6;jREFa2UQPde[&LbT6]9Z;Y!8uhBk/33aDs/<6
%FQ2Pb53`jK#s>7j=A06jn;^gKTYn+6!mO]p(EaImQ!Gsu<>5mJ'RW''M4B2)0lEpJ;\cOLEQ'bdmD^cNk0?I/N2haAZDVQCL_c>d
%;]Rg6LP6+jqK2G:A@6\`cNETsnhi;'lQFfKV:g4<3%>rC^$/+<h0JXR584uXY!i0PR:m?Nf]X!pADSSd<[kX^43o,?UF:sG$4c-m
%-khR?I]9/8+`gjX[EuB4A!YlG0M/UL8C[">A'd1rUC'VcGnhgkS6]GNP>T`HT'7+%0q&u2.L)A)7XOfFO2)kF(c[N>R@SOX6tVc&
%6B2@H6tR1,bBH2)lR(QE'.^sT17%L+d+o-!K@^,b3YLJK1>UlJ2Pe]WW4,W)Pp9oPfE#d.aGPXl\0WCp!\]og5t`UjR/rn[GRA9m
%;%#3(0aU;-=_TR#poV'kquC;((:&e:&I#*?q7+H`A4.ss5i/IMQN9`>m;u!2$4PcmZ%bY'p`[.?),"up`P>lXTZ-uO@RW7YKEF[0
%]!]uJb_/-Wmu%B"'PmDR'1Y2dR>4,N<F>f_FZ](k2.ZRD!"7bOj#s?\Xrr!tO)Eg@bcohfL"0&$Im*Qa>(H4[XJm3P&n^83n,Th7
%Bql@`9&TdBMoOD\.B;Op@Jc_H5WJQca-<!oUpagf"?&j'kYGB+04p#bj)LGq_,DX,Ef:S\G2&3UWXK'"JFW2d4Mj(`&Ifr6hT@'p
%hq[Nog$rSiFYJt$Lj6[@9*M=L29ZW\Lpo6LrC'cC4p'j@?3KLr(;D[KTi=9)AT^$;(Ul941ZMqWNmHJu*p'gh\,7X)LIt5EC.BJJ
%-5r)6A,3SZj'_KQcNJ?Bpb(Y!GA+aUWsUR4G.#A%4GZ.PkD)/WA2Q_bLc;3rotdI<C2mfdS[aC0l<2c\l\DQm,X18QMlKt@:#Vbp
%,@;Q.cJ\gJ,Vg"\a'+]/ls]@t"8uTV0KfdP'\SJ(N1;"VnZh0!$=p[i55`J:I>m6qKB`P>inihacZGc*in<tkq4!j\39,GHH9??u
%_<Y`QI03HKZ&q+K<8[Z$5H+WnJN6Am8_DHS&i&Xf6iL#33,Ff,NRKJ^4B5fI1qsL;SRr1!Am!U-qc\rrA\chWpknZNZ^X,I8<HCI
%4lfMj,ttGI0uI?j"iG\ckD,^8`Yh'e3+`u?X<M-M52tBL6s9%83I.OgO9C>*67>?@(^nhAqW.(C=`t:$+:u4RhF;c"9N.+jOe@\W
%oWm)Xd`c/:dZ%?,"U*`C#rF</_KH0GTBr\p"C7)pJUFECj?bRGPM"4jF>n<'7rP@u&jtoLjCP/u)Ib@Va;u@4&'%f8r=U;@d;k`b
%=>%s<P#COf259sr]T[>j%_6&-*/+=GHN-LM>[q:DoDe0uU]%LNd)9-l8%7>EmqX(U3W_/LBbCTX1>a;i:<l"]13=$<^77'07535I
%o%hla#Z`o:F'Q=E<@K2^Tn!;2U'a*kP#&:gS-9g=Yc*737p:JW`p$`bTGpE\!a"T?Ts"K$&6H<\m+n#HB]h8jbME`bB+qs+/=tY-
%'e+JEckR2'C(f43@[#UW;2L*(T32V[qFhP)*bO`=#R`)n#n#qGL!GG&oPAhlUoD_0`"1d&-g:jR6r<G%ZLt%$V\.t9h'R*?OB,uW
%-T%KVC^]8g5en(&Y7Z>fGFj6&Rp^l&An:@m5ZT%p/NGf#4:d^:)7usp6Wfk#)Gm:V%`O_C4>Hot<[k3r*jUReO.t<s9N4ubP6r=`
%LQ'gKUX;@qYQp!'hg0iDQfS+<<7B/bY=JcA%jPkl]E+]hn:e=5PosX35-k5K=dlibEL1,D-ORrBTg.Ipnr&^1AJU&?O-u.Iq]9F(
%C$4("3#:/1)&._s"uFM;)a&-]i&qto+1<2(4ekm5-nu_]V3E+_n;-jm&S5/&R'hb&cW*LV-5@/8kA75ebTIsnWaK:TU+EGnj)f*^
%J0:UlCfZ9Nja%*]V_>1WaqSU,.KU.&'9AkN&']\D-.-c7fB](8._>$XSVn'=7u@eO]MbH-1/W3@6t,\/=)-`o>sJa4VL?G3;KOa=
%7&b5td#R?$[.mR]0t(=@=A)iNZ2B*fke5c6euSNL&!_:3[p;4tZ5bC3lH_h)ZW7Q%0J<8-cqP24];L[J&4%ppC[)A[hGJP!H;EC4
%%[&3C&5S)b%@VL3`E14>@\4_G$!B&,#McorM&\m&4H`!"^2QCM"KVsC'Z;,1lQoFlH8N7oKg3%&fH(S-<Pqr'<$]HQi9a%mft4kg
%Uc#PACg"rt`ll[M.)WD#C-H@dmW9Q`raZ\'6&CaViB<VZaS=mo0k7BsS)snV[g'?G_Z-h[et(!?d]qSTb&2f?UBOq[DNkfal"/ak
%DG0S4<#:0*(pZ"2rttZG!55:?a<G$6Z.;sgb2@al>E0r_@9c,9!fKP_E+UI\kACVX6<=#M4o![]$m537LEP@`U.5=$[d<cM<j^g<
%7)J3gC[_1Ilq"GBrbfO/JM.'5".ZL;Wm%PJ5=mFE&jXP/=rNl+#/R-:"1)Wog"dG=m@Ed*PBH3bXl`<@4d'X*50YFTlW.S.SihM^
%6j1=e.C2/Xd"4FriX_1_!I,p^=B;=PSIU0;*:TKBQ+aWZ4\d!Y:eB@U/&]grPXTrh2@bZ)+9?J)h!1(`hs#^G$qd>f6`qj=+Gr@m
%+fG=?E/gq$l!FYXa@.9FhsL.`IkV$0T?":=&E3b,HcBoDIT,,J<(B5(a,[p1Ht\dtK*W:KeHYhbdT:`Vgu\=9d8,0O45[cB(\13N
%n<[>:0=AT^X9E&k,U_PF:LCW+BF6GEEp)G-qjauk_\)AtMV076K!@,Tl`87IAaO()^jXWU=2&pq8^]pPQkSLm.bK0OZI:IUY!5&k
%:9D0P#ISg7c?;[$XJjCXjf+SlpPYA`nM4J0J@t5fm697\3$;G7``AVYOYVb+jfE4k0G6e$%OrM\l5b39a[V\;USPD%9gYm*:Naj=
%"!WXI/nSF0YY5%r9(dtMR7mU2A_ZQ9`f:q'ZE.L(V=.??i7QcM[RW:*N_&CXSAgUN=edYFF='2"]f3.i4LE!+(^S'!Im'CM947iM
%\RXbbFlQEsbt9"pk0dJpOXMH;p-bbh4_&[$.$c<L,>f_WQc2k>@iDu]o3g::@VjS,Vh>u`$Dm,qo2,'^9gPe@'_I'BFkbb:3t@aM
%/mQUE<S3<i3-_aZ32FmFfO>)OA98O<W>W<>?K57I9.fOpj<2gon%f!.$[8[Ob58[L%4]Xj!mZhf)r7I!]B&K4e?bEfkE$-:>n,<L
%<88krL0%.8J]A+q9UjU`=';tGHECMWls^)iF)sm/ccO4L0Et?H73uu]i6<_[;dfla^mL$Rl<U;l`smE^Ep3C>JB4:ZLV*o_[5'f<
%81_Fi:OEaoK+#M]jH/pugVPg9+G(SHs)SJFI:g)L/g5GrZ@sNA8bY(XVc%gsK\FiZJ<c!)-LHAf`G(C\QXsleE+mLpQ[QB`7LWrI
%JfjmE!O#U">/RT[TqIRj;]C5#"a/Z+Nl8>eA<l5s#ql;h1.C:gAf-W>?tc(##J*69D3cX$DFpuj+hTf3RiObQ"@s5;QTth<61N&B
%;M<-uoHhE^U[tP+aenpeh@I%BO55o@R,"3M,L*hh6mp!*6;mbiCdc)m7/a(gHN-=:mFbg\s&\"AbaB=A[kbCl81CMHPj%jC^V'Jh
%=-B=c\HT,1LgkrU7'hW;iM:R;/-omsdVLE=eDd0@9=NPh0^^t&,1jb!`O<A:*Ce.R(gGTHk`)6q&b9JFR>!ppR1FK(#p];-@<<S1
%j88!Yj39\2^3J3T%#2NN%/9tTk2b^nG**F!$Oc=$4X<WVdBqKLNrGfg]mJ7uHk;qa]5h6ZZXXe>4nb'e<P9\UNe6#*0Ec\]Me'UY
%/Zs^?r(Li!D;1_aKI[Tu;fX&OMMaE*[0[WaTOk#[6j6CA:3&CjNM!'eO@(MK":maX/3#6BTPA89NoS"*1q86NlX8F$r,.tgeSEsS
%n_K8SB70)ArAjceAj[QpnM8g+C2N6*WrfB_PVcA3`/`ZeO<$D=jnB@e'EidH/U)e@8VAM["dK,OH4g%p&p>5iB%BAK7]AmoM+hJf
%1F@e/!c4+/m$tN3&PT(`lsRL'J+m>5D"s=sYHB+b=J2IXicD*CQ`c(6hJ'kjds*c>!"pTYPpI..8%a]"+[a]sR6%To;36Qag!r!K
%FJ@9pB.T$*X0Fm>mnc@4cJt0se)7l'X:if*DV0\ipHHkqLrRon^Nqjfm!S?ak^V>\lpF+I,3f>io]V02)=X+X<%LLF3!Tfk*7Qh5
%'AS6RS-H7bmj$6g*$sCbIZ%>ON\jXN#+^Wj@WDBB\u!T1E%:!_0VpRG\tH2A,HM[f8kXi^54pb\8W4%Aq'O*+#L'^S)>S;`/NgO(
%G`srArk_*kNDMuS@g/\iEmfdqD-KL76]r-k_fuSeP#'>`=+LQe0mMbU$'?/\:OsGs4>F.;Wi+H#p81CcQ(Q:BIi`@7MeK?KaCq]>
%oa3j!h$7&QpDgIU@M@#Cn%28hni/=/]T8$&>_=qX1Q)c(>4d(ke'2oY)nB2)$+-;FXe'F3O\>/'rELR<XX('X*n/OAgFX5\m_P+$
%,]PKNdP@UO2ILpAZZ\Pko*ed/ArY$1"*`p;oSp5R?BJ.,YlFqjW%Bo@hqrEi/o.]Arr9:,^5_aK(Q8#]Mg#sQY@VKu;no%F6EbC^
%?`rm=8m:<6^(9J5]dd\N,<]8:aWf`H3A,K<=gWNNam6+QN\Q3X1M1L064SH10N'PX+^u4%%4i-1[dI-6nTG>CUL[nqX\'$DrH>-/
%4>mRk5He5"Q)FKD_`^:22D'uVH:gi'V68F]I-g!)`+?'O%j2QA``cH.(]!FX>$(-=6&b-6f$3QOQE.Er_<rdk2eu\MMp%Eif/hE>
%qnflpG%?"gU?]8@<E?EHe7#V?Eds!ne\9]%5WM%ihJ3ushM22>H1a2i./!aL<;lO.Y7LE:e(,KKGgUds2g[RCf4k`Jir^?KctQU!
%+7N.745+)]#n\(_fjKdEZh;9Alan%]Ha(<fq1X.mPmpJ$$[7a/@Y7f\;1Uma?mXC50^`A$l0='R3$.HRbZG/BE3sD")e*/<gGS$t
%qW_`iYQO!1FgNYHA2::)dB9QI$AS;maf]&CglGZAWM3R*V]<-a]#^gVp@-bDHE!\<CtA$p<mDI"gQ-M('EV*Q3SG2Y#*ZsTdB;C^
%aE'")qu?7<.Lu,Y/D]nLh-Hi2XbM-aeh>),iE-m.F.1*_Fue,h)g$I_@pS(*F\JT,FnJe'0`1]Gha2_SGcE8Q(ReBk;dJ93:N^L/
%rD_CS9(;oA:rf/l0X]q;5;<Ff5I3ZN$qK<DkVMjPIk_X6L#?M*Ph,XSGe?n,Z]rJK6(Jg:c'e-*Wh8"C\U2Idb$ilSetN1UDS_Co
%)DuoX=nVU$;5IDf5ThlkZdO6[ba11Ng-"gU_Me87</1@;40+@YcR..V<B<puIKiptl7ok!k=lr#"p3/,U-dS8j0jp+2mq=A+3G>C
%=hR4u)0HOF6KXB$+\U:nP\`kNRcbBPGeJf'\EKN"Ho=]A+5CT(q`K@,Km)sL#t?eJ[EpAFEu?\*Pgmc*-*KG3;F`e`4N'TTW5!<^
%efOC,KOe4aS[X]b8?e]VA1DF!4hD7CWeh(91^!t.`$t3E"&!+We`IQUaYE.7gIO$B.6:O*(XE70q/n7cViSm@<(4eMHN.pLI:RnO
%/EY[\=YVo%CuXp_]hWqp4(k&Irr7o$jI'AM637jTQ60K#aJ_mLA1>jeiU.'jRBp:LfugkpT@]IWDQAOA"2:Y^F!"WrGBs]3/-))n
%@0D0*<fL6S=>/)I0S2qT#NI5?jCh@DRqIPupYk(DLeHUd=t.)g:fSJdqHR>[iHDnhPZ%E_RI<S&%E0[]8"OIu_o3A\.%.e#Ch)Z_
%JC)h,`ZU5?YG'sH8'4tm1QG9g;UqYV%/hao<YeO:oN>.+c`!sA_uDJOdUb6A*9!tN*#Br]OCV7$XR=VmAT8U12q[4-P7Yd&McH;X
%])+`8Spn]&H?fFgQPRcMC'QE3_m([hg;i;p#oE.Z(B,9\e3]a`\@Z[ce`mCnnXBW([N?V-j'C.J/qO'<ESTsqJgSVdZDHWIL.&ot
%HH]N\YMI:$@A7F]mt8b%1"e<pO9o<S,l_F0Nt*CV(:(AM3'mI/OuX2FY$KO[iJgkU]2IZ<J5+R*S/<gSTL:qQYjR.=;-Dq;I8AN;
%q@\4]1Wl.8SqcF^`cDGEAiW"\@^9h=*#R9kVGJBSee`onI;fuMQ-I;Pi<Eb_hX&Dt!!mR+_\KF(K4_qNpd/hQWQQ4`m-l>1qp_-p
%R5/nYfttuc2#>2A1+C*XL:"VMar]NSm8cMK$5QEF[1T:^[%^"M3Rd=8DlmiCRTpXSRO0988g&U!nbji1m:6^)i.72^**>3]Cs%mo
%MWJu:VAOKT_19*os&8!&`uW`eMDS"Xl"kFRrB.p,U`n4\*$MS"R.-N@!6[0s\gqun1Jt7R;]qTBY\WTq3-g`Fk.&sH1q=>r)*_..
%dkCU/6jJ>_\-.QO(3ufpKTnk)?k1[7:5[4k>LSK_O18/4ePmj)7s"/c(Sa4#G33IsR&3^pk1ZLp^KRt'f/6f.\:1e]ZI"G/W'KE2
%akQ@_E!V(UOJ*F(\B]_)%,au)$\;(V1&$9n?HNGu28"6i/1h*6Un+16,!DZT$=t^ca47?0CN75?$HDON8R[[)K,kqFbWd:F<Z]#g
%"BW0ZO,]^YR&Pg/0tGqma`?p&2HnE.fWGN1H8_Et@,/'Cm3'1qMpI?k@9itI[B/>c)=Qj&cc,Z``_75D_`.f2HIf&#%??7Nfq%J:
%P"6K9`K=`%bepl/9%@#`M`!O4F`IV_C#4G%h-!"&;1<[QC+JggAc0dN\I>d9rhr;#RuA@109.P289C\m!jkC&U6;63[QA**?F*L9
%MfT&)G]G2`TU:7L_g``M%h-o`DYpq4H:[TPkS]E>BV/!b/V8+%liuNRbnm.cQom`AfD(e=g?I[PLW6Z#B)miu$+:qfO2Y4AL;A?4
%0o<9u5\f7XoAQm-.HYk+R>a=/@)!_Kd`BA2TH>5ei4irP@B>J9,[*ru:M\cVaRm;1cX[](r4,CaACkZ!1^:&"p,DZBSteprKdOg6
%o3#T"iq>^h*_VR#Q3>r3DQHiU5buL?g=1IrBpFBg'>mk8@9C#\*u0?YQn:\C=P\`jMo+E*RTMhuR9fWa$[Xai*I&78dDVluPi$R0
%=]oPI-4,BK,Ie3,U1ef6aDWg"]*cBYi9[Iu'TMDC1_S0ZK5S_q#Fto,/$FJPs4:r63^T'sI;&8oJ8"c5$#`1`=hX<BFI+S9,,Fn6
%Ff_1*9m87e@r7PCW<?'T:tN>jgS">IO&"Z,cb%ugb(lEtgI1q4CCY-/(NpmlVLIbJ9f_f-KgsTBX`/QeClLO\b]FlnX7%M<1mdd[
%D!X_IE#;d>(6^`/)#jR$<N(O<[&6n0q8fS'+K1jl1A`1/7E)V?d&44tB]iC,IhV!a%Od@I6?$>QH",EcL4Q1@5e4."oF^_gn`DH-
%MYr%i*"t+,4Cl;(o+esX<=rGP*c_ec>2)f8bVT&KK,Vb-]tT5H_:0$!Cq<p)KZ[qc7^G9g<qu("e%m:7@T\`SAIa>>Z$/D$&ik83
%YG;4+9_@-I9MZGK\"EEO\f9NCmn]j[R-(fYYU6blU.3cu!Mq]P@o?qEbg0VU?I>8cnC?b+l2Iqh1agB"DGLfGVjrfj\mi$dCp6ke
%,sKp'</&['o\\[B9UUdMoABR!V\7-QH-/@<CJ2_8'Wc7?a"eSs!6uH>L_O#+*9[TAY+)D:*le%"+X<9m_s?sn%F8-&6.]67OubD(
%N9]GuJtl#l*.0E?I4FpUFYa7AML5Ltan@I*g"G.1A1gO/UCW]Q<g@E%qRUdQA#V#7a*%!>msd_PC8lLUl#Zh*Q?F/=Q2]@^[<*M)
%JJ5^@`.>o0ho$-Kid`c@M3aF-3b#8MP\%8QEK7-C[+I:0$TR9MrFU!.6eYgL>?&e%AaE3rCG@UXQO;+JD;i'D+W`Jl+k*pKiE9Z9
%-ts'Oj/N0O_fDGpfN'39JV^@fWM6X%(D4N54MKO&CmDt,!UtB;KC9;q.p:?1&NMp;UBbajf;s^05a&2/7r^.n<4#e"dchaE>PWg=
%q*E!=1!eY,/MCP7nJAE]e?`\OQbd">89Y:mYdT+@[9CU7B.3K9AnNRgN_9+An`+Y,.$J0@WrQF<let>j^7K+.^E/?=kY."oj'o6n
%X[a?.chf[l74CUs;9/fXVjPSlU.i;tnFOejLWZJDWs6(,KA=7Bb,$ol0"ODQ7WB5tJX:h/#E6\"VqT3XUN[Zr?%o!US]X!3djWH2
%"0Na-*B;Q+Ba@k@McDS+F1("+#b,DmX[R-'g=bn';$N\#GMrC1qc`oT2b"gG[2(TPC-H5UO+l+/k7hul#U._?I`"tje0N@(LAaBc
%KY[dV'j$-\mkbcCjO%JoSN&f2RYU1VU1ag9YaI&:>Ih?j"d8[)*#J3'VM2`c%`<Q1Qq"?E3pT9'IlcZi4[0ikUBu6fqH*Lhgfu8(
%R1E@m$KB=&_U%NF8K3'tDLNs%3:G[m$N`pG59C[k9#OJ6k_fUuN%HFO*&3MhAm'qgjN9mdFX.t)%&9ZI*TlDae7]S!btUC=em=nr
%KtGZ/G9upDFgL[u/cF4Z`/\-oLg;j4pLDjpG&ouNiZ'C&=TMEC=dh>#T0>b7?^c^lfJn#7\]V!n)EOGSO%,X=h=4+;h]/UlGEUqG
%%Xf=6e(83$(OEkCLl"U!IO^b8`eBNhkn&@iGEH($m,FuG0O^]b5Xgepd6Vo65*nEK4bTan'SNcnB8<eID:!&]HeaaV103G6&nd^C
%1k',Z*"%`Om`8!^3+#/!%e[W43.;21!hOaY;G%!r9B9>4I&Q\R[J)?VEQHP'OV4pfNbrFc0Se:m&S5u4CQ(+/L`$1AOVR3]pZa":
%ScCQ<T3ik0b+;^=a.?LePefAYp!r(re["AFS.sAK))_A(cqol(+p_8*oH6q.mbd9SX)slc9^h]!?!Tq^NmNt8+)a`6DlmI&PRjjB
%5&cPCjtUeac8Q'L/SZIi5^#mk!^\&AfdO^G6(E'sEc^*$S!V?tb@OG$[^bmi/`lk7k>fu1p1VsWkt]'XV96]TG+pm52`]\WZV((<
%hUB6"\ZaK#S>Bb\o-L.Od=&$,&i0t)$2o-OK%Hqkcns2V`Go@QjXIe"I"UbTea60/b/k+[FNLs(+2i_fAQ?hZh'C0rHI8/Rm?1Vm
%XOdJVEXKOhPC3>-F%q:*c)H+2n&I9c%L\FTl^j>Ddg5TDJZT&tP?C/W.V14uc=(=a12XkZVP]t7YXS+>(71gRDPkQf0#Q4jU,leT
%+/bEj0Va]X:`-B?ZiBN(,QMKGK)]ieiho`Ie9mi_ron'Aiffs`rf_Kqe=&F*J7hOJG$1H>G3/2LN6Km_O^Dt#8jFV]#_;LZDhl-h
%m9W$=EJnO`%bZU_n9N0oX"M4_S9@FC-.-+E8T<=FkrSWR?\EpU<t8kC9]to8hT*jnGU:2^8D`XNo=BmTQnXB$<FqA;`1iOs\,+AH
%.6CW<eUIpMA,dNc=/HI"m_5@G9204\ZK"*_2?e/`Ae]%5a2A<Q_n?&'l5ei_i4:*[bY$76bOXcLf"qWSM!]Z!>42l#OOULu@Of]d
%qmS,bE[LebGtbqU)Q4a^Y/;oI4ru:Z,qd;e]LM]+6;:cP&Bh'*%1?4Trk*#'hY!4>!sL.E'^'/'j4_A(e[kumS!FiZ9P:!bm>LMb
%kQU/#7S>NtU3k`c8L-c,bLlJ@=8,bT^)iXB5!=!k*.Cd!,u+#2&ZuU7MCp1s@Q6b1FsSA<J,2uKZ/eV'&mO2cDDB43_pr%p=<L.Q
%2&P+Nm*n&:j1Gh)eDEm>0I23F@G2nC+!@g/"YpF0DGPuPN>:i<@dp6c73$!sN5HQ.\tZ!+kPYl6f;iQ%*+:FN'i#9O$>tRkJPUkM
%-j=k#8)qFKb+54^kAsI"[ag,HbYU6C-J\S^N>f@U4Tc''/9C_o8-[7HR?EA*Ur.=C*SR+E:=1M?\MM\UOF=W^2A4o7Uc;-'"cb[.
%T.)ks`XdIoOZu"Vp%#N46*]DA?\SHl)+u2?YJ-5t%n;Za5[kh(G"2:B0kVq]<LjnMkNf'0pK5%f1n::b7GN=;$Bbp4FZ3AZ>D9>>
%#7S_p7L_UI<98e=NgfSfjG*<m,dK%$es,Q]mY(R5--@X<YD/heEdscj,j]#h-\rSRO0-ehhoH*]X,46p"I!+)NtH]):"5*rk"Ph0
%H(3Vhc.(8>ATG;_gEWh:kNH83(u+n0lY9V&Ic5&;*ec+AXDR6^MrKQVqYNRqcR;qlhI]?k7=(Z0bs_ImW`OpmdJPO8[JY$uU7\im
%(oqUKiP-sETAMsW]uHq3\BMdqj52I$/?I>&]D^m<%;;JXKl"%9S]hdT*:+g:]oA!#$CFjFNGV>G3:BM#ME+c9LF>Hi/,iS29h_=F
%Z0W^L!a0m&Op1hI=d8A^b%9ptF2tR-;iA\9A\J;q@j*oWS/*i=/Z(i%j6P"0[h^("IGHNN"\6h"W^2,DNNNc0&*$P,D;+E$)\s%)
%l-s=L9d>.C"8re__W0Tf".F5>G(5QK:V<;KMgMtI>^A"4YC7>G?[Yr=0DO@`YHDn]Zj#f7^-__JDI6]4kR9c"orEueZ9E_[4G`2r
%5/-ntA"+LrrGqGYbFcK,O2t?a='%d)+.AMldcsR/9//B\O<,Z(q'F8um]'Xg[D'Ep1Am?Mgo"h/1J@bRg>ZkhDjXUOWU#-bWrYds
%jXhsc_i3rJ==R!s-N:5T-'ja*$Q'YEC.<\\X#?l'"7^Sf2k_pu>][Y:"c?_WnD1'Gmbkg,faCCuB5]LQa6&3gi(9o1\kk9'1/Fp?
%)n(XL4Zk37CaEA7R2`U=l_+SCmVdmB!VEX/+='!!=P+lLcMFb'Mr"r=;lek!I@,&XSmT>RTd?r\SG)4F!FkMNIca^]I6j=CCtQ&<
%hLSB>/?Zt"J08fm)*F`EXt"$(a-:bmVX?YYb7.#YCH2l'&5JZQ62:Q8kdZK0;+Qt,LrL;'!B3HOYn(nWH-Hd]Q-11K]f11jb:d/@
%`^=atb:o03_^+TD-()dMGK[Vj`<*jCD#3.%M!srsI!6G#CgL?Acnsa%0Mj!g^lZZrjM`K6Fq_\K)_L9+@C!VTRYX:A`7Ojid%R@f
%"%*OM24@R(@1V1m[t1g?07J]\;@5.BrC];,#(p[Kl7#h0r1LD!J][Z.'T.ao(F$@H*oc7WpX<Rm10$Gogc/&er_qRYk5DiK(++o*
%gN't%>Lr[0;FS3)b[=rmr7j0$]BmDq$8OVj&jDYonO:"qC`P/\Yk:#A_c@RK0_&G3p3"6KS*,^%T8YdT)i'-$Xa#%^$ZC!fUg1P"
%hcgSh-A)lid3D;l_%L75%t6EX,Ja7megXioZR9Z`2\a1,@sEo?`!h&DP[N^Dn;Q#$C1j1d/:b5hnEhZELZp@%hZ`A!$dDbA=Gi7k
%,,g?H=TTI,.?Qi]Iqb"F>/k+N+!#)M?_/9[r40<X2_[regQ[gJ13#oQ01;JfB<N0[BM$5%fk&f>M]0Trl`SKAEb,PG_R%fX_W%-p
%,rm<EDu0'WkO)g,P)LOJhb5oO1)+0<$F0,p.@s8g<X`C&.kh3t;%d`T.`m)l$4W4ha>g-/qF8]KL1rC994TrHdH7)E)uj,HWg7dG
%c4M:W2GF-"[I0.,;5$>8'9B!TLJs"M+K,(g2!@8jM]hjq*B51aj@<hBW;1deHh7>YnlAUt2abd9?quB&/QtEXih!P&r)V5=&W-G1
%?F@Mjg*0tFh"q:))LfV;m,)`65uqP^Wn;`9)mmbL7gl/If5"c*g,X`ALI$rdCNZdXJB-jS)`@h^rnb+dHAU&Eg+CgRS$E\N=JDU3
%:;\ArUJjs!^Z+\IbC(7['1p^013#f_[1E*R/Dli*qf;'bR'dtufK+edM8tOi2#ZEJn?>9'T*XIXkPnf[V!6VGUZgl'O]0UF@d!)\
%l^Io<@Ed-:VTDZ@o,S>q%<02fAMkW_@dY"glg!T(j>RNjUr,N^`gV>,_kL?YQ#o<9?_.>@\41RCb1o;J76.`B`j/*&Y?<c'lk*#q
%)C28dRo!Nfa'H`._Gj"QHL+J$6]q0"\+2"bGN]m'IBTQ3c=(f(?&XGQje1'A(56)th$@n'd,p1;jjomh7n%W58IM\4RHQDC<H[V/
%1c<RJSB\)6[EAlM0R21'g"SVl]_>2QoHuR$4(ruRK5S/frL_QPH+&R%g?pE%hOr*RKY>bU'cQ2]-OE0p2D]':GL9^o3"UEdM%CFV
%"+Bq=a2@64\WY/qg!)6VendqSSX]"h,'tKn[J.cM[(G:AS]pCb7Xl`?iMgm?s4,C,a/Mt+@)3I::+`b.$TPfuG0(Kt[pbhZ4s15)
%Xd[f)UKnZ$f*+WDZ)@3>9(R'eGc@"BOU97&&mIsI%U$(h^`<r*i^_TKfk-dQA14?HK0piRS51-./LBEWgT`K%$&:?4&D[Sh]g#Go
%%\ZMI/lp?*;csRKB4W\_j(Q1p92Y26gj77.K04^!kP1p-a;o"\;hNkO.rg?be)PuU`_TDPq#9'D3:T/aib*__WC(adrNPm$IjCMe
%\gU9VWQr[pOFt,b_LK/i;sp7LBhi"$D8[b6]1@9G?sbK*C!hgHYEi2\,rNW3&$'9\nC7,G[B-0`Q?6@`h5q`'C0.H)Y]RcE%c82f
%Ik''NAOWuZ#Q&MKXE&\_[W&aoS>4ouYZ`*=?fMH=9GP[gb??oqSBiZF4uWc`a)8FjE^"[$UJlBJ=`?QJK=CdDfF<l$lXP.,+"oV8
%G=!nAZJ^s22ZNGY_:bBh?#d@f;)E^^:6^qWpO_YIY<CB24=oW$hH7:43R0AW2IhX7gR9D9fH^[PDpYW;Mi[&Vl)#6U_M!^n()s"%
%1jV(HSE0gT'/j]BViG,#eh_O6r[HahbgB><UV]?dl7U&T*Uo;goeIO[a7Pe.kqj$\CQtob#XK2q`1qHNjNc$#PS.NLVNh:QWpVo"
%qUdj?)Pd[G8T\7$?deV;f#[,JNejcADPk1F_UK#F5;X89r[E3s2cM9g%]n(R^HpDQ/3p]t+r2G==OiA4dd0?6/"&3M+?:Hi48.o\
%>!<FVh>dC#K)SV(<fW@2,U[S1a@Yd:4H0(QBVJ].J9dB8k$VS?MDJBSq_dLF]?I+;dA>H4.DBBSJ9/f8qp1T7=uD^:*N`imXGEMc
%Tedh>n4_.F]8O<7acS;KC.0__"<!!0=4,A=]"'i\l!l=/6e<Jpi*;P[\/J/X3SFUIf])#?a^K#&:J_n<L'gQq/u,I6\\X[?;,VYE
%aCr#HY[fG^cGWgfif0b$a@XKm<8q)';'%pKmFT"/N;-cJAIHhN@`Z6OTiWki@5p$gEuWZN=*t^\*r&cX!;TjD6(5[/kd9GMS,?H^
%+(NQ,bo4pUfJ3BZi1H99*+-;PLM4TM"RBcoX(3I<RW&DiQOGrs2+)H01*ob/XAU$L/75:)]VKEQgr<5`VG#`8=ZrHC:4m`[ic,@6
%^@\-FSA2H+\$dSh<1l#_"YHE)_E".;Fm^Gbl).rZK^:tD8)FA2&:T"u;nDfhq\kNX]CYLWT!JCo&*KbW@0J![NZ`k%!D=tE&`A&g
%-3Y%[G-tSs1U)$Tb?C_7c>?nT!)h;+9(/$#g8,=,MMu!"*cF9"Guq$(Q^q;2)L'u`rNFHiF1q<@).35L-H]^$4I?csf>%SsRj/WI
%0nra68I\E_jbGpJ#MuTmT?\Rg6s\J:&PULGb*kZ6algE@h)7O22UKXU_]dT/`Ys',<Z[ZAjR@k@^?(VG3P=n0TW!Pg]8:`=Ybaal
%G$*CnN!@,!4TMY_d<8CRCllhO>KL*Vq7bR6;Pq>j^$JbLjP3j[g!X&;i8jVe-dcRbh-E^nRi"'LZA2RKJuk2J[m#K:.TJ+U@lpN]
%XRR#AP9r[)>V$-/-Vc$hPJ^"1j3Q="Kt,c6JJnN2*R([\=oZX0KiUXcCFUl\>MK="r&fa'HF,*0+8A>XapVDeR9?nQo^7WBYko8,
%(A9MBmBdG*K<f@a=S+u+@^-tsc)$@p-VpZ;q;]mLg6F0EWaDHp5XRs"n+UH5_cg.?`[Nkm=ir@$X3Zcg#(N2eZC@'.XdI3@_9fD^
%$*dZ@"lJt[&Q_a)+1m/jpK$TEA+mdmpWARYI8n7MU$h,/:D)`)fjngInhuDS4^C*W$T'c>1$^i<qhq4.io*4@IpmV>f3dP"UYS)4
%4Rrb*pSWobM%UBB5kWL)(+R.J!ij-^QrP,,6UH2]"C5#.X#Y<c,L@dZ,5$q@@/X,G42$K(aL7LM9GKfYY8H&KH'B1[.;D@OfE[Mt
%7_oi4;F'ri#mD[]Y$Y:iQDM9+*As9j#?k,Q*2crlQeA_jBGC-<@7$b/cBLF[eObBI!bp:;7q5A[Tb=XkQ(uThiicJpj0&odi325L
%1Bs6iA+6quNe0)#$>nc5:q':D'?@uPI[fI&P6AeElY6IGbG[`R+6C>7Yu8PU+[';a[19?'3&I_"AAAH[SR)s,I3+2G(`Z:8l*ldQ
%Hg5CU-poKQ>9X<Q9]0_&c(mP/g+FMQ@*MD=Pem4S4;(VV_*\I+s4f[1pQJd6#LZA42EST#%alZP#O=YD-P8"*Url)j&;YQ+Q,:iB
%%SKq(,_<s0">G7#U_-?U$@A\:LH_)[`10d;WU'<hC#i'cqacjY&'iQ<PpDAW9*A%KZE4<U/N)B/=r&q*0]):-aC9K-[b^qN[NSJ:
%NXHgpLas-Zb6/huj"7$_TXm&Ml>A`94NAP1+h"CS#BEIB(S/BWqPYMt7&4a=^bjK-^-N[#Ma@`&MIN8>#sd>VqLMEeO(k<F1tfS?
%pr%LT/1g1r_!V*5prSAhUW%S:1U=(aMCh.+=Hr5`38CPMKX#rAZ!rkm3i!]9\8ofHRf;:Cm:0'_5r9s),'?8g/<oqGN5+PZeXg4%
%64(_-=[V6V/Aa/-LAL]p\4<(he:j+^]-d7n4iDKt1eRfCE.p&L0c:;s3Yu]*kUfIOR&"b1oP9BH!GMd&2dHNdi=.ISoV"QoT_'"u
%8;ohV%PFMjM[V[$%CuQ8q'[dqJLY9HqVl"nO6*T]?m_mXDAWkeQ=;G3?Z[("TTC`=b[[sGbRG+ESGf:=.^+ShJ`GB;fP-WKQbFeV
%KoZ6oD0Bt+_jKm-fO.igSZS@,-D$?ElC\*SVba_R=h_4oMj^SCJ&drjHo7?c(r,j,j-$S!OS0gHj3k@a0WA+sY]IfuYte^1<BAF(
%Pu<RYJ$"\,&2I$M,n=suU)nk;3#)a$d7>Rt#1rN@h?/,0o'RSbrhJL-<V4ABQ4a=hE'#n\&Oe&U*cjOo&F@@iWEFEI0fN=86\qJQ
%5bTQp!8cVIpA:1k[^!f[e?WcY8,IfHk8iJ"#dcOq[EK/E7)TA*^X)UE_^3][OEC5O/OOMh7RpGN8mRs=Kj'WEA@Z8eR[&o4G8<8!
%)KpE<8T"=lqI&%mUSYUb\K?qQ7pjb.7<4'taD&t8QWA@SEs2_^hV,+<DaWToVB3^gBZZ8gc9Gl34=]7/pC+n/IU;A<<=pH@BMkh.
%<f=7*B$3-Lf%#BLVQZ-44LI@#kKr/Rf;@ar8-qlZIG3Gca,')%;Q!eD!+gc,rIO`YU$iE1^A;;$hP.aP@["Uqe./8D/"udd5:J!,
%)VXS(kf&6)l%@0Hj<R^$i+d\E%.2'A9to<X=@DZrh;7i*h00\=;@%'uC%>IoW6EIUN,,o-/FfEa[t0"N"1d+R>'L1(bJl`UT6L`+
%!pe.%cH9JY^gs[\cm%l`ct^d![^$A_<Abg`c>GLa?1f#l&@[#KmE9W2S4odjmb;=Qk*KY/^$Mf1%GUshf&C%^g#'JFmA`]c**j5S
%!f8O4#,R^Va"E`/6HiDs#5t%P;J>;DC0GdY@1Aeum%i.YSKcV9<^<9Lg4B]A"]eFsWn'-',Djs\L-)PH;aRW2DSYYk=>f:`+G-h/
%"[Ng"gaCQ/ho1Fdk%81rm)04@\DRLhq3<#*U>QT6LK-U?4H5%m"!Xd`.d.u#-L++rJ=l)34KH6'TAW<g6N[\aFGmq5$lh+8D.:j*
%km-B9,3Q/=Wm$=W-:PXDX;ljJK$Oo--)Fng,PkA?GBrmd:'O/Z=k=.9S1RCg,N=*q\f4*b^Y+ZtIG]<\#"?%Z>'Q\5al3EW.)PN7
%kRGF.X.CN'cpG&fj<7'Rq`Cs5Xod`Ys0DLAh<E?]6f3Z60G4XF8*7H4P=oM%SaB8LDnDp]Y_49%/#W)8=@/0U/79+b@i0>7!g/>R
%-B2jH5F]r<"?*\H&G"3tVa/*ZYRSic<jhd`9ajP<r\RHjF,0p6R",DEEfdcmjR)]-9>tP+a08bG4_?`?N@@m"/XI5G/MNmVYDEC>
%,8%a^#m>-IfA4XHk?guV(`rs;G)`rKrT"#AjU]i*pb;%/0`>$G!_>alS/u@0,V=m*(b?+EI(V/e'(4c(n,Fea@Qtc\3eu/T/:eR/
%29nIU_<Wf5Eu^L_mR+e,-J?V]Vt`q'fS;0G;9N&Cg=\F<&qnltZaJZe'Q%Hj+jWiLq*()Y+qZ_lm*Q/pA;sJDG]D`@kbMBo=*kpX
%Pi.a%B]NOPaU@>7r-GTFT"O4_+6-/`L\,YDX1nE]-.(?ZnP.YhqgEfhBL]qFg(&XBGV-^4M=@BFf5MbcZp'?_fE`14]#e&]0ik-Z
%Ws[U"j!u&C\&,&C4KrWTeKm/XWSGUl4$m+j,!fuDSK(3*2m`bDUSntH8gZj/N3t-E6q$T>jGc"jos#,@Dc$\h]T&iH#-ar(F@P1\
%5Q2Y'OFC%J8cc-_C)pkdJiFT#ef[7eaAkj_k;G+u3'i2*odYp6,3XZa<&^N`9fg3YN.?DFgRd9+?kEO7$bj5P`t7nuRk>"I;,??p
%Cq:TAGEIZc4R>*I-I,Z/O"r(Hc[NSn"L.9ub]SEATRnI8`@fYscGIICAu3N#H2&.g)lXphHh&=H.Mm)t:.2.BONQ;rlGR.bp)H>r
%+>XF(&h_2CF)Mc:%X?69:(rtf)qmmQ0AE-jKRDSNf]g8==)>-5kjAed1,93Y<4&3J+YgJsmNQ:P=ArnsPr8'=Tg9s^-l#DV:kN[Y
%b_ad_VG2^sAjoQe1'LsVa&A'KAd=<nT43S4p\-p>W^i$Xjf#0^FhU$fgEPkhg)5GEqIC0(Bu?_Pk#e1p'(_a[`mkn-@\I/>71[,6
%EQaJH.AMDBZrlDaoVqn4S,0n"pZ1Ia&X3`@N;'57s4LBFQT348e\#<j\]&b+o0TM*\gc&O9A,5cJ&3eclr_Y#4P2]h^d-)Z"B$i_
%.^K!$869MA<hn,2S-S2QhS?.n,`#NcJD5G$oO*r9/5S0DUT1)A20e(;N%Y\:5;5aC]'\$XkH>*(aMVR,_cr$la,#V5]13.fM.`a2
%:8pK/qP"INK;?R4C27DOhY$Ep6KW2:e_LA0)]qLFi2H$p;p02iP&s$b_*7l;5k.S.2[]j1+Z%FA*)u)(Dtn6u%%M&3q%Q/[$8**d
%&-Ng8#VNEp;i52A,tJbk(1KdRWY"6/+ot\_a,Gg3"7jK,^P_D3MI"G\-Z8Xg`XWU**Sm;+eGCL$<ICVMKm;-7&<og%&9Ks./J8um
%QO'<Xn-Cd[V7iu65d6</Pfs@.4eO8C7R<`'E0L*cI&RDSlfb+n/VA2Z<a4SXn`XaTM*Sbh:7PudLXo#%SKpo=1.NUA.Ctp(7C/gW
%@&kSt/\2iOK4kC%-L#$jb%n2ieL4u^cIBjC=@LBDn1iMAQF[8*M,WKdKb3'.8-V'b:sot&?)VslF[NGW[rN++!"I^W2L<T)&:L>*
%B8O&D%;)iP1]Y(G??U>OAm8MMob0`%adc^8U<;e0I@\m'Q/gVQe<@fgb/!$RWemc"kd(ZD%%>`f>WTLNh^RX*PeRQ3(en'f"k"[e
%ObJCQ8j^o_!NZ#[Z,%j,Ak`m2C4"IoisLj-Pj[bS:dQ3?=O!P4@?A@_p^26G>W,Q#5Ss4mXa+@9*P%ibD1a6PEJNp$)+.F?I.SK7
%+I?l@dWlpa9spLs5,'8VL:.C/0C/CCZ]>;lp2D;D[qoM[G4Ftn(iV58@'W'd_HJd-Rrh16#J>(=[ZG2AFRuo$Pl]/dJ9r??<$#j7
%!YYjmlXF0LK+rmG<Z0$/5@X.k4#l,c##IkhAp!4Z9m9WA-)]EFck8Ao5QmEr[u>l@*hZTC6`=$:,7jl.$h1)gDM-oOV`&5/`JM!1
%L-i0p.+:b[5qM?O?elT0qhgk:V5d(Gr])lqPF+a[/mo,$8.h8_2LcN_9LMP>*X=5J'R\m*:f6j1lSroU(6*ruh9HI/a:@4OVc/V.
%O2=:,3J%NV$q>PVqSq!T\"2<(F)"+T4>[=I^pSqTp=?!th81"]R@rII/B4$e/=qpEc8B^ueG`YGFJZCfoOS:T88N4Kp'P,n[ZO]o
%@XJFA7BU`lKEp$i+qTe2\>:[&ASa$ma1H\)[Uq!$l^2$\QNeF_'^9"^)?L3<!!9?hU*Dp5\-QDhZlpsH2ZnXsLZHq:SnLFQ8Er\7
%7Uqb[W31+rA8AH9OMS4/$?8ID9\j]Df7;a-cH_F+^=s+ng%<+%SP`f.?d,_PbEn<N-&M"gE'I'K[Hp(TV<hlf1+bRd:qqk\.CJ2f
%?e!1R\aZ9K.5(8/;>-k<6'7]a5!RDc3rO.uk!pf\UE^NRiMlF8_`BqAXNut#Eu3cY>7eHmSC3;=kbBS?Fc_:lEQJtN^S\fC3W,td
%%\mK=0F<<;8BWD]J5[^#P`!N<7]HX'eKpL%([nI"FM:gXf_1D01BfPpoZOu4C4;"sJ!lS:Y2PgfUSD'@9]^UG%`pMhj!o\Z)QWH@
%<\7]4&7,$EqA:ZXnALYZ8oe-3GW:2)(C`VihOS/A=#3gnBmqq'\9qdd.S-2ID.GB0MJIk'[72GSVI4\0"kPp$$^P4VNTQTUCp]I$
%&QC0DDeP[C;;-UALb@(4$]d7bI\lWL354.&J'iSn_3Y6sM($AlPY%tkp_YmHLc-)!o\kajX\_(Oa)$lVd#^0i^>IKC&>bSj_N.ng
%e'LCnUK]b)X'$)E:G\M@o"LC1>Y\eJFmXZRr:1C,emN/#USH2V2NZAb5%")%UhU-qDmH08+&c8*1cTi965XK"3#'<+94r/[4*NMj
%m&ZfGW6D9E'A>!:?,\NP7GIKI4u_m<YC=^l2PNf`5,M-n:(I0X7M%9[Fog`hk0MH%.TWKskLQBO9),9X^=9O=]LS+0M'd3EKC)S7
%MaS[9Rl-qHnr4Lj6oIb]4mZiYM)/HYEF'1(T($u$BDHun=m&e,]&VGi?>G:*`4<d\[Qn.)Xu4)SBnTP9UUbUr(^V2h89[ugOg9(i
%n=_b&!l-Yf7M&BNd@n?CFue#Hot6r9>F,&K28gR4GVSiUU8#d^mRWX[@Q<.p0u0cQ,_ebYjWTWu'H/Ps:.^2UTESRhciQH&^*44?
%,AP\W571f7cS.k2e-G<T)2K]0"31+pD:dPpb;tMEaikjXgnbOToI#\*)Tc9S)1b47K6ga$Rd[!;P>%(_\D9WQ^Wdp/U+Z[+1:>N*
%%cD@<$AV5rJ1e`o[)%1kUA<:Mh2P0/ik7VapXL>:13>EXE631^e^7;`>\]4t//0$ifbYue@t!2bJ'i)%R;-#881>U:R,]a7:n'1,
%N.iaZ`3.P>p&Hl0GT:,1>\Q=k7e$Z+Wi/)EiP9HdK&i`o/OhdeQ]dOSg\op=eC/d8eh??JHqBor#IT"'eZ'V"n%ms"C*IB"M0?"U
%#rPOJ9TXcT27>T+@]K)5/q?Keb+u$"#a^Xh8sN`3%d=?V-M%4W.\,C^O^-Z=\'5P0D=HBF2p=QX#%Wf=WX`ZtU-8e,OO"]?QdGo*
%_j,Q?hCn^[*l5n3hFjs02JbbUABFA08p&j&1a']o<#-!10HM0f9f0jB$[;OAjjLOgj+_Cl6hC*7BHOu-`HK9"C4%up:&\kma>+M_
%%"?:n0`'uBBa[(Lld($Uf:\(L4ReP_0C#^%ZM4Z.38[fT0\S>&EUMM[T'OXNF;]EIJ*pe'iDTX+4O)oPTNnY>/n`2SE4EO8EnDf0
%nF>h^]jkmVH:[4*?$^diebRMFGCS<!4_Yi3qQiOT!sriaIoXW394[d5P.WXBS+sih#H97G#))2l*[/PcaDXnV1<t6!N6g9ACZq/M
%d^IL5,u(-#"/M;jfH"JNW"%9"lf1la3,_>D)(p"[43.YrU&ph,&<tVsaAd+WkiHiaCLS[[rbm:<n=\?8dLdT<E<LJ_gCiVE](A6\
%RCnV!SOt$k.JPZqZL7]XC@cC&YHfOJF$\V[NoMtdRu`Zj:h"e_>/PV4(--kMWKYMhfOin]eL3"i?8j7UrSr#+mC#P9nEeF]kYdLi
%B<V='q@M%9^k-K]YnTT>*aW?D/g3F%1hm%X'#`'eFUTjWV<bnh-pt&EP/@(&NhL%^mX"]`IC+O?jDNuYKBu@J]D*&[f_FLKrl!p@
%j6Oh?3.'[%5!`^*![q.Qpj.EG$sOW[B^*K@dG66(37hrdf_bI8TRXYde1Io=V6.[NqV@'Ch"^KaE%uYnm<*,TXL.N`AFdamq"%=1
%]=QLOC;/eSU.=\Oo:7"VOST-Rgc)WpqiU,bj[IukX=.XPK8'XKGBB)*Q::T7"VAqiF6X_BCF73j53%dT-$W@T)NP+E3(.\J=NNIF
%_^QskjbsDWGTs%A2V=j!N@.=a6+_+J\u8gaR/r!qrprJk]V;8s_%TmX*l&I4&#sO;qs+.afV;(oK,V&(KUs5!E^1lJlu5.0Pmbq;
%l)!es,*P]X"4A'CZ<@Q&SV8qIS!>lU9t?uric_T"!!#[GSBP54=3OLoVfsQl4t3.4X+B_l=GdUnTcqr=2kUId("r.8hKMD-KcoJh
%Z+OlThD6mfHCF!]JV'XCr)H9ES.ejt87kFGBr@>8O\:"V#mut^NE;lE92KO1K;Y@Y,Z"^@Xb*W8lB]k3b%:rYZ4UnS!@Hqq]D/Vd
%j.])rXI%Di/snHjSoY>],d@SN-*8V>!>d-;h[@AD,Z)"g)NEBq@)>GNi3RNe8.SkgZeng#"tjBY"VX&c>>Vcqk_=669DG1HcI.E=
%c6keXh+tg@qBUu^"]T$.pIMI?Ejhi3<9b5]O1r]0["H!K-g4Te>%nhXQI]5Fd26(.go/5NEHCL>&i1oRIYoE6aV)C871Y]/!SP`I
%!!^uGp_BYdmI5raq!Jjr;k"RoDiWp+3"\0XKoTKc]lJg2:s]R5B.>c<pHXKQ%qKBN)"7:u2g(hgOmsA>S*Z#g9?T5Fa<?[O\bus*
%G<N0%?NN`sK'Vq:gO]fP"93X_drl+;nq.CqI&Qjsa42JNFn#M];[K!+f\Oh!'^7GJSr0NNlA1rTJ9p$c*F_CgTOduPm/oK;n+$>J
%c4c+74VMFt<t/'HV2l%opk1-VYr@[`/-6]ifObefLCe7'/hu(S(:._2m:8&Ve$qeL5[Rf^WjCmboEFMsV[K$`-$Y(,)mmU0\#ukg
%.st-7ed)#F:_Ss7Q'il9_%F+ZhMs"QN5$KP/dTY'[/jtQmNC_qo/FY?/[6<f:2OttVJN*FG*)pgf3p9d5Ui]KOD1/i]7ot&l-$ej
%Ysq5=XYi7BM!t?kO+P4`bZQWdTWqOT55Db.j1GSdq#GIO:+!!aP2;cKckK&kdI#gC?j'q(Z_66\`6kEc-cBibF9@">'.e&JPV],I
%O`FF,QTu4beT&_nC;lc&f7J#'C^Ai[PpaWc)Gr8_`tssqNeNlj/gt;mXI%&-llDsN2O/K!H?4^27lsk`WW1L-5q^5T;'#^hXCZ_(
%GhRF^eJtd7O9ha6=[S]X"[DfUrC!e#m8>.$>_\bjSNZik#;%Qb?u)>.c=kiT;_?hec/]gT(W9?!C&FJ*gCcHJ_,f],'nH/=&2E[6
%"[DL9FZ>iQQelD4(%TF3dk$@/iqdiL,ReQ&+cg.fZOg.(EbA(ugUK5A](o-=QT%]6lC7<84r:BoGQ,^S+oA29ZiC!R=6*^`^SCei
%).0[Vrg[oKjZiQVEqN6.Sm;9D^F4$se%]U%Ie$L2QtH?Zqj72]l.(:[oC"OR]/Ik)fmE7MAt-sB0I<)>(iL2%atd7g1WIF*9k=`G
%CPc`!,iku%&UKud!\aH_>J)LS+:+bSF!C".=$nsM+6QeH\sSgUp(p[*Sf?aafLZr]XkTbWn`a]B'Beu,B0;YDro%\]iZEX'm)@!@
%RebtZ5CE`c^=Drgj0Y35[('OZ1G@Lh]I<5Ib7+gS9_%&4nNpRM[?Xs[O[X]%$V$b(N5H'g(GS0L-<(e`Q$aXuKeb_k,qa`sMdVEo
%\4pL6oN:l"#sAXE@)2nud95^:lZZB:I$%DCUG`6/YZ37u&`)?e9ka#r3CqD8CE^$kYlQT.#IhO`ORf5QhEP^p@fA7-[,dlE4u#Pl
%Js,DCg")dclhV7o5-(5.8-sVoJX_B;;TZ_NjqP=oCeobTpq.LfKP@DQA6:N?qO]Q?*a0!&*7"]4MSl2^*70dM1Gc./o;MK4.\"sO
%m_#_#=\]$3&o)r\clV/,OfKW6=TdHCjZ>C/%L\d4UJ3@UKI&ZS%f6!:fM6YDFNDe6HoI,h%]/^$Eu>6E,<8mcggQeUQY"cQY%X-=
%Ai^,h'5SF;?a^ki6<5g;\fi`JELMWVY8,EW/7[e:XFRG_!hM;CQnp/I=[:M>qJ85,pl*nQ:6t5Prfo<=BgLGoKBu+>02nNC0SKW,
%8cMc?H\`I>('fA/JqmtBq&t\LP52]?I3MBL\cq*[CgDH)o_*+%p@X]dP;RL_DnMt8=Arp0K;?j7c-U+=]HeE84;O2DPZ'Cn;5!RD
%Bh$;N"QaIgh0nDAHdPX"D;>B5CitA'n@?ag![dcd<j[1qW[ZFFlp2J:RMVsE/<D0ZRYps+b2QV,>2SIRGQkC*=iEC"Tb:UmpsZ*=
%5q)@Q1erNsVHJ4LLO:[6G\17hL*`b-o;]pO-PJIg)poWcV@8N?+@R3=>e_;F1W4Y$&Wj0>![e4CV4pYPb-Nil&GGAUP-^]_D)>$-
%TXLec:MK3[WVA3IOh&ssrH*5biIo`tDP[]\L]$e]feO#2\#cd/PhGEpa.I'U0BRL;>,:pi>96L>A,o`>(%5R4%UR"39%DTK5Rg)D
%Qc8q`d@SEeZ(>K\qTn_0Htkgt`u'l@8g[2f'$8'$5p(M%d#e0sMC?q7,bT]+jW9Zq^u#2bGL@V`(6NnSqU74Q\R&fC(==BV`]p#O
%(]@/`;"2`H1P`ujXNZu1A[2<OBu,@if?J+D=e-XHS5)_GSCGeM&4]'85m'-db0<d)(A#!c])Js>,OI80Re\2Zd>G*V[-ka"P#EWI
%MA`GHQB5)9?)Pr%%eI)11>M(g-d=B;M[f0Wdr<4H&_,Vgl=-\2)`Tfr;`>$fY3i[SE5sNNRB:D9UoFpbBO0Q4]!lA*#g'^2WN)On
%#>=>oUDP@ML2YdZ,K0=fJO_5H]Zhu8_2:*i:3Y4:hQ2V]S'nHn9C`_%i4e"G]$8Oqg%To7g]"U;`Fgj@n9Yr;H)Y,'+`Fp85tc1;
%4AF57,nW%Z=,UoAZpFP\9Q>io20AT9)Z!N>6XO]Oe<+[J@aG,0fB`G$MI]8MrSkbDL4*UXk1Zk_)1pBo"GarJW&9ZFQa>P2R5Qr/
%<pAC^WZ%4Vj37fo$O?#AN]k8^YZDNpjAfF_?1U'Z/(*OO&p$GP`l]ZW;g%HR/BYPE`_ViMQ"msZ$?HEb+/`q.fL*Y09;?J;.jUi;
%Rjgge,pIqi:6E$D%eHj:3$G+tn4k%Nm>k5VVg7U"q9N!u(3rD(rq$F)/cj1MRXmf/:W3!bA@%O!9WF0eR'<E3Y#3;`H;RLZH$WUE
%,;h;)WrUdd3$ard2H$3H?#t"ME5WGS$Qd9P-9QemS2OEFFe)#)TX#'WFh'K,XA7M0DPKG`&AtOa;h"bb>CSQCOAt<0k4Y^%Kaa3s
%h5Ba\f@WD`$Bd&>eopBb[l1L`Ree)F(,U8S/qsVE_2Jo+`h84,6W5IP)3)4hA[!luaqNn*E_/OO4P5]LGsBXS&/#2hOEf`<k.Mjs
%M%tMnIr4O!0j/FlprXr$AVj*]gG^9nJYa;qlHTMH_:<_$+^Iu2d`5rY>WGB]LAhh`0JYtb12_`1P:I9kX9+T\7('Mepfe%o]8^!R
%BZehDl>1j@)?n$bGPj0GSm%1Hg<Z4ZdW.9[%'<TWlBurqB<>2PQG>73!X3sf=uqo??57"8D4X"`6,:RI1O,=-H44aA_Sg65:%J/X
%?k-?N##hnKAjK>s`$2%7QH5MNI3k9Y;mDU-Ucog*6<*Fl7+"JYe&WjtVE$>cTOXXt&PYcF&&W0`[l1KBC@t\PXjjDJ%`Zs=&fH:a
%eZ#qa<D7:T@kchf;_[a*k*ps%?oFX2G?KnpX*)Ugf/!Ns6]soH)dD4c>V90^p6&Sed'ITrYA+hH_)W).\*0g4@\-fFZV!f<87cl3
%=sR)VHaIVZ;1-<=2UrZ[q0iO*aHYm/EUlLjlA`ZZrKo1R#E4[VLu1[tBCS<n/3jr<BlqMik:9rX7F[c`*d9'`LYboE[h0VkQEjTB
%+cGA2J<VN@/',onRC2t[-6\a5a6BZn2m4[\&=R5kLSGGH:*J;(8Jd%l[0.Q*38E7&/ugVG<6_`4Z<YQd;[fC!*))QC.ck>[&WelD
%nJo6A#FtsM:tn)_3c+)=HZHD<?eXE7lI=\:@lMDJZ<C(nK_?ptVg_jKMY^tkJ-!hb*UBpp-khA/QnA>(apfpsB(W&5)EQI-blq+m
%'md9MSLZKhjSXAU[07lrLt*dK(qs=09S1nsDjus$\pNBHReihD-gCnQC\k?c]Z_N3clD@CJCQD>Rq8Sd\;RC)DJ4lD/LBZq@Sm+C
%.rGnJi/Ybh/0JC5R!89IFBT+Nh"Y4)&1,p,V[JG.3c6rr4#Vj-fk^uS>?$V5(N^LEFI%<QZ/5=#=D_f5E%\Un/?(*770E<S[PH.m
%lAeGj-UNsMQiAVIiNk=.?Z[RNphS_g.>[fN2(1mrR?g/EC-9qGrV-Za-[d=!"QVc"<ld"u&RH^e#8VBPp,6<>:M.dHoVF5f9.&Ft
%VJK=Q3^c[=EP<>0i13kll#''C/_E+L%YMr0(T.sUQeL+O(G#@`"+?\ajeM'n:g+RUTAnS'r_?p4T"Vhd@$_\c"<'nm`gB`c)TeW2
%JZK&WMjm'j(u,u';`6[`PpFAkGBhfKnJ-CO/]X=a"]b3?DMhrV,bn'CbVeX5<@ro5U]6'ShmZIKZp\Y56Q[;WLA%3fl0>u??^cV+
%WjRq"Fn@q9[OD8bZ'/WpZdtQbN[<tOE7j+)6"m:t]J'NTd1l(CU,?-*:bn!XN\UlW0LrMbCKr7fX.--W/RK$KHWZL8-#c%;aW9FV
%6jCb\gr2*5)Lh;R@6D3SdRcrcfOL3Q7F>]dA(TW!ZUXr)lfA^4m03'0!k4VWlj?O5(fp'2\nHejaLn8,Vj4aC5D(55+AWmUND5bB
%-9M>L\:nIU]Le%A?A:[Z\6?4D2cqUDXg,8C4:/atK<B$q2L-_)2_J2"O8nJBXW4K9W4"[.H$nMen9A:h!,mM]p%#gkroY&UWU[]#
%M`!0GeI0QTXsUqG^2T89ofUjd$Yq<D&BD;nELS9_^`;5+E9ZnXcX,tE&c/gkgn0iTP4f!KHMsKG1?3_@cB37u!Cli`Blp'5A#iAe
%kYmDEh)q27j`O>mIFs3__=DM)i3n'@11A9`f];a?<QQMSLJ&m;qFsu$%";CqYQ[p3B3O2GE-jJ>O!i9QC!bI\1!dILCArT:;GWc0
%jD%XkMMb^oB`K`?85Ir`oQllY:2Q<crJG4$U;':X"GIHr`,^JJi7$pDIs`]]%7ObT1\EbF[&!#aL5m_lCb0^Gh&rOpGCc_XPg^-<
%NAOcGO)ti2F3(X:>:48JX5$6pPu=_j^5;bn%`@DF[[D!@&'YA)kVj!(qfSY%jj]b>eEXV^$LU,!E&aHCI'.6/5G'L*ep7aCh@uNa
%+O7%KS]oHh0;36fN%LQ<\XD@RG.'S`!M!KjG0mLk.+$dWN@q(fI<.PRS;GY27["Q!=^Ts)(27F$eK0[<N5@W^O1t.-R27W@b*B?=
%khrTX]-:Z&+V5hG8u"f<XuJG_$mfQ>VkhbBn&E&o&\LFhq"[%:bfV:d/t"e!9dat4jW(R:8;V5)%k9Qp3O3FQ'otb5RHR)`V;/b+
%O%'].S.np0!EBI."4Bu6K/j4g'eIG9^@Bj;2;SbpH/h]djrf(UfVp]<C6NcGi>dWYnNqI!gDCqQoZbqM'L4;d"r8^1#fin#7Po9b
%mG!D<7nE_b8q)`5nJZUZHhm9V!ni(aG'VoWUq$I1E7%\"O&6N<h(^bS67h=Do;n15g-N);V;R1PW'm5O(+i&B$*:;ge6U$i&icB>
%Jor%/V+LebD=\AoH\7&d-TjNH'FN[_fegc$WOL(6\:'9T5(%J^:$r_TLK8+=EffCD$.rkB9V*K,-`*(gMOh(0;"DZX94:O(/5#$i
%b"/8,1=h\6f"n$%X?l%XrE]!,e8A?_=!K?JbR6@uXeV_uJ:8Tj;,$<+"))pFV'4q=,'Xi66)V5UF$lSFhfX0Xc"`I4'[8f19qBN-
%76b`uiVca?s1Ze!9>?asR<O67*k6tA)@IA'%rCS=eK0Su4X==8DHd>`KF"8lX:N]W6lcrS]f:a8'TS,N8ih(uQ)VqL3V!PrL<;=f
%p=p@\(T%RADG>ptO)Nd68LC+@5(7b+[TGNVn86LKlL"#AHsMJ&Aa`.kUcJ!Vg98u^Kd^e@9Wl)U*P2g>iN[[/eQ@EkNd.1u-g,m8
%r,eB$DL#8h)F]Z/m?Dso];@W^PY_]QeJ3Lpl9lb#Tu"BE'KNc*BgkhEG[%tK/a*N@#;#D<$]mM/*VgJf`<p&Vk9N)`csoZcN;bJQ
%hCb[jW]LG?^]7Lg_;V?Z37CC$_q@H7I<!#0'+]0EOb$gRfUt>6R[A>A>3n$1M`)s[P<.!iV?85$M1/3N)\;ejSl;ujFa&+WR->&j
%7q!&g\#L3-YA"5ql<seeLj3lP]EWBQ[@^60m_neMh^UWb9*cVJ[KS""$]X"pDXr[j,truU=MbNU<(\A0#q,P($<q;AR9VCAbsd$b
%<^S%n2$h"JQsaC05'P+[C'Xp9b!RX=euGtG2R3C@Y\Xp8$K-^[_Z%(+1.'VR`L3DA;C=l?/@*(.YGA:#K0;sTRPJm=L66S7m'=]/
%"F:_9SlL^F6T/!aog#ALr,YUAfr[$Z$A*hOl-gu8%HNlp>6bn1r]1Sh`p,7R5f7L97_-0(+X46naM;^[TQB;@#ALlSS4o!aQtc!,
%Bs6%?;`j_aLS#E8':\Ok$1i1TM9_(2fsZ:tOWTR6!XaaC>m>^s)eBX5"I!db&,%`J%1?Pc7MVE);t9WN9tUp6Mc!TQS,OTlM^cuZ
%?eC^u?8BqeLjGVHSS1rGN,c3c7i[u]o-!PN/mS!=,q%L%-Dtj2S]Mjs:#>\TUi]rGO=Mg=.`#tJ=Y0uB(8GpEFeuh_c.ROD23IQ"
%^3M80rOI#82t*<BWcbJ(^9k-GR%Z97:VBVooJPFP^2GE*f8B6-p78+u^>8V.#$'puD5tK[ma!-2QoR,@`jT4XBo_W[@3P8)@\$\X
%a>G5q-arfh<)(^:Q2@cV=(EOk/;-3Bl@mcNYf`muq^RBCgO8CAD#Z8g!*u-YdG$;[@C:#&_3r1RfH?3n'P(Hf4hu"\r($<mfcj!^
%IOH/$j*$BYJhUG1GokNP04/F$^R.jsc2<,J"dU'8QopON1NR5p:4^q^ZS;/bji(4U^WDLi?H;0Rf:><W#CU%Z>6q/s/;MJB@md#l
%.]W?Oq/Ampph3d-aNr]_+h't$r3);Ol0Rat3Tal*`D'i@WcE5^RLG%B&ESH76`9"eTlg%Iq/u6l?9rG=FO2)[KIiK(!gbdl"LE%O
%oscDRpY19'@p]q0^i2<8M'c-f<pHGKdIJ3MjHm&"hn$DlI:!]ZiMYebP%^"NS*GCoa%HkE]$$8HZ![%U.T+LaC.Xpia,_CqT9[a1
%c!;Bo/DJtVf]GA(=>m]::Um^@[]e:@GKu6bQGg597u)fKefY5]/1cem8?B!1(.SX5_T,0fEjDoU.f]GKl&RtZ<j^a^R.JA/Z8_eA
%\[(_Z@rsilS*SI4'g%$(j<U+_&io_Z0#Qqf%rp=10S92c)]rLN+l<7s1,n5PDJ&5&L#Uf"^IB_\Euls!4<UJLjXEWrl8/YpOY"ps
%;(L0,oVg_Iq.Q#D0\q.OC'GMhZ)(rOAYmnk'!rnKn*>GGan*/nZ'=![)HVi7*Kndlfk+Ip$">(4-@H^,I\0_M,mXUT];cjpU(T<i
%4>B=*^AQOW<1+o.NV2tlZ(Wj\%9V"c.CLVOZPjR))1CNJBP>KNc]s>OR>>cgBK_osMt^"lQ7#F@Igd(M_7Fu\KAd+aoH/:7n)m[[
%`4KlmTG#"KBWVA.BLaC37R)V6Ym0V5"flP']V;:9okGbaM=LQ;T8%g:nMaq@iVIh/oV7sUKV/j*hF?-'2FoB2(%,e%C7.ct6[^+E
%RDVt\^@];P_onit\"#)P0'Y48*UbLS9iCTqMQToO\5+R.DK!)/,"OL,6P*V&f&=diohHq?oY\EaLHfNU&ajYCgL%4X;8%[gY<U<P
%N!tYZ;m1qNg\p0-@7^RnYkIWLMSTIQ5<dF2HiN=*a7r0E=#V.,LATV8[`QE?>n=qRq8S3[G_qKB`lAH/Ir.m'l-+Sd$2LWkKDs\N
%^]*nE5.ppU]C17Dn\a=mfD(j(*^9L_IsUk8++F1S^OGqUDa/^GiG[W0Iu&aWp/Z\?q]G7`I=--trSG<gp"f(dq#8/AJ,`+796$<o
%eZ\u7q`iqBqD[;]pW)aZIJiP`HM?/9hL5FE\9N>mX5A;Lp[RD25PML*c%#T7LQC7UH$K6>LWb2=q`fN/g\q`8:Qf&_l7[VdqqIUt
%IJj'@s77o$rF,_WkIfsT-%D0>O8?<QenW=kM:]K=nGOFnr:%J@9Zj2]nksB*Rs2XGmSA>Br4oZ%C4EN9PZ^6!55/H'TDr<jQTj'o
%-1a7u-mRE2qJgi\N;rL]hu</<T)US1q0t/k8-T#kgCo).f,qa(h*:l.9;cOKnUJ+&j+$gkLNiKBGiG?fL0D:dMa$jtIoH@@?[_t/
%2t&qYpu1o354E37p[35Irr.[shfZ!i+907Irp]@7_lJ"=J$7eh_a!mFHM+ll55aB#^]391X$?O2n,Gg$qP4!"rp7u1lG*;Ls7d]8
%0CNGu1B~>
%AI9_PrivateDataEnd
